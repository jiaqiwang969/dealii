include/deal.II-translator/fe/fe_q_dg0_0.txt
[0.x.0]*
 实现标量拉格朗日有限元[2.x.0]，得到每个坐标方向上连续的、度数为[2.x.1]p的分片多项式的有限元空间加上局部常数函数的空间。这个类使用基于等距或给定支持点的张量积多项式来实现。
* 该类的标准构造函数取该有限元的度数[2.x.2]。或者，它可以取一个正交公式[2.x.3]，定义一个坐标方向上拉格朗日插值的支持点。
* 关于<tt>spacedim</tt>模板参数的更多信息，请查阅FiniteElement或Triangulation的文档。
* 关于这个元素的更多信息，请看。Boffi, D., et al. "Stokes Finite Elements的局部质量保护"。科学计算杂志（2012）：1-18。
* [1.x.0]
*构造函数创建一个TensorProductPolynomials对象，其中包括[2.x.4]度[2.x.5]的多项式的张量乘积加上局部常数函数。这个[2.x.6]对象提供形状函数的所有值和导数。在给出正交规则的情况下，构造函数创建一个TensorProductPolynomialsConst对象，其中包括[2.x.7]拉格朗日多项式与[2.x.8]的支持点的张量乘积和一个局部常数函数。
* 此外，构造函数还填充了[2.x.9]、[2.x.10]的延长（嵌入）和[2.x.11]矩阵。
* [1.x.1]
* TensorProductPolynomialsConst所代表的形状函数的原始排序是张量乘法的编号。然而，单元格上的形状函数被重新编号，从支持点在顶点的形状函数开始，然后是在线上，在四边形上，最后（对于三维）在六边形上。最后，在单元格的中间有一个不连续形状函数的支持点。为了明确起见，这些编号列在下面。
* [1.x.2] [2.x.12] [2.x.13] 1D情况。 
* [1.x.3]
 
* [2.x.14] 二维情况。 
* [1.x.4]
 
* [2.x.15] 3D情况。 
* [1.x.5]
* 
* 自由度的支持点的各自坐标值如下。 [2.x.16] [2.x.17] 索引0：<tt>[ 0, 0, 0]/tt>； [2.x.18] 索引1：<tt>[ 1, 0, 0]/tt>； [2.x.19] 索引2：<tt>[ 0, 1, 0]/tt>； [2.x.20] 索引3：<tt>[ 1, 1, 0]/tt>； [2.x.21] 索引4。<tt>[ 0, 0, 1]</tt>; [2.x.22] 索引5：<tt>[ 1, 0, 1]</tt>; [2.x.23] 索引6。<tt>[ 0, 1, 1]</tt>; [2.x.24] 索引7：<tt>[ 1, 1, 1]</tt>; [2.x.25] 索引8：<tt>[ 1/2, 1/2, 1/2]</tt>; [2.x.26] [2.x.27] [1.x.6] [2.x.28] [2.x.29] 1D情况。 
* [1.x.7]
* 索引3与索引2具有相同的坐标
* [2.x.30] 二维情况。 
* [1.x.8]
* 索引9的坐标与索引2的坐标相同
* [2.x.31] 3D情况。 
* [1.x.9]
* 中心顶点的编号为26和27。
* 自由度的支持点的各自坐标值如下。 [2.x.32] [2.x.33] 索引0：<tt>[0, 0, 0]</tt>; [2.x.34] 索引1：<tt>[1, 0, 0]</tt>; [2.x.35] 索引2：<tt>[0, 1, 0]</tt>; [2.x.36] 索引3：<tt>[1, 1, 0]/tt>; [2.x.37] 索引4: <tt>[0, 0, 1]</tt>; [2.x.38] 索引5：<tt>[1, 0, 1]</tt>; [2.x.39] 索引6。<tt>[0, 1, 1]</tt>; [2.x.40] 索引7：<tt>[1, 1, 1]</tt>; [2.x.41] 索引8：<tt>[0, 1/2, 0]/tt>; [2.x.42 ] 索引9：<tt>[1，1/2，0]/tt>；[2.x.43] 索引10：<tt>[1/2，0，0]/tt>；[2.x.44] 索引11：<tt>[1/2，1，0]/tt>；[2.x.45 ] 索引12：<tt>[0，1/2，1]</tt>；[2.x.46] 索引13：<tt>[1，1/2，1]</tt>；[2.x.47] 索引14：<tt>[1/2，0，1]</tt>；[2.x.48 ] 索引15：<tt>[1/2, 1, 1]/tt>; [2.x.49] 索引16：<tt>[0, 0, 1/2]/tt>; [2.x.50] 索引17：<tt>[1, 0, 1/2]/tt>; [2.x.51 ] 索引18：<tt>[0, 1, 1/2]</tt>; [2.x.52] 索引19：<tt>[1, 1, 1/2]</tt>; [2.x.53] 索引20：<tt>[0, 1/2, 1/2]/tt>; [2.x.54 ] 索引21：<tt>[1，1/2，1/2]</tt>; [2.x.55] 索引22：<tt>[1/2，0，1/2]</tt>; [2.x.56] 索引23：<tt>[1/2，1/2]</tt>; [2.x.57 ] 索引24：<tt>[1/2, 1/2, 0]</tt>; [2.x.58] 索引25：<tt>[1/2, 1/2, 1]</tt>; [2.x.59] 索引26：<tt>[1/2, 1/2]</tt>; [2.x.60 ] 索引27：<tt>[1/2, 1/2, 1/2]</tt>; [2.x.61] [2.x.62] [1.x.10] [2.x.63] [2.x.64] 1D情况。 
* [1.x.11]
 
* [2.x.65] 二维情况。 
* [1.x.12]
* [2.x.66] [1.x.13] [2.x.67] [2.x.68] 一维情况。 
* [1.x.14]
* 索引5与索引3具有相同的坐标
* [2.x.69] 二维情况。 
* [1.x.15]
* 索引21与索引20具有相同的坐标 * [2.x.70] 

 
* [0.x.1]*
   度数为[2.x.71]的张量积多项式加上局部常数函数的构造器。 
* [0.x.2]*
   用于支持点为[2.x.72]的张量积多项式的构造器，加上基于一维正交公式的局部常数函数。有限元的程度是<tt>points.size()-1</tt>。  注意，第一个点必须是0，最后一个是1。 
* [0.x.3]*
   返回一个唯一标识有限元的字符串。该类返回<tt>FE_Q_DG0<dim>(degree)</tt>，[2.x.73]和[2.x.74]用适当的值替换。 
* [0.x.4]*
   返回从给定的有限元插值到现在的矩阵。 然后矩阵的大小是[2.x.75]乘以<tt>source.n_dofs_per_cell()</tt>。    这些矩阵只有在源元素也是[2.x.76]FE_Q_DG0元素时才能使用。否则，会抛出一个[2.x.77]类型的异常。 
* [0.x.5]*
   如果形状函数[2.x.79]在面[2.x.80]的某处有非零函数值，该函数返回[2.x.78]。  
* [0.x.6]*
   返回该元素的常数模式列表。对于这个元素，尽管该元素是标量的，但有两个常量模式。第一个常数模式是通常FE_Q基础的所有1，第二个常数模式只使用不连续部分。 
* [0.x.7]*
    [2.x.81] [2.x.82].   
* [0.x.8]*
   返回 restriction_is_additive 标志。只有最后一个成分是真的。 
* [0.x.9]*
   仅供内部使用。它的全称是[2.x.83]函数，它创建了[2.x.84]向量，在构造函数内需要传递给[2.x.85]FiniteElementData的构造函数。 
* [0.x.10]

