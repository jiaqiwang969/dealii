include/deal.II-translator/fe/mapping_fe_0.txt
[0.x.0]*
 这个类在三角形的所有单元上一致使用用户提供的有限元来实现多项式映射。
* 如果人们用与离散化相同的FiniteElement初始化这个类，就会得到一个等参量映射。
* 如果用FE_Q(degree)对象来初始化这个类，那么这个类就等同于MappingQGeneric(degree)。请注意，这里没有增加利用有限元的张量结构的优化。
* 

* 
* [2.x.0] 目前，只对张量程度==1和n_components==1的元素实现。
* 

* 
* [2.x.1] 

* 
* [0.x.1]*
   构建器。 
* [0.x.2]*
   复制构造函数。 
* [0.x.3]*
   返回映射的程度，即传递给构造函数的有限元的程度。 
* [0.x.4]*
   总是返回[2.x.2]，因为这个类中的函数的默认实现保留了顶点位置。 
* [0.x.5]*
    [2.x.3] 参考单元和实数单元之间的映射点[2.x.4] 。  
* [0.x.6]*
    [2.x.5]   
* [0.x.7]*
    [2.x.6] 将张量从参考坐标转换为实坐标的函数 [2.x.7]   
* [0.x.8]*
       
* [0.x.9]*
    [2.x.9] 与FEValues的接口 [2.x.10].   
* [0.x.10]*
   多项式映射的内部数据的存储。见[2.x.11]的广泛描述。    对于当前的类，InternalData类存储了对象创建时（在get_data()中）计算一次的数据，以及类希望从调用fill_fe_values()、fill_fe_face_values()或fill_fe_subface_values()之间存储的数据，直到以后可能从有限元调用转化()等函数。后一类的成员变量被标记为 "可变"。 
* [0.x.11]*
     构造函数。   
* [0.x.12]*
     根据给定的参数，初始化对象中与单元格数据相关的成员变量。        该函数还调用compute_shape_function_values()来实际设置与映射形状函数的值和导数相关的成员变量。   
* [0.x.13]*
     根据给定的参数，初始化对象中与单元格和面的数据有关的成员变量。为了初始化单元格数据，本函数调用initialize()。   
* [0.x.14]*
     计算用于映射的形状函数的值和/或导数。   
* [0.x.15]*
     正交点的形状函数。形状函数是按张量积顺序排列的，因此必须对顶点重新排序以获得变换。   
* [0.x.16]*
     正交点的形状函数。见上文。   
* [0.x.17]*
     形状函数在正交点的梯度。见上文。   
* [0.x.18]*
     形状函数在正交点的梯度。见上文。   
* [0.x.19]*
     形状函数在正交点的二阶导数。见上文。   
* [0.x.20]*
     形状函数在正交点的二阶导数。见上文。   
* [0.x.21]*
     形状函数在正交点的三次导数。见上文。   
* [0.x.22]*
     形状函数在正交点的三阶导数。见上文。   
* [0.x.23]*
     形状函数在正交点的第四次导数。见上文。   
* [0.x.24]*
     形状函数在正交点的四次导数。见上文。   
* [0.x.25]*
     返回这个对象的内存消耗估计值（以字节为单位）。   
* [0.x.26]*
     形状函数的值。通过函数访问 [2.x.12] 计算一次。   
* [0.x.27]*
     形状函数导数的值。通过函数访问 [2.x.13] 计算一次。   
* [0.x.28]*
     形状函数二次导数的值。通过函数[2.x.14] second_derivative访问。        计算一次。   
* [0.x.29]*
     形状函数第三导数的值。通过函数[2.x.15] second_derivative访问。        计算一次。   
* [0.x.30]*
     形状函数第四导数的值。通过函数[2.x.16] second_derivative访问。        计算一次。   
* [0.x.31]*
     单位切向量。用于计算边界形式和法向量。        填充一次。   
* [0.x.32]*
     底层有限元。   
* [0.x.33]*
     映射的多项式程度。   
* [0.x.34]*
     形状函数的数量。   
* [0.x.35]*
     每个正交点上的协方变换的张量。    存储的矩阵是Jacobian G^{-1}，其中G = Jacobian^{t}     Jacobian，是地图的第一基本形式；如果dim=spacedim，则还原为Jacobian矩阵的转置，其本身被存储在该结构的[2.x.17]域中。        在每个单元格上计算。   
* [0.x.36]*
     每个正交点上的禁忌变换的张量。不变矩阵是变换的雅各布系数，即[2.x.18] 。        在每个单元上计算。   
* [0.x.37]*
     供内部使用的辅助向量。   
* [0.x.38]*
     在 [2.x.19] cell_of_current_support_points上存储映射形状函数的支持点。   
* [0.x.39]*
     存储[2.x.20]的单元格。   
* [0.x.40]*
     每个正交点中的雅各布系数的行列式。如果#update_volume_elements就会被填满。   
* [0.x.41]*
     投射的正交权重。   
* [0.x.42]*
    [2.x.21]   
* [0.x.43]*
   用作单元格映射的形状函数的多项式的程度。 
* [0.x.44]*
   返回映射的支持点的位置。 
* [0.x.45]

