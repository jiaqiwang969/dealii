include/deal.II-translator/grid/grid_tools_cache_0.txt
[0.x.0]*
   一个用于缓存三角测量的计算密集型信息的类。    这个类将一个信号附加到构造时传递的Triangulation上，以跟踪细化的变化，并允许用户查询一些使用GridTools命名空间中的函数构造的数据结构，这些数据结构只计算一次，然后在这个类中缓存，以便在Triangulation没有变化时快速访问。    请注意，这个类只注意到底层三角剖分因[2.x.0]信号被触发而发生变化。    如果三角剖分因其他原因而改变，例如，因为你将其与MappingQEulerian对象一起使用，该对象通过其自身的变换看到顶点，或者因为你手动改变了一些顶点位置，那么这个类中的一些结构就变得过时了，你将不得不通过手动调用mark_for_update()方法将它们标记为过时。 
* [0.x.1]*
     构造函数。        如果你提供了可选的`mapping`参数，那么只要需要映射，就会使用这个参数。         [2.x.1] tria 用于存储信息的三角形 [2.x.2] mapping 计算缓存对象时使用的映射。   
* [0.x.2]*
     销毁器。   
* [0.x.3]*
     确保在随后调用这个类中定义的`get_*'函数时，标记为更新的对象被重新计算。        注意，当你调用这个函数时，没有任何工作被执行。实际的数据结构会在你下次调用相应的`get_*`方法时进行计算。         [2.x.3]标志 更新的标志是什么？   
* [0.x.4]*
     返回由[2.x.4]计算的缓存的顶点到单元格图。    
* [0.x.5]*
     返回由[2.x.5]计算的缓存的顶点到单元格中心的方向。    
* [0.x.6]*
     返回由[2.x.6]计算的已使用顶点的缓存图。    
* [0.x.7]*
     为顶点返回缓存的RTree对象，使用三角形的已用顶点构建。   
* [0.x.8]*
     返回缓存的单元格边界框的RTree对象，使用存储的三角形的活动单元格迭代器构建。对于[2.x.7]对象，该函数也将返回鬼魂和人工单元的边界框。   
* [0.x.9]*
     返回包含本地拥有的活动单元的边界盒的缓存RTree对象，该对象使用存储的三角形的活动单元迭代器构建。        与前一个函数不同的是，这个函数只使用本地拥有的单元格来构建RTree，即不包括幽灵或人工单元。这两个函数在串行计算中返回相同的结果。   
* [0.x.10]*
     返回包含每个顶点所连接的子域ID的整数集的向量。这个特征在粒子处理程序中被广泛使用，以检测必须在哪些处理器上建立幽灵粒子。   
* [0.x.11]*
     返回一个对存储的三角图的引用。   
* [0.x.12]*
     返回一个对存储的映射的引用。   
* [0.x.13]*
     这个函数返回一个对象，该对象允许识别并行计算中的哪些进程可能拥有围绕给定点的单元。这个对象的元素是
* 
* - 一个Rtree
* 
* 是成对的包围盒，表示覆盖平行三角形的全部或部分本地部分的区域，以及一个无符号的int，代表拥有在给定包围盒内的单元的进程或子域。        给定一个[2.x.8]上的点，这棵树允许识别一个或几个候选进程，对于这些进程，该点位于本地拥有的单元上。        构建或更新rtree需要调用[2.x.9]，它使用[2.x.10]的集体操作在所有进程之间交换边界盒。    因此，这个函数必须由所有进程同时调用。        本地边界盒是通过从get_locally_owned_cell_bounding_boxes_rtree()返回的rtree对象中提取指定的[2.x.11]来构造的。注意，[2.x.12]在这里不是指三角形的级别，而是指RTree对象的级别（例如，见https://en.wikipedia.org/wiki/R-tree）。   
* [0.x.14]*
     追踪下一步需要更新的内容。   
* [0.x.15]*
     一个指向三角结构的指针。   
* [0.x.16]*
     在三角图上计算时使用的映射。   
* [0.x.17]*
     存储顶点到单元格的映射信息，由[2.x.13]生成。    
* [0.x.18]*
     存储顶点到单元格的中心方向，由[2.x.14]生成。    
* [0.x.19]*
     一个覆盖整个网格的rtree对象的集合。        地图的每个条目是由函数extract_rtree_level()应用于函数get_locally_owned_cell_bounding_boxes_rtree()返回的rtree构建的，输入的是指定级别。   
* [0.x.20]*
     存储由[2.x.15]生成的三角形的使用顶点。    
* [0.x.21]*
     存储一个RTree对象，其中包含三角形的使用顶点。   
* [0.x.22]*
     存储一个RTree对象，包含三角形的单元格的边界框。   
* [0.x.23]*
     存储一个RTree对象，包含三角形中本地拥有的单元格的边界框。   
* [0.x.24]*
     存储一个[2.x.16]的[2.x.17]的整数，包含一个顶点连接到的所有子域的id。   
* [0.x.25]*
     存储三角化信号的状态。   
* [0.x.26]

