include/deal.II-translator/grid/connectivity_0.txt
[0.x.0]*
     几何单元实体的界面，重点是创建一个缩小的连接表。   
* [0.x.1]*
       默认的解构器。     
* [0.x.2]*
       维度为[2.x.0]的子实体的数量。      
* [0.x.3]*
       维度为[2.x.1]的子实体的顶点数量 [2.x.2] 。      
* [0.x.4]*
       维度为[2.x.3]的子实体的几何实体类型 [2.x.4] * [0.x.5]。      
* [0.x.5]*
       [2.x.5]表面的线的数量。     
* [0.x.6]*
       2.x.6]面的[2.x.7]行的索引。     
* [0.x.7]*
       2.x.9]面的[2.x.8]线的顶点指数。     
* [0.x.8]*
     对线的实现。   
* [0.x.9]*
     对三角形的实现。   
* [0.x.10]*
     对四边形的实现。   
* [0.x.11]*
     对四面体的实现。   
* [0.x.12]*
     实现金字塔。   
* [0.x.13]*
     楔形的实现。   
* [0.x.14]*
     六面体的实现。   
* [0.x.15]*
     压缩的行存储稀疏矩阵。这个类类似于SparsityPattern，但是根据需要在这里减少到最低限度。
* 
* - 在设置连接性的背景下
* 
* - 并允许直接简化对条目的访问。   
* [0.x.16]*
       默认的构造函数。     
* [0.x.17]*
       允许直接设置内部字段的构造函数。     
* [0.x.18]*
     用于存储缩小的连接表的类。        一个完整的连接表包含了维度为d的实体和维度为d'的实体的所有可能的连接性，0<=d,d'<=dim。    然而，在这个库中，我们只需要以下类型的连接性。
* 

* 
* 

* 
* 

 
 

 
 

 
 

 
 
* - 二维实体的二维邻居（通过面孔连接）。
* 

* 
 

 
 

 
 

 
 

 
 

 
* 
* - d维实体与它的(d-1)维边界实体的关系
* 

* 
* 

 
* 

 
 

 
 

 
 

 
 
* - 四个 (2
* 
* - 3D），线（1
* 
* - 2D/3D）到顶点（0），以便能够在[2.x.10]期间处理用户提供的SubCellData。 我们将计算完整连接表的相应条目的表称为缩小表。        对于1D-3D来说，缩减表的条目如下： 1D :    | 0 1 2D:    | 0 1 2 3D:    | 0 1 2 3
* 

* 
* 

* 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
* 
* - -+-----
* 

* 
* 

* 
* 

 
 

 
 

 
 

 
* 
* - -+-------
* 

* 
* 

* 
* 

 
 

 
 

 
 

 
* 
* - -+-------- 0 | 0 | 0 | 1 | x n 1 | x 1 | x 2 | s x n 2 | s x 3 | x n，用标记突出显示条目的原因 x:=边界实体; n:=相邻实体; s:=子单元数据    
* [0.x.19]*
     确定所有单元格的邻居。         [2.x.11] 连通性细胞面 [2.x.12] 连通性细胞-细胞（对于每个细胞面，它包含相邻细胞的索引或
* 
* - 用于边界面)    
* [0.x.20]*
     建立尺寸为d的实体（0<d<dim）。实体是由一组顶点描述的。        此外，该函数为每个单元确定它由哪个d维实体组成，以及它相对于单元的方向。   
* [0.x.21]*
     调用正确的模板化函数，以便能够使用[2.x.13]而不是[2.x.14]。    
* [0.x.22]*
     构建由以下内容描述的表面线。
* 

* 
* 

* 
* 

 
 

 
 

 
 

 
* 
* - 连接性四
 
-> 行
* 

* 
* 

* 
* 

 
 

 
 

 
 

 
* 
* - 线条相对于四边形的方向 此外，四边形的类型被确定。   
* [0.x.23]*
     为给定的维度建立缩小的连接表 [2.x.15] 这个函数的灵感来自于Anders Logg的出版物《计算网格的高效表示》和FEniCS的DOLFIN网格实现。它经过了强烈的调整，以有效地完全满足我们的连接需求，同时牺牲了那里的一些灵活性。   
* [0.x.24]*
     预处理步骤，去除模板参数dim。   
* [0.x.25]

