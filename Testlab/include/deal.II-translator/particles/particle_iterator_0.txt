include/deal.II-translator/particles/particle_iterator_0.txt
[0.x.0]*
   一个用于迭代粒子的类。与ParticleAccessor类一起，它被用来隐藏粒子类和粒子容器的内部实现。 
* [0.x.1]*
     空的构造函数。这样的对象是不能使用的!    
* [0.x.2]*
     迭代器的构造函数。接受一个对粒子容器的引用，以及一个对细胞-粒子对的迭代器。   
* [0.x.3]*
     解除引用操作符，返回一个访问器的引用。因此，用法类似于<tt>(*i).get_id ();</tt>。   
* [0.x.4]*
     去引用操作符，非[2.x.0]版本。   
* [0.x.5]*
     解除引用操作符，返回所指向的粒子的指针。    因此，用法类似于 <tt>i->get_id ();</tt> 有一个 [2.x.1] 和一个非 [2.x.2] 版本。   
* [0.x.6]*
     去引用操作符，非[2.x.3]版本。   
* [0.x.7]*
     等价比较。   
* [0.x.8]*
     不等式比较。   
* [0.x.9]*
     前缀<tt>++</tt>运算符。<tt>++iterator</tt>。该操作符将迭代器推进到下一个元素，并返回一个对<tt>*this</tt>的引用。   
* [0.x.10]*
     后缀<tt>++</tt>操作符。<tt>iterator++</tt>。该操作符将迭代器推进到下一个元素，但返回之前指向的元素的迭代器。   
* [0.x.11]*
     前缀<tt>\--</tt>操作符。<tt>\--iterator</tt>。这个操作符将迭代器移到前一个元素，并返回一个对<tt>*this</tt>的引用。   
* [0.x.12]*
     后缀<tt>\--</tt>操作符。<tt>iterator\--</tt>。这个操作符将迭代器移动到前一个元素，但返回一个迭代器到之前指向的元素。   
* [0.x.13]*
     将该类标记为双向迭代器，并声明一些别名，这些别名是迭代器的标准，被算法用来查询它们所工作的迭代器的具体内容。   
* [0.x.14]*
     对实际粒子的访问器。   
* [0.x.15]

