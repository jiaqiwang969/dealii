include/deal.II-translator/particles/utilities_0.txt
[0.x.0]*
   一个命名空间，用于提供处理ParticleHandler对象及其与DoFHandler对象耦合的工具的函数。 
* [0.x.1]*
     为粒子创建一个插值稀疏模式。        给出一个代表域[2.x.0]的三角形，一个[2.x.1]中的粒子处理程序，以及一个标量有限元空间[2.x.2]，计算组装矩阵[1.x.0]所需的稀疏模式，其中[2.x.3]是与`空间_dh`相关的有限元空间，索引`i`是由位置为`x_i`的粒子id给出的。        在矢量值有限元空间的情况下，必须进行插值的分量可以用分量掩码来选择。只支持原始的有限元空间。        当选择一个以上的分量时，产生的稀疏度将等于`particle_handler.n_global_particles() mask.n_selected_components()`乘以`space_dh.n_dofs()`，而相应的矩阵条目由[1.x.1 ] 其中`comp_j`是矢量值基函数`v_j`的唯一非零分量（等于`fe.system_to_component_index(j).first`），`k`对应于其在掩码选定分量中的索引，而[2.x.4]是`comp_j`方向上的单位矢量。        稀疏度 "是通过定位粒子处理程序中索引为`i'的粒子相对于嵌入三角形的位置来填充的[2.x.5]，并按照在掩码中选择的顺序，将其与组件掩码[2.x.6]中指定的所有局部自由度耦合[2.x.7]，如果一个粒子不在[2.x.8]内，它将被忽略，稀疏度的相应行将为空。        可以用[2.x.9]参数提供AffineConstraints类所支持的形式的约束。方法[2.x.10]被用来填充最终的稀疏度模式。   
* [0.x.2]*
     为粒子创建一个插值矩阵。        给出一个代表域的三角形[2.x.11]，一个[2.x.12]中的粒子处理程序，和一个标量有限元空间[2.x.13]，计算矩阵[1.x.2]，其中[2.x.14]是与`空间_dh`相关的有限元空间，索引`i`是由位置为`x_i`的粒子id给出。        在矢量值有限元空间的情况下，必须进行插值的分量可以用分量掩码来选择。只支持原始的有限元空间。        当选择一个以上的分量时，产生的稀疏度将等于`particle_handler.n_global_particles() mask.n_selected_components()`乘以`space_dh.n_dofs()`，而相应的矩阵条目由[1.x.3 ] 其中`comp_j`是矢量值基函数`v_j`的唯一非零分量（等于`fe.system_to_component_index(j).first`），`k`对应于它在掩码选定分量中的索引，[2.x.15]是`comp_j`方向上的单位矢量。        矩阵通过定位粒子处理程序中索引为`i`的粒子相对于嵌入三角的位置来填充[2.x.16]，并按照在掩码中选择的顺序将其与组件掩码[2.x.17]中指定的所有局部自由度耦合[2.x.18]。 如果一个粒子不在[2.x.19]内，它将被忽略，矩阵的相应行将为零。        可以用[2.x.20]参数提供AffineConstraints类所支持的形式的约束。方法[2.x.21]用于分配矩阵的条目以尊重给定的约束。   
* [0.x.3]*
     给定一个DoFHandler和一个ParticleHandler，在粒子的位置插值一个矢量场。结果存储在一个输出向量中，其大小与本地拥有的粒子数和活动部件数相对应。         [2.x.23] particle_handler 粒子处理程序，其粒子作为插值点。         [2.x.24] field_vector 要插值的场的矢量。这个向量必须与提供的dof_handler相一致。 [2.x.25] interpolated_field 在粒子位置的场的内插值。矢量的大小必须是n_locally_owned_particles乘以n_components [2.x.26] field_comps 一个可选的组件掩码，决定哪一个矢量场的子集被插值。   
* [0.x.4]

