include/deal.II-translator/A-tutorial/tutorial_0.txt
[0.x.0]*
  [2.x.0] 
* 初次接触deal.II？你可能想从教程[2.x.1]开始，一直到[2.x.2] 。在这一点上，你可以探索你感兴趣的功能，看看下面列出的大量程序。
* 交易.II教程包含了一系列的程序，每个程序都或多或少地建立在以前的程序之上，这些程序展示了库的各个方面。每个这样的例子都有以下结构。 [2.x.3] [2.x.4] [1.x.0] 程序的作用，包括数学模型，以及哪些编程技术是新的。   [2.x.5] [1.x.1] 广泛记录的源代码清单。   [2.x.6] [1.x.2] 程序的输出，包括注释和解释。   [2.x.7] [1.x.3] 剥去所有注释的源代码。 [2.x.8] 你可以浏览现有的教程程序[2.x.9] [2.x.10] 作为[1.x.4][1.x.5]，它显示了每个教程程序的主要概念是如何建立在以前的程序之上的（尽管每个程序也可能使用其他程序的次要部分，但没有特别的
* 在图中连接）。)    [2.x.11]如同[1.x.6][1.x.7]，提供每个程序的简短概要。   [2.x.12]或[1.x.8][1.x.9]。 [2.x.13] 
* 这些程序在你本地deal.II安装的[2.x.14]目录下。在编译库本身之后，如果你进入其中一个教程目录，你可以通过输入 [2.x.15] 来配置程序，并使用 [2.x.16] 运行它。后面的命令也会编译程序，如果还没有完成的话。不同目录中的CMakeLists.txt文件是基于[1.x.10]的。
* 

* 
* [2.x.17] 一些教程程序也共同组成了[1.x.11]。比起构成教程的程序，更多的，通常是更复杂的，但不太完善的，基于deal.II的程序也可以在 [2.x.18] 中找到。
* 

* [1.x.12] [2.x.19] TutorialConnectionGraph [1.x.13] 。
* 下图显示了教程程序之间的联系，以及它们的主要组成部分是如何相互建立的。点击任何一个方框都可以进入其中一个程序。如果你将鼠标指针悬停在一个方框上，就会出现该程序的简要描述。

* 
* [1.x.14]
* [1.x.15]br />

 
* [1.x.16]
* [1.x.17] [1.x.18]。
* [2.x.20] 
* 

* [1.x.19] [1.x.20] * [1.x.19] [1.x.20]。
* [1.x.21][1.x.22] [2.x.21] [1.x.23][1.x.24] [2.x.22] [1.x.25][1.x.26] [2.x.23] 。
 

* [1.x.27][1.x.28][2.x.24] 。
 

* 
* [1.x.29][1.x.30] [2.x.25]。
 

 
* [1.x.31][1.x.32][2.x.26] 
* [0.x.1]

