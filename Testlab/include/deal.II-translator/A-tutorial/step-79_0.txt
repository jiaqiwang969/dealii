include/deal.II-translator/A-tutorial/step-79_0.txt
[0.x.0]*
 [2.x.0]
* 本教程依赖于 [2.x.1] , [2.x.2] 。
* [1.x.0][1.x.1][1.x.2][1.x.3][1.x.4][1.x.5][1.x.6][1.x.7][1.x.8][1.x.9][1.x.10][1.x.11][1.x.12][1.x.13][1.x.14][1.x.15][1.x.16][1.x.17][1.x.18][1.x.19][1.x.20][1.x.21][1.x.22][1.x.23][1.x.24][1.x.25][1.x.26][1.x.27][1.x.28][1.x.29][1.x.30][1.x.31][1.x.32]
*[1.x.33][1.x.34][1.x.35] 。


* 弹性介质的拓扑优化是一种用于优化承受某种载荷的结构的技术。理想情况下，我们希望通过选择一个放置材料的区域[2.x.3]，使放置在结构上的最大应力最小。换句话说，[1.x.36][1.x.37][1.x.38] 。
* 这里，[2.x.4]是由外力[2.x.5]引起的身体内的应力，为了简单起见，我们假设材料是线性弹性的，因此[2.x.6]是应力-应变张量，[2.x.7]是小变形应变作为位移的函数[2.x.8] 。
*
* - 关于线性弹性的更多信息，请参见[2.x.9]和[2.x.10]。在上面的表述中，[2.x.11]是我们愿意提供的建造物体的最大材料量。最后一个约束是与应力[2.x.12]和力[2.x.13]有关的偏微分方程，它只是稳态力的平衡。
* 也就是说，上面的无穷大准则造成了一个问题：作为材料位置的函数，这个目标函数必然是不可微分的，使得优化的前景相当暗淡。因此，生态优化的一个常见方法是通过优化一个相关的问题找到一个近似的解决方案：我们希望最小化应变能量。这是对物体因其变形而储存的势能的衡量，但也可以作为对结构上总变形的衡量。
* [1.x.39][1.x.40][1.x.41] 。
* 目标函数的值是用有限元方法计算的，其中的解决方案是位移。这被放置在一个非线性求解器的循环中，求解的矢量表示材料的位置。
* [1.x.42][1.x.43] 。
*

* 在实际操作中，我们只能建造一些物体，在这些物体中，材料要么存在，要么不存在，在任何给定的点上都是如此。
*
* 也就是说，我们会有一个指示函数[2.x.14]来描述材料填充的区域，并且我们想通过优化问题来找到它。在这种情况下，优化问题就变成了组合问题，而且解决起来非常昂贵。相反，我们使用一种叫做Solid Isotropic Material with Penalization，或SIMP的方法。  [2.x.15]
* SIMP方法是基于允许材料存在于密度[2.x.16]在0和1之间的位置的想法。密度为0表明材料不存在，它不是结构的一部分，而密度为1表明材料存在。0和1之间的值并不反映我们在现实世界中可以创造的设计，但允许我们将组合问题变成一个连续问题。然后我们看一下密度值[2.x.17]，约束条件是[2.x.18] 。最小值[2.x.19]，通常选择在[2.x.20]左右，避免了出现无限应变能量的可能性，但小到足以提供准确的结果。
* 这个 "密度 "对介质弹性的影响的直接应用是将介质的刚度张量[2.x.21]简单地乘以给定的密度，即[2.x.22]。然而，这种方法经常给出密度值离0和1都很远的最佳解决方案。做到这一点的简单而有效的方法是将刚度张量乘以密度，并将其提高到某个整数的惩罚参数[2.x.23]，这样[2.x.24]。这使得密度值离0或1更远的时候就没有效果了。已经证明，使用[2.x.25]足够高，可以产生'黑白'的解决方案：也就是说，我们得到的最佳解决方案中，材料要么存在，要么不存在于所有点。
* 更多的材料应该总是提供一个具有较低应变能量的结构，因此inequality约束可以被视为一个等式，其中使用的总体积是最大体积。
* 使用这种密度思想也使我们能够重新构建优化问题的体积约束。使用SIMP后，优化问题就变成了下面的情况。
* [1.x.44][1.x.45][1.x.46][1.x.47]最后一个约束条件，即线性动量的平衡（我们将称之为弹性方程），给出了一种在密度[2.x.28]的情况下找到[2.x.26]和[2.x.27]的方法。
*[1.x.48][1.x.49] 。
* 在与时间无关的极限中，弹性方程为[1.x.50]在我们关心的情况下，我们将假设介质具有线性材料响应，在这种情况下，我们有[1.x.51]在我们下面要做的一切中，我们将始终考虑位移场[2.x.29]作为唯一的解决变量，而不是考虑[2.x.30]和[2.x.31]作为解决变量（像在混合计算中那样）。
*此外，我们将假设材料是线性各向同性的，在这种情况下，应力-应变张量可以用Lam&eacute;参数[2.x.32]来表示，以便
* [1.x.52]
* 关于这种转换的原理，见[2.x.33]。
* 对目标函数进行部分积分，得到[1.x.53]，然后将线性弹性方程代入其中，得到[1.x.54]，因为我们假设没有体力，这进一步简化为[1.x.55]，这是我们从这一点出发考虑的管理方程的最终形式。
*[1.x.56][1.x.57]。
*

* 通常情况下，拓扑优化问题的解决方案是依赖于网格的，因此该问题是不成立的。这是因为随着网格的进一步细化，往往会形成分形结构。随着网格分辨率的提高，最优解通常会获得越来越小的结构。对于这个问题，有一些竞争性的解决方法，但对于一阶优化来说，最流行的是灵敏度滤波器，而二阶优化方法则倾向于使用密度滤波器。
* 由于滤波器会影响应变能量（即目标函数）的梯度和Hessian，滤波器的选择对问题的解决有影响。作为二阶方法的一部分，密度滤波器的工作原理是引入一个未经过滤的密度，我们称之为[2.x.34]，然后要求密度是未经过滤的密度的卷积：[1.x.58]这里，[2.x.35]是一个算子，因此[2.x.36]是[2.x.37]在[2.x.38]周围地区的某种平均值。
*
* -即，它是[2.x.39]的平滑版本。
* 这可以防止棋盘游戏；过滤器的半径允许用户为我们寻找的最佳结构定义一个有效的最小光束宽度。
* [2.x.40]
*

* 这些图片表明，我们在这里发现的情况与在其他关于该主题的出版物[2.x.41]中通常看到的情况是一致的。也许更有趣的是，其结果看起来像一座桁架桥（除了我们在桁架的顶部施加负载，而不是像真正的桁架桥那样在底部施加负载，类似于 "甲板桁架 "桥），这表明几个世纪以来一直用于建桥的设计确实是基于我们现在可以证明在某种意义上是最佳的想法。
*

*[1.x.203][1.x.204]


* 上面显示的结果花了大约75次迭代才找到，考虑到每次迭代中解决大型线性系统的费用，这是很值得关注的。从演化过程来看，收敛过程确实有快速发生的时候，也有缓慢发生的时候。我们认为这是由于在何时和如何减少边界值方面缺乏精确性，以及我们对优点函数的选择不够理想。在未来，用LOQO障碍更新代替单调还原，以及用MarkovFilter代替优点函数将大大减少必要的迭代次数。
* 障碍物的减少在收敛的中间阶段最为敏感，这是有问题的，因为我们似乎需要它快速减少，然后缓慢减少，然后又快速减少。
* 其次，这里使用的线性求解器只是基于SparseDirectUMFPACK类的稀疏直接求解器。这在小问题上效果还不错，但是上面详述的优化问题的表述有相当多的变量，因此线性问题不仅大，而且在很多行中有很多非零项，即使在总体上仍然相对粗糙的网格上也是如此。因此，解算器的时间在计算中占主导地位，必须采用更复杂的方法来解决这个线性系统。
*

* [1.x.205][1.x.206] [2.x.42] 。
* [0.x.1]

