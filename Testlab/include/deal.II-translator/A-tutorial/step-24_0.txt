include/deal.II-translator/A-tutorial/step-24_0.txt
[0.x.0]*
 [2.x.0]
* 本教程依赖于 [2.x.1] 。
* [1.x.0][1.x.1][1.x.2][1.x.3][1.x.4][1.x.5][1.x.6][1.x.7][1.x.8][1.x.9][1.x.10][1.x.11][1.x.12][1.x.13][1.x.14][1.x.15][1.x.16][1.x.17][1.x.18][1.x.19][1.x.20]
*[1.x.21][1.x.22][1.x.23] 。


* 这个项目是由德克萨斯A&amp;M大学的Xing Jin的一个学生项目发展而来的。本程序的大部分工作是由她完成的。本教程的部分工作得到了美国国家科学基金会DMS-0604778的资助。
* 该计划是一个旨在模拟热声断层成像的项目的一部分。在热声断层扫描中，脉冲电磁能量被送入生物问题。组织吸收部分能量，组织中吸收能量最多的部分通过热弹性膨胀产生热声波。在成像方面，人们利用不同种类的组织，最重要的是健康和病变组织，吸收不同数量的能量，因此以不同的速度膨胀。实验设置是测量这些源在组织表面产生的压力波的振幅，并试图重建源的分布，这表明吸收器的分布，从而表明不同种类的组织。这个项目的一部分是将模拟数据与实际测量进行比较，因此必须解决 "前向问题"，即描述压力波在组织中传播的波浪方程。因此，本程序是[2.x.2]"[2.x.3]"的延续，其中首次介绍了波浪方程。
*

*[1.x.24][1.x.25]


* 某一位置的温度，忽略热扩散，可以最好地表述为
* [1.x.26]
* 这里[2.x.4]是密度；[2.x.5]是比热；[2.x.6]是传递的微波能量带来的温升；[2.x.7]是加热函数，定义为从沉积的微波能量转化为每一时间和体积的热能。
* 让我们假设组织具有异质的介电特性，但具有同质的声学特性。声学同质介质中的基本声学生成方程可以描述如下：如果[2.x.8]是矢量值的位移，那么组织肯定会对压力的变化做出加速反应：[1.x.27]此外，它由于压力过大而收缩，并根据温度的变化而膨胀：[1.x.28]这里，[2.x.9]是一个热膨胀的系数。
* 现在让我们假设，加热只发生在一个比波在组织中传播短得多的时间尺度上（即加热组织的微波脉冲的时间长度比波穿过该领域的时间短得多）。在这种情况下，加热速率[2.x.10]可以写成[2.x.11]（其中[2.x.12]是微波能量的吸收强度图，[2.x.13]是狄拉克三角函数），与上面的第一个方程一起，将产生温度[2.x.14]在时间[2.x.15]的瞬时跳跃。使用这一假设，并将所有方程放在一起，我们可以将上述内容写成并合并为：[1.x.29]其中[2.x.16] 。
* 这个有点奇怪的方程，右边是狄拉克三角函数的导数，可以改写成一个初值问题如下：[1.x.30] 。
* (这个转化为初值问题的推导在本介绍的最后作为附录给出。)
* 在逆向问题中，人们希望恢复的是初始条件[2.x.17]，因为它是一张吸收微波能量的地图，因此可能是辨别健康和病变组织的指标。
* 在实际应用中，热声源与介质相比是非常小的。  因此，热声波的传播路径可以近似为从源头到无限远。此外，检测器离源头只有有限的距离。我们只需要评估热声波通过检测器时的数值，尽管它们仍在继续延伸。因此，这是一个我们只对无限介质的一小部分感兴趣的问题，而且我们不希望某个地方产生的波在我们认为感兴趣的领域的边界上被反射。相反，我们希望只模拟包含在感兴趣的领域内的那部分波场，而碰到该领域边界的波则不受干扰地通过边界。换句话说，我们希望边界能吸收撞击它的任何波。
* 一般来说，这是一个困难的问题：好的吸波边界条件是非线性的，并且/或者在数值上非常昂贵。因此，我们选择了一个简单的一阶近似吸收边界条件，即[1.x.31]这里，[2.x.18]是边界的法向导数。应该指出的是，这不是一个特别好的边界条件，但它是为数不多的可以合理简单实现的边界条件之一。
*

*[1.x.32][1.x.33]


* 与[2.x.19]一样，首先引入第二个变量，定义为压力势的导数：[1.x.34] 。
* 有了第二个变量，我们就可以将正向问题转化为两个独立的方程：[1.x.35] 。
* 带有初始条件：[1.x.36] 。
* 注意，我们在这里引入了一个右手边[2.x.20]，以显示如何在一般情况下推导出这些公式，尽管在应用于热声问题时[2.x.21]。
* 使用[2.x.23]中介绍的一般[2.x.22]方案，这个模型的半简化、弱化版本是：[1.x.37] 。
* 其中[2.x.24]是一个任意的测试函数，我们使用吸收边界条件进行部分积分：吸收边界条件通过使用[1.x.38]被纳入弱形式。
* 由此，我们通过引入有限数量的形状函数得到离散模型，并得到[1.x.39] 。
* 这里的矩阵[2.x.25]和[2.x.26]与[2.x.27]一样，边界质量矩阵[1.x.40]是使用吸收性边界条件的结果。
* 以上两个方程可以用矩阵形式重写，压力及其导数为未知矢量：[1.x.41] 。
* 其中[1.x.42] 。
* 通过简单的转换，就可以得到压力势及其导数的两个方程，就像在前面的教程程序中一样：[1.x.43] 。
*
*

*[1.x.44][1.x.45]


* 与[2.x.28]相比，本程序增加了对简单的吸收性边界条件的处理。此外，它还处理了从实际实验测量中获得的数据。为此，我们需要在实验也评估了真实压力场的点上评估该解决方案。我们将看到如何使用[2.x.29]函数在下面进一步做到这一点。
*


*[1.x.46][1.x.47]


* 在推导波浪方程的初值问题时，我们最初发现该方程有一个狄拉克三角函数的导数作为右手边：[1.x.48]为了看看如何将这个单一方程转化为具有初始条件的PDE的通常状态，让我们假设物理上相当合理的介质最初是静止的，即[2.x.30]为[2.x.31]。接下来，让我们形成两边相对于时间的不定积分：[1.x.49]这立即导致声明[1.x.50]，其中[2.x.32]是使[2.x.33] 。接下来，我们从[2.x.34]到[2.x.35]形成时间上的（定）积分，以找到[1.x.51]如果我们使用三角洲函数的属性，即[2.x.36]，并假设[2.x.37]是时间上的连续函数，我们发现当我们让[2.x.38]归零时，[1.x.52]换言之，使用[2.x.39]，我们找回了初始条件[1.x.53]。同时，我们知道，对于每一个[2.x.40]，delta函数都是零，所以对于[2.x.41]，我们得到了方程[1.x.54]。
* 最后，由于我们这里有一个具有两个时间导数的方程，我们仍然需要第二个初始条件。为此，让我们回到方程[1.x.55]，从[2.x.42]到[2.x.43]进行时间积分。这导致了[1.x.56]使用[1.x.57]形式的积分，其中我们使用[2.x.44]并插入[2.x.45]，我们看到，事实上[1.x.58]
* 现在，让[2.x.46]。假设[2.x.47]是一个连续的时间函数，我们看到[1.x.59]，因此[1.x.60]。然而，我们假设[2.x.48].因此，我们得到作为第二个初始条件，[1.x.61]完成了方程组。
*

* [1.x.62] [1.x.63]。
* [1.x.64] [1.x.65]。


*
* 以下内容之前都已涉及。



* [1.x.66]

* 这是唯一的一个新的。我们将需要一个定义在GridTools命名空间的库函数，用来计算最小单元格直径。
*


* [1.x.67]

* 最后一步和以前的所有程序一样。
*


* [1.x.68]
*
* [1.x.69] [1.x.70]。


*
* 主类的第一部分与[2.x.49]中的完全一样（除了名字）。
*


* [1.x.71]
*
* 以下是新的内容：首先，我们需要从吸收性边界条件中得出的边界质量矩阵[2.x.50]。同样，由于这次我们考虑的是一个现实的介质，我们必须有一个衡量波速的标准[2.x.51]，它将进入所有与拉普拉斯矩阵（我们仍然定义为[2.x.52]）有关的公式。
*


* [1.x.72]

* 最后我们要注意的是，我们想在一定数量的检测器位置评估解决方案。我们需要一个数组来保存这些位置，在这里声明并在构造函数中填充。
*


* [1.x.73]
*
* [1.x.74] [1.x.75]。


*
* 像往常一样，我们必须定义我们的初始值、边界条件和右手函数。这次事情有点简单：我们考虑的是一个由初始条件驱动的问题，所以没有右手函数（尽管你可以在[2.x.53]中查找，看看如何做到这一点）。其次，没有边界条件：域的整个边界由吸收性边界条件组成。这就只剩下初始条件了，那里的事情也很简单，因为对于这个特殊的应用，只规定了压力的非零初始条件，而没有规定速度的非零初始条件（在初始时间是零）。   
* 所以这就是我们所需要的：一个指定压力初始条件的类。在本程序考虑的物理环境中，这些是小的吸收器，我们将其建模为一系列的小圆圈，我们假设压力盈余为1，而其他地方没有吸收，因此没有压力盈余。我们是这样做的（注意，如果我们想把这个程序扩展到不仅可以编译，而且可以运行，我们将不得不用三维源的位置来初始化源）。
*


* [1.x.76]
*
* [1.x.77] [1.x.78]。


*
* 让我们再从构造函数开始。设置成员变量是很直接的。我们使用矿物油的声波速度（单位为毫米/微秒，是实验性生物医学成像中的常用单位），因为我们想和输出的许多实验都是在这里进行的。再次使用Crank-Nicolson方案，即theta被设定为0.5。随后选择时间步长以满足[2.x.54]：这里我们将其初始化为一个无效的数字。
*


* [1.x.79]
*
* 构造函数中的第二个任务是初始化存放检测器位置的数组。这个程序的结果与实验进行了比较，其中探测器间距的步长为2.25度，对应于160个探测器位置。扫描圆的半径被选为中心和边界之间的一半，以避免不完善的边界条件带来的剩余反射破坏我们的数值结果。     
*然后按顺时针顺序计算探测器的位置。请注意，下面的内容当然只有在我们以2d计算时才有效，这个条件我们用一个断言来保护。如果我们以后想在三维中运行同样的程序，我们就必须在这里添加代码来初始化三维中的检测器位置。由于断言的存在，我们不可能忘记这样做。
*


* [1.x.80]
*
* [1.x.81] [1.x.82]。


*
* 下面的系统几乎是我们在[2.x.55]中已经做过的，但有两个重要的不同之处。首先，我们必须在原点周围创建一个半径为1的圆形（或球形）网格。这并不新鲜：我们之前在[2.x.56]和[2.x.57]中已经这样做了，在那里我们还解释了PolarManifold或SphericalManifold对象如何在细化单元时将新点放在同心圆上，我们在这里也会使用。   
* 我们必须确保的一点是，时间步长满足[2.x.58]的介绍中讨论的CFL条件。在那个程序中，我们通过设置一个与网格宽度相匹配的时间步长来确保这一点，但是这很容易出错，因为如果我们再细化一次网格，我们也必须确保时间步长有所改变。在这里，我们自动做到了这一点：我们向一个库函数询问任何单元的最小直径。然后我们设置[2.x.59] 。唯一的问题是：[2.x.60]到底是什么？问题是，对于波浪方程来说，在这个问题上确实没有好的理论。众所周知，对于由矩形组成的均匀细化网格，[2.x.61]是最小边长。但对于一般四边形的网格来说，确切的关系似乎是未知的，也就是说，不知道单元的什么属性与CFL条件有关。问题是，CFL条件来自于对拉普拉斯矩阵最小特征值的了解，而这只能对简单结构的网格进行分析计算。   
* 所有这些的结果是，我们并不十分确定我们应该对[2.x.62]采取什么具体措施。函数[2.x.63]计算了所有单元的最小直径。如果单元格都是正方形或立方体，那么最小边长就是最小直径除以[2.x.64] 。我们简单地将此概括为非均匀网格的情况，没有理论上的理由。   
* 唯一的其他重大变化是我们需要建立边界质量矩阵。我们将在下文中进一步评论这个问题。
*


* [1.x.83]
*
* 如前所述，与[2.x.65]的第二个区别是，我们需要建立从吸收性边界条件中生长出来的边界质量矩阵。     
* 第一个观察结果是，这个矩阵比常规质量矩阵要稀疏得多，因为没有一个具有纯内部支持的形状函数对这个矩阵作出贡献。因此，我们可以根据这种情况优化存储模式，建立第二个稀疏模式，只包含我们需要的非零条目。这里有一个权衡：首先，我们必须要有第二个稀疏模式对象，所以这需要花费内存。其次，与该稀疏性模式相连的矩阵将更小，因此需要更少的内存；用它进行矩阵-向量乘法也会更快。然而，最后一个论点是提示规模的论点：我们主要感兴趣的不是单独对边界矩阵进行矩阵-向量运算（尽管我们需要在每个时间步长对右侧向量进行一次运算），而是主要希望将其与两个方程中的第一个方程使用的其他矩阵相加，因为这是CG方法每个迭代都要与之相乘的一个方程，即明显更频繁。现在的情况是，[2.x.66]类允许将一个矩阵添加到另一个矩阵中，但前提是它们使用相同的稀疏模式（原因是我们不能在稀疏模式创建后向一个矩阵添加非零条目，所以我们只要求两个矩阵具有相同的稀疏模式）。     
* 所以我们就这样做吧。
*


* [1.x.84]

* 第二件要做的事是实际建立矩阵。在这里，我们需要对单元格的面进行积分，所以首先我们需要一个能在[2.x.67]维对象上工作的正交对象。其次，FEValues的变体FEFaceValues，正如其名字所暗示的，它可以在面上工作。最后，其他的变量是组装机器的一部分。所有这些我们都放在大括号里，以便将这些变量的范围限制在我们真正需要它们的地方。     
* 组装矩阵的实际行为是相当直接的：我们在所有的单元格上循环，在每个单元格的所有面上循环，然后只在特定的面位于域的边界时做一些事情。像这样。
*


* [1.x.85]
*
* [1.x.86] [1.x.87]。


*
* 以下两个函数，解决压力和速度变量的线性系统，几乎是逐字逐句地从[2.x.70]中提取的（除了名称从[2.x.68]改为[2.x.69]的主变量之外）。
*


* [1.x.88]
*
* [1.x.89] [1.x.90]。


*
* 这里也是如此：该函数来自 [2.x.71] 。
*


* [1.x.91]
*
* [1.x.92] [1.x.93]。


*
* 这个做大部分工作的函数又和[2.x.72]中的差不多，尽管我们通过使用介绍中提到的向量G1和G2使事情变得更清楚。与程序的整体内存消耗相比，引入几个临时向量并没有什么坏处。   
* 这个函数唯一的变化是：首先，我们不必为速度[2.x.73]预测初始值，因为我们知道它是零。其次，我们在构造函数中计算的检测器位置评估解决方案。这是用[2.x.74]函数完成的。然后，这些值被写入我们在函数开始时打开的一个文件中。
*


* [1.x.94]
*
* [1.x.95] [1.x.96]。



*剩下的是程序的主要功能。这里没有什么是在以前的几个程序中没有展示过的。
*


* [1.x.97]
*[1.x.98][1.x.99]


* 该程序将每个时间步骤的图形数据以及在每个检测器位置评估的数值都写入磁盘。我们将它们绘制成图。目前，我们的实验只在二维空间内通过圆形扫描单个检测器来完成。这里的组织样本是[2.x.75]平面上的一个薄片（[2.x.76]），我们假设其他[2.x.77]方向的信号不会对数据产生影响。因此，我们只需要将我们的实验数据与二维模拟数据进行比较。
*[1.x.100][1.x.101]。
*

* 这部电影显示了由一个小型吸收器产生的热声波在介质中传播（在我们的模拟中，我们假设介质是矿物油，其声速为1.437 [2.x.78] ）。
* [2.x.79]
* 对于单个吸收器，我们当然要相应地改变[2.x.80]类。
* 接下来，让我们比较一下实验和计算的结果。可视化使用了地震学中长期使用的一种技术，即把每个探测器的数据都画在一个图上。这样做的方法是将每个检测器的信号与前一个检测器相比偏移一点。例如，这里是前四个探测器的图（从下到上，时间从左到右为微秒），使用程序中使用的源设置，与目前只有一个源的情况相比，使事情更有趣。
* [2.x.81]
* 例如，可以看到的一点是，第二和第四个信号的到达时间在探测器数量较多的情况下（即最顶端的探测器）会转移到较早的时间，但第一和第三信号不会；这可以解释为，这些信号的起源必须更接近后一个探测器，而不是前一个探测器。
* 如果我们不仅把4个，而且把所有160个探测器都堆在一个图中，个别的线就会模糊，但在它们一起运行的地方，它们会形成一个或深或浅的灰度模式。  下面两张图显示了在以这种方式堆叠的探测器位置上获得的结果。左图是通过实验得到的，右图是模拟数据。在实验中，一个小的强吸收器被嵌入到较弱的吸收组织中。
* [2.x.82]
* 很明显，在角度[2.x.83]时，源的位置更接近探测器。实验数据中可以看到的所有其他信号都是由于组织的其他部分也有弱吸收体，这些吸收体环绕着中心的小强吸收体产生的信号。另一方面，在模拟数据中，我们只模拟了小的强吸收体。
* 在现实中，检测器的带宽有限。因此，通过探测器的热声波将被过滤掉。通过使用高通滤波器（在MATLAB中实现并针对本程序产生的数据文件运行），可以使模拟结果看起来更接近实验数据。
* [2.x.84]
* 在我们的模拟中，我们看到主波后面的假信号是由数值伪影造成的。这个问题可以通过使用细网格来缓解，从而得到以下的图。
* [2.x.85]
*


*[1.x.102][1.x.103]


* 为了进一步验证该程序，我们还将展示多个吸收器的模拟结果。这与程序中实际实现的情况相对应。下面的影片显示了由多个吸收体产生的thermoacoustic波在介质中的传播情况。
* [2.x.86]
* 实验数据和我们的模拟数据在以下两张图中进行了比较。[2.x.87]
* 请注意，在实验数据中，第一个信号（即最左边的暗线）来自组织边界的吸收，因此在来自内部的任何信号之前，首先到达探测器。这个信号在痕迹的末端也是微弱可见的，大约在30[2.x.88]，这表明信号穿过整个组织到达另一侧的探测器，在所有来自内部的信号到达它们之后。
* 如前所述，通过应用符合探测器实际行为的带宽滤波器（左）和选择更细的网格（右），数值结果与实验结果更加吻合。
* [2.x.89]
* 左图和右图之间的一个重要区别是，右图的曲线看起来没有那么多的 "棱角"。角度来自于这样一个事实：虽然连续方程中的波在各个方向上的移动速度相同，但离散化后的情况并非如此：在那里，对角线上的波与平行于网格线的波的移动速度略有不同。这种各向异性导致的波前并不是完全的圆形（在堆积图中会产生正弦信号），而是在某些方向上凸出。更糟糕的是，我们使用的圆形网格（例如见[2.x.90]的粗略网格视图）也不是各向同性的。最终的结果是，除非网格足够细，否则信号的前沿不是正弦波的。右图在这方面要好得多，尽管仍然可以看到尾部虚假波的形式的伪影。
*

* [1.x.104][1.x.105] [2.x.91] 。
* [0.x.1]

