include/deal.II-translator/lac/cuda_solver_direct_0.txt
[0.x.0]*
   直接求解器。这些求解器在下面调用cuSOLVER。   
* [2.x.0] 此模板的实例化提供给<tt> [2.x.1] 和 <tt> [2.x.2] 。    
* [2.x.3]   
* [0.x.1]*
     用于SolverDirect额外设置的结构。   
* [0.x.2]*
       将附加数据字段设置为所需的解算器。     
* [0.x.3]*
       设置解算器类型。可能的情况是。       [2.x.4] [2.x.5] "Cholesky"，在设备上执行Cholesky分解 [2.x.6] [2.x.7] "LU_dense"，将稀疏矩阵转换为密集矩阵并使用LU分解 [2.x.8] [2.x.9] "LU_host"，在主机上使用LU分解 [2.x.10] [2.x.11] 。      
* [0.x.4]*
     构造函数。接受求解器控制对象并创建求解器。   
* [0.x.5]*
     解构器。   
* [0.x.6]*
     解决线性系统<tt>Ax=b</tt>。   
* [0.x.7]*
     访问控制收敛的对象。   
* [0.x.8]*
     处理    
* [0.x.9]*
     对控制迭代求解器收敛的对象的引用。事实上，对于这些CUDA封装器来说，cuSOLVER和cuSPARSE本身就是这样做的，但是我们在开始求解过程之前从这个对象中复制数据，之后再将数据复制回这个对象中。   
* [0.x.10]*
     存储这个特定求解器的标志的副本。   
* [0.x.11]

