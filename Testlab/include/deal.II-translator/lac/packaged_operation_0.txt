include/deal.II-translator/lac/packaged_operation_0.txt
[0.x.0]*
 一个用于存储计算的类。
* PackagedOperation类允许对涉及向量和线性运算符的表达式进行懒惰评估。这是通过存储计算表达式来实现的，只有当对象被隐含地转换为向量对象，或者[2.x.0]（或[2.x.1]）被手动调用时才执行计算。这就避免了不必要的中间结果的临时存储。
* 该类本质上由[2.x.2]对象组成，这些对象存储了如何生成计算结果并将其存储在向量中的知识。

* 
* [1.x.0]
* 
* 与LinearOperator类相似，它也有关于如何初始化[2.x.3]空间的向量的知识。

* 
* [1.x.1]
* 
* 作为一个例子，考虑多个向量的相加问题

* 
* [1.x.2]
* 或者计算一个残差 [2.x.4] 。

* 
* [1.x.3]
* 表达式 [2.x.5] 是 [2.x.6] 的类型。它存储对[2.x.7]的引用，并将实际计算推迟到[2.x.8]被明确调用时进行。

* 
* [1.x.4]
* 或者直到[2.x.9]对象被隐式转换。

* 
* [1.x.5]
* 
* 

* 
* [2.x.10] [2.x.11] 教程中有一个LinearOperator类的详细使用例子。
* 

* 

* 
* [2.x.12] 

 
* [0.x.1]*
   创建一个空的PackagedOperation对象。所有的[2.x.13]成员对象都用默认的变体初始化，在调用时抛出一个异常。 
* [0.x.2]*
   默认的复制构造函数。 
* [0.x.3]*
   从引用向量创建PackagedOperation对象的构造函数 [2.x.14] PackagedOperation返回 [2.x.15] 被创建的PackagedOperation对象存储了对 [2.x.16] 的引用。因此，向量必须在PackagedOperation对象的整个生命周期内保持有效引用。在创建PackagedOperation对象后，在[2.x.17]上所做的所有改变都会被操作者对象所反映。 
* [0.x.4]*
   默认的复制赋值运算符。 
* [0.x.5]*
   复制赋值操作符，从一个引用向量创建一个PackagedOperation对象 [2.x.18] PackagedOperation返回 [2.x.19] 被创建的PackagedOperation对象存储了对 [2.x.20] 的引用。因此，向量必须在PackagedOperation对象的整个生命周期中保持有效引用。在PackagedOperation对象创建后，在[2.x.21]上所做的所有改变都会被操作者对象所反映。 
* [0.x.6]*
   将一个PackagedOperation转换为其结果。    这个转换操作者创建一个Range空间的向量，并对其调用[2.x.22]。 
* [0.x.7]*
    [2.x.23] 就地的向量空间操作  
* [0.x.8]*
   用具有相同[2.x.25]的PackagedOperation[2.x.24]加法。  
* [0.x.9]*
   用相同的[2.x.26]的打包操作[2.x.27]做减法，范围。 
* [0.x.10]*
   将一个常数[2.x.28]（属于[2.x.29]空间）添加到一个PackagedOperation的结果中。 
* [0.x.11]*
   从一个PackagedOperation的结果中减去一个常数[2.x.30]（属于[2.x.31]空间）。 
* [0.x.12]*
   将PackagedOperation与一个[2.x.32]的标量乘法。  
* [0.x.13]*
   将PackagedOperation的结果存储在[2.x.33]空间的一个向量v中。 
* [0.x.14]*
   将PackagedOperation的结果添加到[2.x.34]空间的一个向量v中。 
* [0.x.15]*
   初始化Range空间的一个向量v，使其可以直接作为apply或apply_add应用中的目标参数使用。与向量类的reinit函数类似，布尔值决定是否进行快速初始化，即如果它被设置为false，则向量的内容被设置为0。 
* [0.x.16]*
  [2.x.35] 矢量空间操作

* 
* [0.x.17]*
  [2.x.36] 打包操作（PackagedOperation
* 两个PackagedOperation对象[2.x.37]和[2.x.38]的加法，通过向量空间加法给出相应结果。
* 

* 
* [2.x.39] 

 
* [0.x.18]*
  [2.x.40] 打包操作（PackagedOperation
* 两个PackagedOperation对象[2.x.41]和[2.x.42]second_comp的减法，由相应结果的向量空间相加给出。
* 

* 
* [2.x.43] 

* 
* [0.x.19]*
  [2.x.44] 打包操作（PackagedOperation
* 一个PackagedOperation对象[2.x.45]与一个标量[2.x.46]的标量乘法，这个标量是由PackagedOperation的结果与[2.x.47]的标量给出的。
* 

* 
* [2.x.48] 

* 
* [0.x.20]*
  [2.x.49] 打包操作（PackagedOperation
* 一个PackagedOperation对象[2.x.50]与一个标量[2.x.51]的标量乘法，这个标量是由PackagedOperation的结果与[2.x.52]的标量给定的。
* 

* 
* [2.x.53] 

* 
* [0.x.21]*
  [2.x.54] 打包操作（PackagedOperation
* 在PackagedOperation的结果中添加一个常数[2.x.55]（属于[2.x.56]空间）。
* 

* 
* [2.x.57] 

* 
* [0.x.22]*
  [2.x.58] 打包操作（PackagedOperation
* 在PackagedOperation的结果中添加一个常数[2.x.59]（属于[2.x.60]空间）。
* 

* 
* [2.x.61] 

 
* [0.x.23]*
  [2.x.62] 打包操作（PackagedOperation
* 从一个PackagedOperation的结果中减去一个常数[2.x.63]（属于[2.x.64]空间）。
* 

* 
* [2.x.65] 

* 
* [0.x.24]*
  [2.x.66] 打包操作
* 从一个常数[2.x.67]（属于[2.x.68]空间）减去一个计算结果。其结果是一个PackagedOperation对象，应用这个计算。
* 

* 
* [2.x.69] 

* 
* [0.x.25]*
  [2.x.70] 创建一个PackagedOperation对象

* 
* [0.x.26]*
  [2.x.71] 打包操作（PackagedOperation
* 创建一个PackagedOperation对象，存储两个向量的相加。
* 创建的PackagedOperation对象存储了对[2.x.72]和[2.x.73]的引用。因此，向量必须在PackagedOperation对象的整个生命周期内保持有效引用。在创建PackagedOperation对象后，在[2.x.74]或[2.x.75]上所做的所有更改都会被操作者对象所反映。
* 

* 
* [2.x.76] 

* 
* [0.x.27]*
  [2.x.77] 打包操作（PackagedOperation
* 创建一个PackagedOperation对象，存储两个向量的减法。
* 创建的PackagedOperation对象存储了对[2.x.78]和[2.x.79]的引用。因此，这些向量必须在PackagedOperation对象的整个生命周期内保持有效的引用。在创建PackagedOperation对象后，在[2.x.80]或[2.x.81]上所做的所有改变都会被操作者对象所反映。
* 

* 
* [2.x.82] 

* 
* [0.x.28]*
  [2.x.83] 打包操作（PackagedOperation
* 创建一个PackagedOperation对象，该对象存储一个具有[2.x.84]的向量的缩放比例。
* 创建的PackagedOperation对象存储了对[2.x.85]的引用。因此，向量必须在PackagedOperation对象的整个生命周期内保持有效的引用。在创建PackagedOperation对象后，在[2.x.86]或[2.x.87]上所做的所有改变都会被操作者对象所反映。
* 

* 
* [2.x.88] 

* 
* [0.x.29]*
  [2.x.89] 打包操作（PackagedOperation
* 创建一个PackagedOperation对象，该对象存储了对一个具有[2.x.90]的向量的缩放。
* 创建的PackagedOperation对象存储了对[2.x.91]的引用。因此，向量必须在PackagedOperation对象的整个生命周期内保持有效的引用。在创建PackagedOperation对象后，在[2.x.92]或[2.x.93]上所做的所有改变都会被操作者对象所反映。
* 

* 
* [2.x.94] 

* 
* [0.x.30]*
  [2.x.95] 打包操作（PackagedOperation
* 从一个LinearOperator和对域空间的向量[2.x.96]的引用中创建一个PackagedOperation对象。该对象存储PackagedOperation [2.x.97] （用矩阵表示）。 [2.x.98] ( [2.x.99] ( [2.x.100] ) 。
* 创建的PackagedOperation对象存储了对[2.x.101]的引用。因此，在PackagedOperation对象的整个生命周期中，该向量必须保持有效的引用。在创建PackagedOperation对象后，在[2.x.102]上所做的所有改变都会被操作者对象所反映。
* 

* 
* [2.x.103] 

 
* [0.x.31]*
  [2.x.104] 打包操作（PackagedOperation
* 从一个LinearOperator和一个对Range空间的向量[2.x.105]的引用创建一个PackagedOperation对象。该对象存储PackagedOperation [2.x.106] （用矩阵符号表示）。 [2.x.107] ( [2.x.108] ( [2.x.109] ) 。
* 创建的PackagedOperation对象存储了对[2.x.110]的引用。因此，在PackagedOperation对象的整个生命周期内，该向量必须保持有效引用。在创建PackagedOperation对象后，在[2.x.111]上所做的所有改变都会被操作者对象所反映。
* 

* 
* [2.x.112] 

 
* [0.x.32]*
  [2.x.113] 打包操作(PackagedOperation)
* 一个PackagedOperation对象与一个LinearOperator的组合。该对象存储了计算[2.x.114]（用矩阵符号表示）。
* 

* 
* [2.x.115] 

 
* [0.x.33]*
  [2.x.116] 打包操作(PackagedOperation)
* 一个PackagedOperation对象与一个LinearOperator的组合。该对象存储了计算[2.x.117]（用矩阵符号表示）。
* 

* 
* [2.x.118] 

* 
* [0.x.34]

