include/deal.II-translator/lac/petsc_compatibility_0.txt
[0.x.0] 与其到处使用ifdefs，不如尝试将PETSc的旧版本函数包裹在一个地方。

* 
* [0.x.1]*
   在全局PETSc数据库中设置一个选项。这个函数只是用版本检查来包装 PetscOptionsSetValue（这个函数的签名在 PETSc 3.7.0 中改变了）。 
* [0.x.2]*
   销毁一个PETSc矩阵。这个函数封装了MatDestroy，并进行了版本检查（这个函数的签名在PETSc 3.2.0中改变）。     [2.x.0]由于这个函数的主要意图是在PETSc封装器中启用RAII语义，如果发生错误，这个函数将不会抛出一个异常，而只是返回MatDestroy给出的错误代码。 
* [0.x.3]*
   销毁一个Krylov Subspace (KSP) PETSc求解器。这个函数用一个版本检查来包装KSPDestroy（这个函数的签名在PETSc 3.2.0中改变了）。     [2.x.1]由于该函数的主要意图是在PETSc封装器中启用RAII语义，因此如果发生错误，该函数将不会抛出一个异常，而只是返回MatDestroy给出的错误代码。 
* [0.x.4]*
   设置一个PETSc矩阵选项。这个函数用一个版本检查来包装MatSetOption。     [2.x.2] 在3.0.0之前的PETSc版本中，参数option_value被忽略，因为相应的函数不接受这个参数。 
* [0.x.5]*
   告诉PETSc，我们不打算向矩阵添加新的条目。在调试模式下产生错误。 
* [0.x.6]*
   告诉PETSc保留SparsityPattern条目，即使我们用clear_rows()删除了某行，并调用MatZeroRows()。否则，以后就不能再向该行写入数据了。 
* [0.x.7]

