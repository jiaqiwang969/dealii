include/deal.II-translator/lac/parpack_solver_0.txt
[0.x.0]*
 使用PARPACK的接口。PARPACK是一个Fortran77子程序的集合，旨在解决大规模的特征值问题。这里我们为PARPACK的例程[2.x.0]、[2.x.1]提供接口。 该软件包被设计用来计算一般n乘n矩阵A的几个特征值和相应的特征向量。它最适用于大的稀疏矩阵A。
* 在这个类中，我们利用了应用于广义特征谱问题[2.x.2]的方法，用于[2.x.3]；其中[2.x.4]是一个系统矩阵，[2.x.5]是一个质量矩阵，而[2.x.6]分别是一组特征值和特征向量。
* ArpackSolver可以通过以下方式在应用代码中使用。

* 
* [1.x.0]
* 对于广义的特征值问题[2.x.7] ，其中变量[2.x.8]告诉PARPACK要解决的特征向量/特征值对的数量。这里，[2.x.9]是一个包含计算的特征值的向量，[2.x.10]是一个包含计算的特征向量的[2.x.11]类型的对象的向量。
* 目前，只有(P)Arpack的三种模式被实现。在模式3（默认）中，[2.x.12]是对矩阵<code>A的逆运算。
* 
* - sigma B</code>，其中[2.x.13]是一个移位值，默认设置为零。而在模式2中，[2.x.14]是[2.x.15]的逆运算。最后，模式1对应于没有谱系转换的标准特征值问题 [2.x.16] 。模式可以通过AdditionalData对象指定。请注意，对于移位和反转（模式=3），所寻求的特征对是应用谱系转换后的特征对。
* [2.x.17] 可以通过使用LinearOperator来指定。

* 
* [1.x.1]
* 
* 该类旨在与MPI一起使用，可以在任意的向量和矩阵分布式类上工作。 对称和非对称的[2.x.18]都支持。
* 关于PARPACK例程[2.x.19]、[2.x.20]如何工作以及如何适当设置参数的进一步信息，请查看PARPACK手册。

* 
* [0.x.1]*
   声明容器大小的类型。 
* [0.x.2]*
   一个枚举，列出在solve()函数中计算哪些特征值的可能选择。注意，这与应用移位和反转（目前唯一支持的谱系变换）后的问题相对应。    一个特定的选择是基于对称或非对称矩阵[2.x.21]考虑的限制。 
* [0.x.3]*
     代数上最大的特征值。   
* [0.x.4]*
     代数上最小的特征值。   
* [0.x.5]*
     具有最大量级的特征值。   
* [0.x.6]*
     具有最小量级的特征值。   
* [0.x.7]*
     具有最大实部的特征值。   
* [0.x.8]*
     具有最小实部的特征值。   
* [0.x.9]*
     具有最大虚部的特征值。   
* [0.x.10]*
     具有最小虚部的特征值。   
* [0.x.11]*
     从频谱的高端计算一半的特征值，另一半从低端计算。如果要求的特征向量的数量是奇数，那么额外的特征向量来自谱的高端。   
* [0.x.12]*
   标准化的数据结构，如果需要的话，可以将额外的数据输送到求解器中。 
* [0.x.13]*
   对控制收敛的对象的访问。 
* [0.x.14]*
   构造函数。 
* [0.x.15]*
   初始化内部变量。 
* [0.x.16]*
   在使用BlockVectors时初始化内部变量。   [2.x.22]用于设置问题的维度，而[2.x.23]用于调用所使用的deal.II blockvector的reinit。 
* [0.x.17]*
   从输入中初始化内部变量 [2.x.24] 。  
* [0.x.18]*
   设置初始矢量，用于建立Krylov空间。 
* [0.x.19]*
   设置移位[2.x.25]，用于移位和反转的光谱变换。    如果这个函数没有被调用，则假定移位为零。   
* [2.x.26]只与[2.x.27]有关（关于什么是不同模式的定义，请看这个类的一般文档）。 
* [0.x.20]*
   通过调用PARPACK的[2.x.29]函数来解决广义的特征直角问题[2.x.28]。    在[2.x.30]中，[2.x.31]应对应于[2.x.32]，而在[2.x.33]中应代表[2.x.34]。对于[2.x.35]，[2.x.36]和[2.x.37]都被忽略了。 
* [0.x.21]*
   与上述相同，但将特征向量作为指针。 
* [0.x.22]*
   以字节为单位返回该类的内存消耗。 
* [0.x.23]*
   对控制迭代求解器收敛性的对象的引用。 
* [0.x.24]*
   存储这个特定求解器的标志的副本。 
* [0.x.25]*
   C++ MPI通信器。 
* [0.x.26]*
   Fortran MPI通信器。 
* [0.x.27]*
   工作数组的长度workl。 
* [0.x.28]*
   长度为lworkl的双精度工作数组  
* [0.x.29]*
   长度为3*N的双精度工作数组  
* [0.x.30]*
   本地自由度的数量。 
* [0.x.31]*
   Additional_data中指定的Arnoldi基向量的数量  
* [0.x.32]*
   数组v的前导维度  
* [0.x.33]*
   双精度向量，大小为ldv的NCV。 将包含最终的Arnoldi基向量集。 
* [0.x.34]*
   一个辅助标志，当提供初始向量时被设置为真。 
* [0.x.35]*
   初始残差向量，可能来自先前的运行。 在输出时，它包含最终的残差向量。 
* [0.x.36]*
   数组Z的前导尺寸等于nloc。 
* [0.x.37]*
   一个最小尺寸为nloc的NEV+1的向量。 Z包含了特征系统A*z = lambda*B*z的B-正态里兹向量，对应于里兹值的近似值。 
* [0.x.38]*
   Workev数组的大小。 
* [0.x.39]*
   尺寸为3*NCV的双精度工作阵列。 
* [0.x.40]*
   维度为NCV的向量。 
* [0.x.41]*
   在Arpack和deal.II之间使用的临时向量  
* [0.x.42]*
   局部自由度的索引。 
* [0.x.43]*
   移位的实数部分  
* [0.x.44]*
   移位的虚数部分  
* [0.x.45]*
   初始化依赖于[2.x.38]的内部变量 该函数在reinit()函数中被调用。 
* [0.x.46]*
   PArpackExcInfoPdnaupds.  
* [0.x.47]

