include/deal.II-translator/lac/cuda_kernels_0.txt
[0.x.0]*
     包含CUDA内核的命名空间。   
* [0.x.1]*
       将大小为[2.x.1]的[2.x.0]的每个条目乘以[2.x.2] 。            
* [2.x.3]       
* [0.x.2]*
       定义两个数字的加法的向量。           
* [2.x.4]       
* [0.x.3]*
       定义两个数字的减法的向量。           
* [2.x.5]       
* [0.x.4]*
       定义两个数的最大值的向量。           
* [2.x.6]       
* [0.x.5]*
       定义两个数字的最大值的向量。           
* [2.x.7]       
* [0.x.6]*
       对[2.x.9]和[2.x.10]中的每个元素应用向量[2.x.8]。            
* [2.x.11]       
* [0.x.7]*
       对指数在[2.x.14]和[2.x.15]中的[2.x.13]的元素应用漏斗[2.x.12]，[2.x.16]的大小应该大于[2.x.17]的大小[2.x.18]和[2.x.19]的大小应该相同[2.x.20] N。           
* [2.x.21]       
* [0.x.8]*
       实现在使用缩减时用于添加元素的函数的结构。           
* [2.x.22]       
* [0.x.9]*
       实现在使用还原时计算L1准则的函数的结构。           
* [2.x.23]       
* [0.x.10]*
       实现在使用还原法时用于计算L-无穷大规范的函数的结构。           
* [2.x.24]       
* [0.x.11]*
       使用[2.x.26]对[2.x.25]进行还原。            
* [2.x.27]       
* [0.x.12]*
       在使用双向量还原时，实现用于计算点乘法线的函数的结构。           
* [2.x.28]       
* [0.x.13]*
       对[2.x.29]和[2.x.30]中的每个元素进行二进制运算，然后对所得数组进行还原。           
* [2.x.31]       
* [0.x.14]*
       将[2.x.32]添加到[2.x.33]的每个元素中。            
* [2.x.34]       
* [0.x.15]*
       矢量的倍数相加，即：<tt>val += a*V_val</tt>。           
* [2.x.35]       
* [0.x.16]*
       多重缩放向量的加法，即：<tt>val += a*V_val + b*W_val</tt>。           
* [2.x.36]       
* [0.x.17]*
       缩放和简单添加一个向量的倍数，即<tt>val = = s*val + a*V_val</tt>。           
* [2.x.37]       
* [0.x.18]*
       缩放和多次添加缩放的向量，即<tt>val = = s*val + a*V_val + b*W_val</tt>。           
* [2.x.38]       
* [0.x.19]*
       用参数中的相应元素来缩放这个向量的每个元素。           
* [2.x.39]       
* [0.x.20]*
       赋值 <tt>val = a*V_val</tt>.            
* [2.x.40]       
* [0.x.21]*
       赋值 <tt>val = a*V_val + b*W_val</tt>.            
* [2.x.41]       
* [0.x.22]*
       执行一个向量加法和后续内积的组合操作，返回内积的值。           
* [2.x.42]       
* [0.x.23]*
       将[2.x.43]的每个元素设置为[2.x.44]。            
* [2.x.45]       
* [0.x.24]*
       将[2.x.46]中的每个元素设置为[2.x.47]，使用[2.x.48]作为permutation，即：<tt>val[indices[i]] = v[i]</tt>。           
* [2.x.49]       
* [0.x.25]*
       将[2.x.50]中的每个元素设置为[2.x.51]，使用[2.x.52]作为permutation，即，<tt>val[i]=v[indices[i]]</tt>。           
* [2.x.53]       
* [0.x.26]*
       将[2.x.54]中的每个元素添加到[2.x.55]中，使用[2.x.56]作为permutation，即：<tt>val[indices[i]] += v[i]</tt>。+= v[i]/tt>。           
* [2.x.57]       
* [0.x.27]

