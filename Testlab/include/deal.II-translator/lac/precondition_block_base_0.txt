include/deal.II-translator/lac/precondition_block_base_0.txt
[0.x.0]*
 一个存储块状预处理程序和块状松弛方法的逆对角线块的类。
* 这个类为基于反转矩阵对角线上的块的预处理和松弛方法做记账工作。它允许我们存储所有的对角线块和它们的倒数，或者为每个条目存储相同的块，并且它可以跟踪选择。因此，在初始化它并正确填充对角线上的逆块后，派生类可以使用inverse()，其整数参数指的是块数。
* 此外，它还允许存储原始对角线块，而不仅仅是逆向的。例如，这些都是用于SSOR预处理程序的中间步骤。

* 
* [0.x.1]*
   声明容器大小的类型。 
* [0.x.2]*
   选择一个反转块的方法，从而选择反转的数据类型。 
* [0.x.3]*
     使用[2.x.0]中实现的标准高斯-雅各比方法。    
* [0.x.4]*
     使用Householder类的QR分解。   
* [0.x.5]*
     使用LAPACKFullMatrix的奇异值分解。   
* [0.x.6]*
   构造函数初始化默认值。 
* [0.x.7]*
   虚拟解构器  
* [0.x.8]*
   删除对角线块矩阵（如果存在的话），从而使该类处于调用构造函数后的直接状态。 
* [0.x.9]*
   用给定的块大小调整到这个对角线块的数量。如果<tt>compress</tt>为真，那么将只存储一个块。 
* [0.x.10]*
   告诉类，计算反相。 
* [0.x.11]*
   矩阵是否只使用一个对角线块？ 
* [0.x.12]*
   检查，是否应该存储对角线块（而不是它们的逆向）。 
* [0.x.13]*
   如果反向块可以使用，则返回true。 
* [0.x.14]*
   块的数量。 
* [0.x.15]*
   与位于<tt>i</tt>位置的逆块相乘。 
* [0.x.16]*
   与位置<tt>i</tt>的换位逆块相乘。 
* [0.x.17]*
   如果反转是#gauss_jordan，则访问反转对角线块。 
* [0.x.18]*
   如果反演是#householder，则访问反对角线块。 
* [0.x.19]*
   如果反转是#householder，则访问反对角线块。 
* [0.x.20]*
   访问逆对角线区块。 
* [0.x.21]*
   如果反转是#householder，则访问逆对角线区块。 
* [0.x.22]*
   如果反转是#householder，则访问逆对角线区块。 
* [0.x.23]*
   访问对角线块。 
* [0.x.24]*
   访问对角线块。 
* [0.x.25]*
   向[2.x.1]打印一些关于求逆者的统计数据 输出取决于#求逆者。对于svd来说，它是最丰富的，在那里我们可以获得关于极值奇异值和条件数的统计数据。 
* [0.x.26]*
   确定此对象的内存消耗（以字节为单位）的估计值。 
* [0.x.27]*
   你试图访问一个对角线块（而不是它的逆向），但你决定不存储对角线块。 
* [0.x.28]*
   你正在访问一个对角线块，假设它具有某种类型。  但是，用于反转对角线块的方法并没有使用这种类型  
* [0.x.29]*
   用于倒置块的方法。 
* [0.x.30]*
   对角线块的（反转）数量，如果只存储一个。 
* [0.x.31]*
   如果使用反转#gauss_jordan，则以<tt>FullMatrix<number></tt>矩阵的形式存储对角线块矩阵的反转矩阵。  与<tt>number=float</tt>相比，使用<tt>number=double</tt>可以节省内存，但可能会引入数值不稳定。 
* [0.x.32]*
   如果使用反转#householder，将对角块矩阵的反矩阵存储为<tt>Householder</tt>矩阵。与<tt>number=float</tt>相比，使用<tt>number=double</tt>可以节省内存，但可能会引入数值不稳定。 
* [0.x.33]*
   如果使用反转#svd，将对角块矩阵的反转矩阵存储为<tt>LAPACKFullMatrix</tt>矩阵。与<tt>number=float</tt>相比，使用<tt>number=double</tt>可以节省内存，但可能会引入数值不稳定。 
* [0.x.34]*
   存储原始对角线块。    被封锁的SSOR方法所使用。 
* [0.x.35]*
   如果要使用#var_diagonal这个字段，则为真。 
* [0.x.36]*
   如果只存储一个逆数，则为真。 
* [0.x.37]*
   逆矩阵是可以使用的。由父类通过inverses_computed()设置。 
* [0.x.38]

