include/deal.II-translator/lac/qr_0.txt
[0.x.0]*
 用于薄型QR实现的基类。
* 这个类和从它派生出来的类是为了一次建立[2.x.0]和[2.x.1]矩阵的行/列，即通过从一个空的[2.x.3]矩阵增长到[2.x.4]，其中[2.x.5]是增加的列向量数量。
* 因此，与每个向量有相同行数的矩阵（即[2.x.6]矩阵）被存储为`VectorType`的向量集合。

* 
* [0.x.1]*
   R矩阵的数字类型。 
* [0.x.2]*
   默认的私有构造函数。 
* [0.x.3]*
   解构器。 
* [0.x.4]*
   将[2.x.7]追加到QR因式分解中。  如果结果是成功的，即列是线性独立的，则返回[2.x.8]。否则[2.x.9]被拒绝，返回值为[2.x.10] 。 
* [0.x.5]*
   删除一列[2.x.11]并更新QR分解。 
* [0.x.6]*
   返回子空间的大小。 
* [0.x.7]*
   返回当前的上三角矩阵R。 
* [0.x.8]*
   解决 [2.x.12] . 矢量[2.x.13]和[2.x.14]应该与子空间的当前大小一致。  如果[2.x.15]是[2.x.16]，则[2.x.17]被解决。 
* [0.x.9]*
   设置 [2.x.18] 。[2.x.19]的大小应与R矩阵的大小一致。 
* [0.x.10]*
   设置 [2.x.20] . [2.x.21] 的大小应与列向量的大小一致。 
* [0.x.11]*
   设置 [2.x.22] . [2.x.23]的大小应与R矩阵的大小一致。 
* [0.x.12]*
   设置 [2.x.24] . [2.x.25] 的大小应与列向量的大小一致。 
* [0.x.13]*
   连接一个槽，以便在进行吉文斯旋转时检索到一个通知。    该函数需要两个指数，[2.x.26]和[2.x.27]描述旋转的平面，以及三组数字[2.x.28]（余弦、正弦和半径，见[2.x.29]，代表旋转矩阵。 
* [0.x.14]*
   计算[2.x.30]，其中[2.x.31]是由该对象存储的列向量形成的矩阵。 
* [0.x.15]*
   与存储在该对象中的转置列相乘。 
* [0.x.16]*
   存储列的唯一指针的向量。 
* [0.x.17]*
   用于存储R的矩阵。 
* [0.x.18]*
   当前大小（Q中的列数）。 
* [0.x.19]*
   当吉文斯旋转在`(i,j)`面进行时，用于检索通知的信号。 
* [0.x.20]*
 一个用于计算和存储由一组列向量代表的矩阵的QR分解的类。
* 该类被设计用来更新矩阵[2.x.32]的给定（可能是空的）QR因式分解（通过提供其列而逐步构建），由于向[2.x.33]添加了一个新的列向量。这相当于通过Gram-Schmidt程序构建一个正态基。该类还提供了当第一列被移除时的更新功能。
* `VectorType`模板参数可以是并行和串行矢量，只需要有基本操作，如加法、标量乘积等。它还需要有一个复制构造器。
* 见第335-338页的6.5.2-6.5.3节。

* 
* [1.x.0]
* 以及

* 
* [1.x.1]
 

* 
* [0.x.21]*
   R矩阵的数字类型。 
* [0.x.22]*
   默认构造函数。 
* [0.x.23]*
   解构器。 
* [0.x.24]*
    [2.x.34] [2.x.35]     
* [2.x.36] 目前这个函数总是返回 [2.x.37] 。 
* [0.x.25]*
   删除第一列并更新QR分解。    从给定的QR分解[2.x.38]开始，我们的目标是计算[2.x.39]的因式分解。    标准方法是将[2.x.40]划分为[1.x.2]，然后得出[1.x.3]是上海森堡，其中不需要的对角线元素可以通过一连串的吉文斯旋转来归零。    请注意，[2.x.41] ，其中RHS包括在[2.x.42] 中。因此[2.x.43]可以通过Cholesky分解得到。 
* [0.x.26]*
   对[2.x.44]和[2.x.45]进行`(i,j)`面的基文旋转，使[2.x.46]被归零。    见Golub 2013的第5.1.9章，矩阵计算。 
* [0.x.27]*
   对Q进行吉文斯旋转所需的临时向量。 
* [0.x.28]*
 获得[2.x.47]因式分解的三角[2.x.48]矩阵以及矩阵[2.x.49]本身的一个类。正交矩阵[2.x.50]没有被明确存储，该类的名称。与[2.x.51]的乘法可以表示为[2.x.52]，而与[2.x.53]的乘法则由[2.x.54]给出。
* 该类旨在更新一个给定的（可能是空的）QR因式分解，由于增加了一个新的列向量。这相当于通过Gram-Schmidt程序构建一个正态基础。当列被移除时，该类也提供更新功能。
* `VectorType`模板参数可以是并行和串行矢量，只需要有基本的操作，如加法、标量积等。它还需要有一个复制构造器。

* 
* [0.x.29]*
   R矩阵的数字类型。 
* [0.x.30]*
   默认构造函数。 
* [0.x.31]*
   解构器。 
* [0.x.32]*
   删除列并更新QR分解。    从给定的QR分解[2.x.55]开始，我们旨在计算[2.x.56]的因式分解。    请注意，[2.x.57] ，其中RHS包括在[2.x.58] 中。因此[2.x.59]可以通过Cholesky分解得到。 
* [0.x.33]*
   连接一个槽，以实现在添加一列时对线性依赖的自定义检查。    这里，[2.x.60]是待R矩阵的最后一列，[2.x.61]是其对角线，[2.x.62]是该列的[2.x.63]准则的平方。  如果新列是线性独立的，该函数应该返回[2.x.64]。 
* [0.x.34]*
   在"(i,k) "平面上应用给定的旋转，将[2.x.65]归零。 
* [0.x.35]*
   用来决定新列是否是线性依赖的信号。    这里，[2.x.66]是要成为R矩阵的最后一列，[2.x.67]是其对角线，[2.x.68]是该列的[2.x.69]准则的平方。  如果新列是线性独立的，该函数应该返回[2.x.70]。 
* [0.x.36]

