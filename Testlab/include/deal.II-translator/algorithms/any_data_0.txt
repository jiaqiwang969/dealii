include/deal.II-translator/algorithms/any_data_0.txt
[0.x.0]*
 存储任何数量的由标识符字符串访问的任何类型的数据。
* [2.x.0] GK：废除了通过索引访问AnyData的做法，改为使用地图。

* 
* [0.x.1]*
  
* [2.x.1]   
* [0.x.2]*
  
* [2.x.2] 找到具有给定名称的对象，尝试将其转换为<tt>type</tt>并返回。如果名字不存在或者转换失败，这个函数会抛出一个异常。如果不希望出现这样的异常，请使用try_read()代替。 
* [0.x.3]*
  
* [2.x.3] 找到具有给定名称的对象，尝试将其转换为<tt>type</tt>并返回。如果名字不存在或者转换失败，这个函数会抛出一个异常。如果不希望出现这样的异常，请使用try_read()代替。 
* [0.x.4]*
  
* [2.x.4] 对于一个常量对象，这个函数等于 entry()。对于一个非常量对象，它强制对数据进行只读访问。特别是，如果没有找到该对象或无法转换类型，它会抛出一个异常。  如果不希望出现这样的异常，请使用try_read()代替。     [2.x.5] 不要对作为指针的存储对象使用这个函数。  使用read_ptr()代替!  
* [0.x.5]*
  
* [2.x.6] 如果存储的数据对象是一个指向常量对象的指针，访问的逻辑就变得相当复杂。也就是说，标准的读取函数可能会失败，这取决于它是一个常量指针还是一个普通指针。  这个函数修复了这个逻辑，并确定该对象不会因为意外而变得可变。 
* [0.x.6]*
   执行与 read_ptr() 相同的操作，但如果指针不存在，则不抛出异常。而是返回一个空指针。 
* [0.x.7]*
  
* [2.x.7] 这个函数试图在列表中找到名字并返回一个指向相关对象的指针。如果没有找到名字或者对象不能被转换为返回类型，则返回一个空指针。 
* [0.x.8]*
   通过索引访问存储的数据对象。 
* [0.x.9]*
  
* [2.x.8] 尝试找到该对象并返回其在列表中的索引。如果没有找到该对象，则抛出一个异常。 
* [0.x.10]*
  
* [2.x.9] 试图找到该对象并返回其在列表中的索引。如果没有找到名称，则返回[2.x.10]。 
* [0.x.11]*
   异常，表明一个函数期望一个向量有一个特定的名字，但我们在该位置存储了一个不同的名字。 
* [0.x.12]

