include/deal.II-translator/matrix_free/mapping_data_on_the_fly_0.txt
[0.x.0]*
     这个类使用标准的deal.II信息，以FEEvaluation和朋友们可以使用的形式，提供评估的映射信息，以便进行矢量化访问。由于DoFHandler/Triangulation单元迭代器没有对单元进行矢量化，所以FEEvaluation的矢量化模型的接口是使用同一元素的[2.x.0][2.x.1]副本。因此，这个接口主要适用于对同一个单元的几个运算符进行评估，例如，在组装单元矩阵时。        与deal.II中的Mapping类不同，这个类实际上并不提供可用于评估几何体的边界描述，而是以FEEvaluation可访问的形式提供来自给定deal.II映射的评估的几何体（如传递给这个类的构造函数）。   
* [0.x.1]*
       构造函数，类似于FEValues。因为这个类只评估几何，所以不需要指定有限元素，最简单的元素FE_Nothing在内部被用于底层的FEValues对象。     
* [0.x.2]*
       构造函数。这个构造函数与另一个构造函数等价，只是它使对象隐含地使用[2.x.2]映射（即MappingQGeneric(1)类型的对象）。     
* [0.x.3]*
       用给定的单元格迭代器进行初始化。     
* [0.x.4]*
       返回reinit()是否被调用过至少一次，也就是说，一个单元格被设置过。     
* [0.x.5]*
       返回当前单元格的三角形迭代器。     
* [0.x.6]*
       返回一个对底层FEValues对象的引用，该对象评估了某些数量（只有与映射有关的，如Jacobian或映射的正交点可以访问，因为实际上没有使用有限元数据）。     
* [0.x.7]*
       返回对MappingInfoStorage类型的底层存储域的引用，其格式与MappingInfo中的数据域相同。这确保了与MappingInfo类中预计算的数据字段的兼容性。     
* [0.x.8]*
       返回这个对象底层的一维正交的引用。     
* [0.x.9]*
       一个单元格迭代器，以备我们在飞行中生成数据，能够检查我们是否需要重新生成存储在这个类中的信息。     
* [0.x.10]*
       为初始化FEValues对象所需的假有限元对象。     
* [0.x.11]*
       一个执行（标量）评估的底层FEValues对象。     
* [0.x.12]*
       获取用于重新初始化形状信息的一维正交公式。     
* [0.x.13]*
       为单个单元创建的存储部分，并与MappingInfo类比持有。     
* [0.x.14]

