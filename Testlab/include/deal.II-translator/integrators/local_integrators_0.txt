include/deal.II-translator/integrators/local_integrators_0.txt
[0.x.0]*


* 
* [2.x.0] 
* 这个命名空间包含了双线性形式、形式和误差估计的特定应用局部积分。它是一个函数的集合，被组织成专门用于某些应用的命名空间。例如，命名空间Laplace包含计算拉普拉斯算子的单元矩阵和单元残差的函数，以及Nitsche的弱边界条件或内部惩罚不连续Galerkin方法的函数。麦克斯韦命名空间对卷曲型问题也有同样的作用。
* L2命名空间包含质量矩阵和[1.x.0]内积的函数。
* [1.x.1]
* 在大多数情况下，这个命名空间中的函数的作用可以用一个单一的积分来描述。我们对单元格[1.x.2]上的积分和面[1.x.3]上的积分加以区分。如果一个积分被表示为[1.x.4]，它将产生以下结果，取决于操作的类型[2.x.1] [2.x.2] 如果函数返回一个矩阵，位置[1.x.5]的条目将是测试函数[1.x.6 ]和试验函数[1.x.7]的综合积（注意指数的还原） [2.x.3] [2.x.4] 如果函数返回一个向量，那么在位置[1.x.8]的向量条目将是给定函数[1.x.9]与试验函数[1.x.10]的综合积。[2.x.5] [2.x.6] 如果函数返回一个数字，那么这个数字就是两个给定函数[1.x.11]和[1.x.12]的积分。 [2.x.7] 
* 我们将使用常规的草书符号[2.x.8]来表示标量，用粗体符号[2.x.9]表示向量。测试函数总是[1.x.13]，试用函数总是[1.x.14]。参数为希腊语，面法向量为[2.x.10] 。
* [1.x.15]
* 这个命名空间的函数遵循一个通用的签名。在最简单的情况下，你有两个相关的函数

* 
* [1.x.16]
* 
* 对于同一个算子通常有一对函数，函数<tt>cell_residual</tt>实现算子从有限元空间到其对偶的映射，函数<tt>cell_matrix</tt>生成对应于<tt>cell_residual</tt>的Frechet导数的双线性形式。
* 这些函数的第一个参数是返回类型，它是[2.x.11] [2.x.12] FullMatrix&lt;double&gt; 用于矩阵 [2.x.13] BlockVector&ltdouble&gt; 用于矢量 [2.x.14] 。
* 下一个参数是代表用于积分的有限元的FEValuesBase对象。如果积分运算符从一个有限元空间映射到另一个有限元空间的对偶（例如块系统中的对角线矩阵），那么首先要指定试验空间的FEValuesBase，之后是测试空间的FEValuesBase。
*这个列表后面是所需的数据集，顺序是[2.x.15] [2.x.16] 来自有限元函数的数据向量 [2.x.17] 来自其他对象的数据向量 [2.x.18] 附加数据 [2.x.19] 一个与整个结果相乘的系数 [2.x.20] 。
* [1.x.17]
* 本地积分器可以用在任何本来要实现本地积分循环的地方。下面的例子来自斯托克斯求解器的实现，使用[2.x.21] 矩阵是 [2.x.22] [2.x.23] 0：速度的矢量拉普拉斯（这里有一个矢量元素） [2.x.24] 1：发散矩阵 [2.x.25] 2：预处理器中使用的压力质量矩阵 [2.x.26] 。
* 有了这些矩阵，[2.x.27]调用的函数可以写成这样

* 
* [1.x.18]
* 参见[2.x.28]，了解该代码的工作实例。
* 

* 
* [2.x.29] 

* 
* [0.x.1]

