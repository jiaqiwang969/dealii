include/deal.II-translator/base/polynomials_barycentric_0.txt
[0.x.0]*
 以arycentric坐标实现的多项式。
*arycentric坐标是一个定义在单片机上的坐标系统，它特别容易操作，因为它把单片机中的坐标表达为顶点的凸组合。例如，一个三角形中的任何一点都可以写成
* [1.x.0]
* 其中每个值[2.x.0]是每个顶点的相对权重（所以中心点在二维中是每个[2.x.1]）。由于我们只考虑凸形组合，我们可以把这个方程改写为
* [1.x.1]
* 这导致三个多项式在二维中等同于[2.x.2]。更确切地说，这个类实现了一个以二维的基础定义的多项式空间，即

* 
* [1.x.2]
* 而在三维中。

* 
* [1.x.3]
* 
*在实践中，这是一个非常方便的定义单项多项式的基础：例如，TRI6元素的第四个基础函数是
* [1.x.4]
* 在[2.x.3]-维空间的单项多项式有[2.x.4]可以用其他单项式来写。
* 单项式可以方便地用[2.x.5]构造。
* 

* 
* [2.x.6] 

* 
* [0.x.1]*
   零点多项式的构造函数。 
* [0.x.2]*
   单项式的构造函数。 
* [0.x.3]*
   返回指定的单项式。 
* [0.x.4]*
   将多项式打印到输出流中，先打印最低阶的项。  例如，第一个P6基函数被打印为[2.x.7]是第一个arycentric变量，[2.x.8]是第二个，等等。 
* [0.x.5]*
   每个重心多项式的度数。 
* [0.x.6]*
   单数减去。 
* [0.x.7]*
   增加一个标量。 
* [0.x.8]*
   减去一个标量。 
* [0.x.9]*
   乘以一个标量。 
* [0.x.10]*
   除以一个标量。 
* [0.x.11]*
   添加另一个巴里中心多项式。 
* [0.x.12]*
   减去另一个arycentric多项式。 
* [0.x.13]*
   乘以另一个arycentric多项式。 
* [0.x.14]*
   在重心坐标中进行微分。 
* [0.x.15]*
   在直角坐标中进行微分。 
* [0.x.16]*
   评估多项式。 
* [0.x.17]*
   以字节为单位，返回该对象的内存使用量的估计值。 
* [0.x.18]*
   多项式的系数。指数是整数的索引。 
* [0.x.19]*
   用于巴里中心多项式的实用函数
* 
* - 其方便之处在于以独立于维度的方式一次性循环所有的索引，但我们也需要访问底层表对象的实际索引。这个实用函数将一个积分索引转换为等价的TableIndices数组（也是隐含存储的多项式指数）。 
* [0.x.20]*
 基于arycentric多项式空间的标量多项式。

* 
* [0.x.21]*
   使得维度可以向外延伸。 
* [0.x.22]*
   获取指定度数的标准拉格朗日基础。 
* [0.x.23]*
   构造函数将多项式[2.x.9]作为输入。 
* [0.x.24]*
   访问操作符。 
* [0.x.25]*
    [2.x.10] [2.x.11].   
* [0.x.26]*
    [2.x.12] [2.x.13]   
* [0.x.27]*
    [2.x.14] [2.x.15]* [0.x.27]*   
* [0.x.28]*
    [2.x.16] [2.x.17]* [0.x.28]*   
* [0.x.29]*
    [2.x.18] [2.x.19]   
* [0.x.30]*
    [2.x.20] [2.x.21] [2.x.21].   
* [0.x.31]*
    [2.x.22] [2.x.23]   
* [0.x.32]*
    [2.x.24] [2.x.25]   
* [0.x.33]*
    [2.x.26] [2.x.27]   
* [0.x.34]*
    [2.x.28] [2.x.29]   
* [0.x.35]*
    [2.x.30] [2.x.31]   
* [0.x.36]*
 BarycentricPolynomial乘以一个常数。

* 
* [0.x.37]*
 将一个常数添加到一个BarycentricPolynomial中。

* 
* [0.x.38]*
 从一个常数中减去一个BarycentricPolynomial。

* 
* [0.x.39]*
 将一个BarycentricPolynomial写到提供的输出流中。

* 
* [0.x.40]

