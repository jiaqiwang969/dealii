include/deal.II-translator/base/incremental_function_0.txt
[0.x.0]*
   这个类代表一个增量函数。也就是说，给定一个任意的函数 [2.x.0] ，这个类将返回 <code>f(t)
* 
* - f(t
* 
* - delta_t)</code>，其中[2.x.1]表示在时间[2.x.2]评估的函数，同样地，<code>f(t
* 
*-delta_t）</code>表示在时间<code>t
* 
*-delta_t</code>。递减[2.x.3]是由set_decrement()方法设置的。这个类的主要应用是将一个给定的Dirichlet边界条件函数转换成增量形式，这是一些非线性求解方案的实现所要求的。   
* [2.x.4]   
* [0.x.1]*
     将模板参数的值作为一个静态成员常量导出。    这在模板编程的背景下有时很有用。   
* [0.x.2]*
     用于表示时间的标量值实数类型。   
* [0.x.3]*
     封装给定函数的构造函数 [2.x.5] 。        
* [2.x.6]该类存储了对[2.x.7]的非常量引用，并将在评估过程中调用[2.x.8]，以便在任何任意时间评估[2.x.9]类。    保证[2.x.10]的时间状态在该类的每个函数评估后返回到其原始设置。   
* [0.x.4]*
     返回函数在给定点的值。        除非只有一个分量（即函数是标量的），否则你应该说明你希望被评估的分量。默认情况下，第一个分量的值被计算出来。   
* [0.x.5]*
     返回一个矢量值函数在某一点的所有分量。        在调用这个函数之前，要求[2.x.11]向量有正确的大小。   
* [0.x.6]*
     设置时间递减。        希望这个值是正的。   
* [0.x.7]*
     对被包装的函数的引用。   
* [0.x.8]*
     时间递减。   
* [0.x.9]*
     一个用于存储数值的辅助向量。   
* [0.x.10]*
     用于支持多线程背景下的评估的线程互斥。   
* [0.x.11]

