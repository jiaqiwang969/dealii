include/deal.II-translator/base/synchronous_iterator_0.txt
[0.x.0]*
 一个表示一组迭代器的类，每个迭代器都同时递增一个。这通常用于像 [2.x.0] 这样的调用，我们有同步的迭代器在容器中行进 [2.x.1] 。如果这种类型的对象代表一个范围的结束，只有第一个元素被考虑（我们只有 [2.x.2] ，没有 [2.x.3] ）。在 [2.x.4] 中给出了一个关于如何使用这个类的例子。
* 当前类的模板参数应是[2.x.5]类型，参数等于迭代器类型。
* 可以使用[2.x.6]访问各个迭代器，其中X是对应于所需迭代器的数字。
* 这个类型，以及与之相关的辅助函数，被用作Threading Building Blocks的blocked_range类型的Value概念。

* 
* [0.x.1]*
   构造函数。 
* [0.x.2]*
   解除引用常量操作符。返回一个对当前类所代表的迭代器的常量引用。 
* [0.x.3]*
   解除引用操作符。返回一个对当前类所代表的迭代器的引用。 
* [0.x.4]*
   当前类所代表的迭代器的存储。 
* [0.x.5]*
 返回第一个参数的第一个元素是否小于第二个参数的第一个元素。由于被比较的对象同时前进所有的元素，所以比较第一个元素就足够了。
* [2.x.7] SynchronousIterators

* 
* [0.x.6]*
 返回第一个和第二个参数之间的距离。由于被比较的对象在同一时间向前推进所有的元素，所以对第一个元素进行差分就足够了。
* [2.x.8] SynchronousIterators

* 
* [0.x.7]*
 通过[2.x.9]推进一个迭代器的元组。
* [2.x.10] SynchronousIterators

* 
* [0.x.8]*
 以[2.x.11]推进一个迭代器的元组。
* [2.x.12] SynchronousIterators

* 
* [0.x.9]*
 以[2.x.13]推进一个迭代器的元组。
* [2.x.14] SynchronousIterators

* 
* [0.x.10]*
 将一个迭代器的元组提前1。
* [2.x.15] SynchronousIterators

* 
* [0.x.11]*
 将一个迭代器的元组前进1。
* [2.x.16] SynchronousIterators

* 
* [0.x.12]*
 将一个迭代器的元组推进1。
* [2.x.17] SynchronousIterators

* 
* [0.x.13]*
 将这个迭代器的元素向前推进 [2.x.18] 。
* [2.x.19] SynchronousIterators

* 
* [0.x.14]*
 将这个迭代器的元素前进1。
* [2.x.20] SynchronousIterators

* 
* [0.x.15]*
 比较同步迭代器的不平等。因为它们是同步进行的，所以只比较第一个元素就可以了。
* [2.x.21] SynchronousIterators

* 
* [0.x.16]

