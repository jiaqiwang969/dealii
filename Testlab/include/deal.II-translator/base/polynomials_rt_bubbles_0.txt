include/deal.II-translator/base/polynomials_rt_bubbles_0.txt
[0.x.0]*
 这个类实现了[1.x.0]符合要求的、矢量值的增强型Raviart-Thomas多项式。
* 与经典的Raviart-Thomas空间类似，增强的Raviart-Thomas多项式的构造是这样的：发散是在张量积多项式空间[1.x.1]。
* 这个空间的形式是[1.x.2]，其中[1.x.3]定义如下。 [2.x.0] <dt> 在二维。

* 
* [1.x.4]
* 
* <dt> 在三维中。
* [1.x.5]
* [2.x.1] 其中[2.x.2] 。
* 

* 
* [2.x.3] 与经典的Raviart-Thomas空间不同，增强空间的最低阶为1，与Brezzi-Douglas-Marini（BDM）多项式空间类似。
*空间的总维度[1.x.6]，其中[1.x.7]是空间维度。这允许将形状函数与Gauss-Lobatto正交点联系起来，如下图所示。
* [2.x.4] 
* 

* 
* [2.x.5] 

 
* [0.x.1]*
   构造函数。创建给定度数的RT_bubbles多项式的所有基础函数。 
* [0.x.2]*
   计算每个RT_bubbles多项式在[2.x.6]的值和一、二次导数，向量的大小必须为零或等于<tt>n()</tt>。 在第一种情况下，该函数将不计算这些值。    如果你需要所有张量积多项式的值或导数，那么使用这个函数，而不是使用任何<tt>compute_value</tt>, <tt>compute_grad</tt>或<tt>compute_grad_grad</tt>函数，见下文，在所有张量积多项式上循环。 
* [0.x.3]*
   返回空间的名称，即<tt>RT_Bubbles</tt>。 
* [0.x.4]*
   返回空间<tt>RT_Bubbles(degree)</tt>中的多项式的数目，而不需要建立PolynomialsRT-Bubbles的对象。这是由FiniteElement类所要求的。 
* [0.x.5]*
    [2.x.7] [2.x.8].   
* [0.x.6]*
   一个代表空间的Raviart-Thomas部分的对象  
* [0.x.7]*
   单项式的存储，我们需要从零度到[1.x.8]的所有多项式。 
* [0.x.8]

