include/deal.II-translator/base/polynomials_nedelec_0.txt
[0.x.0]*
 这个类实现了第一个家族[1.x.0]的符合性，向量值的多项式，由J.-C. Nédélec在1980年提出。Nédélec在1980年提出（Numer. Math. 35）。
* Nédélec多项式的构造是这样的：卷曲是在张量积多项式空间[1.x.1]中。因此，每个分量的多项式阶数必须在相应的两个方向上高一阶，产生二维和三维的多项式空间[1.x.2]和[1.x.3]，分别。
* 

* 
* [2.x.0] 

* 
* [0.x.1]*
   构造函数。创建所有给定度数的Nédélec多项式的基函数。     [2.x.1] k：Nédélec空间的度数，它是最大的张量积多项式空间的度数 [1.x.4] 包含的。 
* [0.x.2]*
   计算每个Nédélec多项式在[2.x.2]处的值和一、二阶导数 向量的大小必须是零或等于<tt>n()</tt>。 在第一种情况下，该函数将不计算这些值。    如果你需要所有张量积多项式的值或导数，那么使用这个函数，而不是使用任何<tt>compute_value</tt>, <tt>compute_grad</tt>或<tt>compute_grad_grad</tt>函数，见下文，在所有张量积多项式上循环。 
* [0.x.3]*
   返回空间的名称，即<tt>Nedelec</tt>。 
* [0.x.4]*
   返回空间<tt>N(degree)</tt>中的多项式的数量，而不需要建立PolynomialsNedelec的对象。这是由FiniteElement类所要求的。 
* [0.x.5]*
    [2.x.3] [2.x.4].   
* [0.x.6]*
   一个代表单个组件的多项式空间的对象。我们可以通过旋转评估点的坐标来重新使用它。 
* [0.x.7]*
   一个静态成员函数，用于创建我们用来初始化#polynomial_space成员变量的多项式空间。 
* [0.x.8]

