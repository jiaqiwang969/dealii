include/deal.II-translator/base/polynomials_bdm_0.txt
[0.x.0]*
 这个类实现了Brezzi和Fortin的[1.x.2]中描述的[1.x.0]--符合要求的、矢量值的Brezzi-Douglas-Marini（[1.x.1]）多项式（参考119页
* 
* - 124).
* [1.x.3]多项式空间包含整个[2.x.0]空间（用PolynomialSpace Legendre多项式构建）以及[2.x.1]的一部分（即[2.x.2] ）。 此外，[2.x.3]元素的设计使[2.x.4]和[2.x.5] 。下面给出二维和三维[2.x.6]元素的更多细节。[2.x.7] <dt> 在二维： [2.x.8] [2.x.9] 。
* 注意：标量函数的卷曲是由[2.x.10]给出的。
* 用来构建[2.x.11]形状函数的基础是  
* [1.x.4]
* 
* [2.x.12]空间的维度是[2.x.13] ，每条边有[2.x.14]个未知数，内部有[2.x.15]个未知数。
* <dt> 在三维中： [2.x.16] [2.x.17] 。
* 注意：[2.x.18]的三维描述不是唯一的。 参见[1.x.5]第122页的替代定义。
* [2.x.19]空间的尺寸是[2.x.20] ，每个面有[2.x.21]个未知数，[2.x.22]个内部未知数。
* [2.x.23] 
 

* 
* 

* 
* [2.x.24] 

* 
* [0.x.1]*
   构造函数。创建给定度数的BDM多项式的所有基函数。     [2.x.25] k：BDM-空间的度数，即BDM-空间中包含的最大完整多项式空间[1.x.6]的度数。 
* [0.x.2]*
   计算每个BDM多项式在[2.x.26]的值和一、二次导数 向量的大小必须是零或等于<tt>n()</tt>。 在第一种情况下，该函数将不计算这些值。    如果你需要所有张量积多项式的值或导数，那么使用这个函数，而不是使用任何<tt>compute_value</tt>, <tt>compute_grad</tt>或<tt>compute_grad_grad</tt>函数，见下文，在所有张量积多项式上循环。 
* [0.x.3]*
   返回空间的名称，即<tt>BDM</tt>。 
* [0.x.4]*
   返回空间<tt>BDM(degree)</tt>中的多项式的数目，而不需要建立PolynomialsBDM的对象。这是由FiniteElement类所要求的。 
* [0.x.5]*
    [2.x.27] [2.x.28].   
* [0.x.6]*
   一个代表这里使用的多项式空间的对象。构造函数用单项式基础来填充它。 
* [0.x.7]*
   单项式的存储。在2D中，这只是阶数为[1.x.7]的多项式。在三维中，我们需要从0度到[1.x.8]的所有多项式。 
* [0.x.8]*
   一个突扰器，可以守护以下的抓取数组。 
* [0.x.9]*
   辅助内存。 
* [0.x.10]*
   辅助内存。 
* [0.x.11]*
   辅助存储器。 
* [0.x.12]*
   辅助存储器。 
* [0.x.13]*
   辅助存储器。 
* [0.x.14]

