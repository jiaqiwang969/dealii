include/deal.II-translator/base/path_search_0.txt
[0.x.0]*
 支持在路径列表和后缀列表中搜索文件。
* 为支持的每个文件类别维护一个搜索路径列表。一个文件类别是由一个唯一的字符串定义的。提供的类有： [2.x.0] <dt> MESH [2.x.1] 各种格式的网格输入文件（见GridIn） <dt> PARAMETER [2.x.2] 参数文件（<tt>.prm</tt>） [2.x.3 
* 使用add_class()可以很容易地添加额外的文件类别。
* 使用方法。首先，你为某个文件类构造一个PathSearch对象，比如说网格。然后，你使用find()方法获得一个完整的路径名称，你就可以打开文件了。

* 
* [1.x.0]
* 
* 这段代码将首先遍历为文件类<tt>MESH</tt>设置的列表中的所有路径。如果它成功地打开了一个文件，它将返回<tt>istream</tt>对象。如果没有，它将尝试追加后缀列表中的第一个后缀，并进行同样的操作。以此类推。如果最后没有找到文件，会抛出一个异常。
* 如果你想把你的搜索限制在某个网格格式，例如<tt>.inp</tt>，那么要么在上面的代码中使用<tt>"grid.inp"</tt>，要么使用替代的find(const [2.x.4] [2.x.5] char*) 函数

* 
* [1.x.1]
* 
* 路径列表默认以当前目录（<tt>"./"<tt>）开始，后面可以选择以标准目录的deal.II开始。使用show()来找出一个给定类的路径列表。路径和后缀可以分别用函数add_path()和add_suffix()来添加。
* 

* 
* [2.x.6] 路径列表中的目录应该总是以尾部的<tt>"/"<tt>结束，而后缀应该总是以点开始。这些字符不会被自动添加（允许你做一些真正的文件名编辑）。
* [2.x.7] 增加对环境变量的支持，就像在kpathsea中一样。
* 

* 
* [2.x.8] 

* 
* [0.x.1]*
   向列表中添加新项目的位置。 
* [0.x.2]*
   构造函数。第一个参数是一个字符串，确定要搜索的文件的类别。    debug参数决定了该类文件的粗略程度。 
* [0.x.3]*
   在构造函数指定的类中寻找一个文件，并返回其完整的路径名称（包括可能的后缀）。    文件搜索的工作方式是实际尝试打开该文件。如果[2.x.9]与提供的[2.x.10]成功，那么文件就被找到了，否则搜索继续进行。     [2.x.11] 小心使用[2.x.12] 特别是，要非常小心地使用<tt>"w"</tt>! 如果文件不存在，就无法找到它。如果它确实存在，[2.x.13]函数将把它截断成零长度。     [2.x.14] filename 要找到的文件的基本名称，不包括路径成分和后缀。   [2.x.15] open_mode 移交给[2.x.16]函数的模式。 
* [0.x.4]*
   在构造函数指定的类中找到一个文件，并返回其完整的路径名称。不使用标准的后缀列表，而只尝试应用给定的后缀。    文件搜索的工作方式是实际尝试打开该文件。如果[2.x.17]与所提供的[2.x.18]成功，那么文件就被找到了，否则搜索继续进行。     [2.x.19] 小心使用[2.x.20] 特别是，要非常小心地使用<tt>"w"</tt>! 如果文件不存在，就无法找到它。如果它确实存在，[2.x.21]函数将把它截断成零长度。     [2.x.22] filename 要找到的文件的基本名称，不包括路径组件和后缀。   [2.x.23] 后缀 打开时要使用的后缀。   [2.x.24] open_mode 移交给 [2.x.25] 函数的模式。 
* [0.x.5]*
   显示此对象使用的路径和后缀。 
* [0.x.6]*
   添加一个新的类。 
* [0.x.7]*
   为当前的类添加一个路径。参见[2.x.26]中可能的位置参数。 
* [0.x.8]*
   为当前的类添加一个路径。见[2.x.27]中可能的位置参数。 
* [0.x.9]*
   这个类没有在路径搜索机制中注册。 
* [2.x.28]   
* [0.x.10]*
   PathSearch类在其路径列表中找不到有此名称的文件。 
* [2.x.29]   
* [0.x.11]*
   类映射中的值的类型。 
* [0.x.12]*
   初始化静态列表对象以便进一步使用。 
* [0.x.13]*
   获取某个类的路径列表。用来在构造函数中设置#my_path_list。 
* [0.x.14]*
   获取某类的后缀列表。用于在构造函数中设置#my_suffix_list。 
* [0.x.15]*
   这个对象所处理的文件类。 
* [0.x.16]*
   所有类的所有路径列表，这样我们就可以只建立一次。 
* [0.x.17]*
   每个类的后缀列表。 
* [0.x.18]*
   这个对象所属的类的路径列表。 
* [0.x.19]*
   此对象所属类的后缀列表。 
* [0.x.20]*
   调试标志。如果为零则没有输出。 
* [0.x.21]*
   空字符串。 
* [0.x.22]

