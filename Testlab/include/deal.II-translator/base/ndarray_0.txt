include/deal.II-translator/base/ndarray_0.txt
[0.x.0]*
     一个变量模板辅助类，用于递归地 "展开 "ndarray的大小信息。这在一个例子中得到了最好的解释。   
* [1.x.0]
*     
* [0.x.1]*
     递归地定义HelperArray<T, N, ...Ns>的类型别名 "type"，在HelperArray<T, [2.x.1]周围包裹一个[2.x.0]。    
* [0.x.2]*
     一旦没有[2.x.2]模板参数，就结束递归，并简单地将类型别名设置为T类型。   
* [0.x.3]*
 用于方便地定义多维[1.x.1]的（变量模板）类型别名
* 我们试图用类型别名解决的问题如下。假设你想创建一个多维的双数数组，例如，等级为3，大小为2，3，4的第一，中间和最后的索引。那么使用C风格的数组，你可以简单地写道

* 
* [1.x.2]
* 现在，有很多很好的理由可以说明为什么不鼓励使用C风格的数组（从与STL函数的不兼容到需要笨拙的包装器，以及在比较相等时的意外，等等），如果你想做同样的事情，使用更现代（和鼓励）的[2.x.3]类，那么你必须声明

* 
* [1.x.3]
* [2.x.4]的重复看起来很别扭，更糟糕的是，索引范围已经颠倒了：最左边的索引范围是[0,2]，中间的索引范围是[0,3]，最右边的索引范围是[0,4)。我们通过提供一个ndarray类来解决这个问题，它允许你通过简单的书写来声明上述堆叠的[2.x.5]类型。

* 
* [1.x.4]
* 
* 

* 
* [2.x.6] [2.x.7]只是以[1.x.5]（"使用 "声明）为形式的语法糖。它不是一个deal.II特定的类，而只是一个帮助工具，用于干净地定义由 "堆叠"[2.x.8]类实现的多维数组。

* 
* [0.x.4]

