include/deal.II-translator/multigrid/mg_transfer_component_0.txt
[0.x.0] MGTransferBase在mg_base.h中定义。

* 
* [0.x.1]*
 为组件明智的多栅格传输实现矩阵生成。
* 

* 
* [2.x.0] MGTransferBlockBase可能是一个更合理的类。但最终还是应该开发一个允许选择多个组件的类。

* 
* [0.x.2]*
   这个对象使用的内存。 
* [0.x.3]*
   实际上是为每个层次建立延长矩阵。    这个函数只被派生类调用。这些也可以设置成员变量[2.x.1]和[2.x.2]成员变量来限制传递矩阵的某些成分。此外，它们使用[2.x.3]对组件进行重新排序和分组。 
* [0.x.4]*
   所选组件的标志。    转移运算符只作用于这里有<tt>true</tt>条目的组件。如果使用#target_component的重新编号，这指的是[1.x.0]组件。 
* [0.x.5]*
   所选组件的标志。    转移操作只作用于这里有<tt>true</tt>项的组件。如果使用#mg_target_component的重新编号，这指的是[1.x.1]组件。 
* [0.x.6]*
   如果需要重新编号，细级向量的目标分量。 
* [0.x.7]*
   如果需要对水平向量进行重新编号，则为目标分量。 
* [0.x.8]*
   多级向量的大小。 
* [0.x.9]*
   每个组件的起始索引。 
* [0.x.10]*
   所有层次上的每个组件的起始索引。 
* [0.x.11]*
   先调用build()函数。 
* [0.x.12]*
   实际的延长矩阵。列指数属于母单元的道夫指数，即粗级别。而行指数属于子单元，即细级别。 
* [0.x.13]*
   这个变量持有<tt>copy_to/from_mg</tt>-函数的映射。  该数据首先是全局索引，然后是级别索引。 
* [0.x.14]*
   存储边界指数。这些是限制矩阵中的边界值所需要的。 
* [0.x.15]*
 MGTransferBase接口的实现，用于块状矩阵和简单向量。这个类使用MGTransferComponentBase选择一个单独的组件或将几个组件分组到一个块中。转移操作符本身是为Vector和BlockVector对象实现的。
* 请参阅MGTransferBase来了解哪一个转移类最适合你的需要。

* 
* [0.x.16]*
   没有约束矩阵的构造函数。只在不连续的有限元或没有局部细化的情况下使用这个构造函数。 
* [0.x.17]*
   带有约束矩阵的构造函数。 
* [0.x.18]*
   解构器。 
* [0.x.19]*
   实际上是为分组的组件建立延长矩阵。    这个函数是MGTransferComponentBase中相同函数的前端。     [2.x.4]选定 要从多级向量复制到全局向量的块的编号。这个数字是指通过<tt>target_component</tt>重新编号。     [2.x.5] mg_selected 应建立转移矩阵的块的编号。    如果<tt>mg_target_component</tt>存在，这指的是重新编号的组件。     [2.x.6] target_component这个参数允许对细级向量中的组件进行分组和重新编号（见[2.x.7] [2.x.8] mg_target_component这个参数允许对级向量中的组件进行分组和重新编号（见[2.x.9] 它也会影响<tt>selected</tt>参数的行为 [2.x.10] boundary_indices持有每一级的边界指数。 
* [0.x.20]*
   改变选定的组件。小心处理!  
* [0.x.21]*
   从全局网格上的向量转移到活动自由度的多级向量。特别是，对于一个全局细化的网格，只有[2.x.11]中最细的层次被填充为[2.x.12]的普通拷贝，所有其他的层次对象都不被触动。 
* [0.x.22]*
   从多级向量转移到普通向量。    将一个多级向量的活动部分的数据复制到向量的相应位置。 
* [0.x.23]*
   将一个多级向量添加到一个正常向量中。    和前面的函数一样工作，但可能不适合连续元素。 
* [0.x.24]*
   从全局网格上的一个向量转移到活动自由度的多级向量。特别是，对于全局细化的网格，只有[2.x.13]中最细的层次被填充为[2.x.14]的普通拷贝，其他的层次对象都没有被触动。 
* [0.x.25]*
   从多级向量转移到普通向量。    将多级向量的活动部分的数据复制到全局BlockVector的相应位置。 
* [0.x.26]*
   将一个多级向量添加到一个正常向量。    和前面的函数一样工作，但可能不适合连续元素。 
* [0.x.27]*
   这个对象使用的内存。 
* [0.x.28]*
   公共函数的实现。 
* [0.x.29]*
   公共函数的实现。 
* [0.x.30]*
   copy_to_mg()的实际实现。 
* [0.x.31]*
   全局向量的选定组件。 
* [0.x.32]*
   多网格内的选定分量。 
* [0.x.33]*
   细化边上的自由度。对于每一层，索引集表示哪一层的自由度在朝向下一层的细化边上，不包括边界自由度。 
* [0.x.34]*
   全局系统的约束。 
* [0.x.35]

