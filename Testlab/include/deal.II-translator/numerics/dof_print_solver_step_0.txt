include/deal.II-translator/numerics/dof_print_solver_step_0.txt
[0.x.0]*
 打印求解器中的中间解。 这是从作为模板参数提供的求解器类中派生出来的。 它使用DoFHandler实现了求解器的[2.x.0]功能。这样一来，中间向量可以被看作是有限元函数。这个类首先可以用来理解求解器是如何工作的（例如，可视化各种求解器的平滑特性，例如在多网格背景下），其次可以研究为什么和如何求解器不能解决某些类别的问题。
* 这个类的对象通过模板参数提供一个求解器类，并提供一个文件名（作为一个字符串），在每次迭代中用这个文件构建一个新的文件（命名为<tt>basename.[step].[senix]</tt>），并使用DataOut类将解决方案作为一个有限元场写入其中。请注意，这个类可能会产生巨大的数据量!
* 

* 
* [2.x.1] 

* 
* [0.x.1]*
   构造函数。 首先，我们接受求解器所需的参数。 [2.x.2] data_out是作为有限元函数做输出的对象。    每个迭代步骤将产生一个名称为<tt>basename.[step].[senix]</tt>的输出文件。 
* [0.x.2]*
   迭代方法的回调函数。 
* [0.x.3]*
   输出对象。 
* [0.x.4]*
   文件名的基础。 
* [0.x.5]

