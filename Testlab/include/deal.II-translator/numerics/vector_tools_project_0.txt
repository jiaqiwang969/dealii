include/deal.II-translator/numerics/vector_tools_project_0.txt
[0.x.0]*
    [2.x.0] 内插和投影  
* [0.x.1]*
   计算[2.x.1]对有限元空间的投影。换句话说，给定一个函数[2.x.2]，当前函数计算一个有限元函数[2.x.3]，其特征是节点值[2.x.4]的（输出）矢量满足方程  
* [1.x.0]
*对于所有测试函数 [2.x.5] 。这需要解决一个涉及质量矩阵的线性系统，因为上面的方程等同于线性系统  
* [1.x.1]
*这也可以写成 [2.x.6] 与 [2.x.7] 和 [2.x.8] 。    默认情况下，[2.x.9]的边界值不需要也没有强加，但是这个函数有一些可选的参数，允许强加零边界值，或者在第一步，以类似于上面的方式将[2.x.10]的边界值投影到网格边界的有限元空间上，然后用这些值作为[2.x.11]的强加边界值。这个函数的参数排序是这样的：如果你不想先投影到边界，你不需要给出第二个正交公式（类型为`正交<dim-1>`，用于计算矩阵和边界值投影的右手边），但如果你想这样做，你必须这样做。    如果满足以下条件，则使用MatrixFree实现。
* 

* 
* 

* 
 

 
* 
* - [2.x.12] 是假的。
 

* 
* 

* 
* 

 
* 
* - [2.x.13] 是假的。
 

* 
* 

* 
* 

 
 
* - FiniteElement是由MatrixFree类支持的。
 

 
* 

* 
 

 
 
* - FiniteElement的组件少于5个
 

* 
 

 
 

 
 
* - FiniteElement的度数小于9。
* 

* 
 

 
 

 
* 
* - dim==spacedim 在这种情况下，这个函数使用给定的正交公式执行数值正交，用于右手边的积分[2.x.14]，而QGauss(fe_degree+2)对象被用于质量算子。因此，你应该确保给定的正交公式对于创建右手边是足够精确的。    否则，只支持串行三角计算，质量矩阵使用[2.x.15]组装，然后给定的正交规则用于矩阵和右手边。  因此，你应该确保给定的正交公式也足以用来创建质量矩阵。特别是，正交公式的度数必须足够高，以确保质量矩阵是可逆的。例如，如果你使用的是FE_Q(k)元素，那么矩阵项[2.x.16]的积分在每个变量中都是多项式度数[2.x.17]，你需要一个在每个坐标方向都有[2.x.18]点的高斯正交公式来确保[2.x.19]是可倒的。    更多信息请参见该命名空间的一般文档。    在1d中，边界正交公式的默认值是一个无效的对象，因为在1d中不会发生边界上的积分。     [2.x.20] mapping 要使用的映射对象。   [2.x.21] dof 描述投射到的有限元空间的DoFHandler，对应于 [2.x.22] [2.x.23] 约束 在组装质量矩阵时使用的约束，通常在你有悬挂节点时需要。   [2.x.24] 正交 要用于组装质量矩阵的正交公式。   [2.x.25] function 投射到有限元空间的函数。   [2.x.26] vec 投射的函数将被存储在输出向量中。这个向量必须已经被初始化，并且不能有鬼魂元素。   [2.x.27] enforce_zero_boundary 如果为真，[2.x.28] 将有零边界条件。   [2.x.29] q_boundary 如果[2.x.30]为真，将使用正交规则。   [2.x.31] project_to_boundary_first 如果为真，在投射函数的内部之前执行对边界的投射。 
* [0.x.2]*
   调用上面的project()函数，使用<tt>mapping=MappingQGeneric [2.x.32] 。  
* [0.x.3]*
   和上面一样，但有hp-capabilities。 
* [0.x.4]*
   调用上面的project()函数，使用一个[2.x.33]映射对象的集合，即使用[2.x.34]。  
* [0.x.5]*
   与上述标量值正交数据的投影相同。  用户提供的函数应该根据单元格迭代器和正交数在正交点返回一个值，当然也应该与提供的[2.x.35]对象一致，该对象将被用来组装右手边。    这个函数可以和lambdas一起使用。 
* [1.x.2]
* 其中[2.x.36]是一个CellDataStorage对象，它存储正交点数据。 
* [0.x.6]*
   与上述标量值MatrixFree正交数据的投影相同。  用户提供的函数[2.x.37]应根据单元格号和正交点号在正交点返回一个VectorizedArray值，并应与[2.x.38]一致。这个函数可以与lambdas一起使用。 
* [1.x.3]
* 其中[2.x.39]是一个类型为Table<2, VectorizedArray<double>>的对象，它存储正交点数据。     [2.x.40]允许额外指定使用[2.x.41]的哪个组件，如果它是用[2.x.42] DoFHandler<dim>*></code>构造的。它将在内部用于FEEvaluation对象的构造器。 
* [0.x.7]*
   与上述相同，但对于<code>n_q_points_1d = matrix_free.get_dof_handler().get_fe().degree+1</code>。 
* [0.x.8]

