include/deal.II-translator/numerics/vector_tools_integrate_difference_0.txt
[0.x.0]*
    [2.x.0]函数的评估和错误  
* [0.x.1]*
   计算有限元解的单元误差。 对作为连续函数对象的参考函数和有限元函数之间的差异进行积分。这个函数的结果是向量[2.x.1]，包含三角形的每个活动单元[2.x.2]的一个值。这个向量[2.x.3]的每个值都等于  
* [1.x.0]
*其中[2.x.4]表示选择的规范，[2.x.5]表示精确解。    假设函数[2.x.6]exact_solution的分量数与[2.x.7]使用的有限元的分量数一致。 为了计算有限元解的全局误差准则，使用[2.x.8]与用该函数计算的输出向量。     [2.x.9] 映射 在积分差分时使用的映射 [2.x.10] 。   [2.x.11] dof 描述解向量所在的有限元空间的DoFHandler对象。   [2.x.12] fe_function 代表数值逼近的节点值的向量 [2.x.13] 。这个向量需要对应于 [2.x.14] 所代表的有限元空间 [2.x.15] exact_solution 用于计算误差的精确解。   [2.x.16] difference 如上所述计算的值[2.x.17]的向量。   [2.x.18] q 用来近似上述积分的正交公式。注意有些正交公式在积分中比其他公式更有用 [2.x.19] 。例如，已知[2.x.20]对拉普拉斯方程精确解[2.x.22]的近似[2.x.21]在对应于QGauss(2)对象的2D单元的4个高斯点（或3D的8个点）上特别精确（实际上是超融合，即精确到高阶）。因此，由于QGauss(2)公式只对这些特定点上的两个解进行评估，选择这个正交公式可能表明误差远远小于实际情况。   [2.x.23] 法线 上面显示的应该计算的法线[2.x.24]。如果规范是[2.x.25]，那么调用此函数的有限元需要至少有dim向量分量，分歧将在第一个div分量上计算。例如，这对用于混合拉普拉斯方程（[2.x.26]）和斯托克斯方程（[2.x.27]）的有限元有效。   [2.x.28] 权重 附加参数[2.x.29]允许评估加权规范。 权重函数可以是标量的，在域中为所有分量平等地建立一个空间上的可变权重。例如，这可用于只对域的部分进行积分。  权重函数也可以是矢量值的，有和有限元一样多的成分。然后，不同的分量得到不同的权重。一个典型的应用是当只计算与一个或一个解变量子集有关的误差时，在这种情况下，其他组件的权重值等于零。ComponentSelectFunction类对这一目的特别有用，因为它提供了这样一个 "屏蔽 "权重。该权重函数被期望为正值，但负值不会被过滤。这个函数的默认值是一个空指针，被解释为 "没有加权函数"，即在整个域中，所有向量成分的权重统一为1。   [2.x.30] 指数 这个值表示在计算[2.x.32] -norms和[2.x.33] -norms时使用的[2.x.31] 。如果选择了[2.x.35][2.x.36]或[2.x.37]以外的[2.x.34]，该值会被忽略。      更多信息请参见该命名空间的一般文档。   
* [2.x.38] 如果这里的积分发生在[2.x.39]对象的单元上，那么这个函数计算输出向量的向量元素[2.x.40]，其单元数量与当前处理器的三角测量对象的活动单元数量相同。然而，并不是所有的活动单元实际上都是本地拥有的：有些可能是幽灵或人造单元（见[2.x.41]"这里 "和[2.x.42]"这里"）。  在分布式三角剖分的情况下，计算出的向量将包含不属于本地的单元的零。因此，为了计算[1.x.1][2.x.43]的误差（例如），需要合并来自不同处理器的误差，见[2.x.44]该模板的实例化提供给一些矢量类型（见命名空间的一般文档），但只有InVectors如命名空间的文档，OutVector只有Vector<double> 和 Vector<float>。 
* [0.x.2]*
   调用 integrate_difference() 函数，见上文，<tt>mapping=MappingQGeneric [2.x.45] 。  
* [0.x.3]*
   与上面的hp相同。 
* [0.x.4]*
   调用 integrate_difference() 函数，见上文，<tt>mapping=MappingQGeneric [2.x.46] 。  
* [0.x.5]*
   在每个有<tt>tria.n_active_cells()</tt>项的单元格上取一个错误向量[2.x.47]，并返回由[2.x.48]给出的全局错误。 [2.x.49]向量通常是由[2.x.50]产生的输出，你通常希望为[2.x.51 ]的值与你在[2.x.52]中使用的值相同。如果给定的三角形是[2.x.53]中不对应于本地拥有的单元格的条目被假定为0.0，并使用MPI进行并行还原以计算全局误差。     [2.x.55] tria 与[2.x.56]中的条目相对应的活动单元的三角形 [2.x.57] cellwise_error 每个活动单元的误差矢量。   [2.x.58] norm 要计算的规范类型。   [2.x.59] exponent 用于[2.x.61] -norms和[2.x.62] -norms的指数[2.x.60]。如果选择[2.x.63]以外的[2.x.64][2.x.65]或[2.x.66]，该值会被忽略。   
* [2.x.67] 为Vector<double>和Vector<float>类型实例化。 
* [0.x.6]

