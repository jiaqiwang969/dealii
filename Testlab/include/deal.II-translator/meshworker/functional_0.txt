include/deal.II-translator/meshworker/functional_0.txt
[0.x.0]*
     将对一个函数的局部贡献组装成全局函数的类。               
* [2.x.0]     
* [0.x.1]*
       初始化本地数据以存储函数。数字<tt>n</tt>是要计算的函数的数量。     
* [0.x.2]*
       初始化以后用于装配的DoFInfo对象中的本地数据。            如果[2.x.2]，[2.x.1]对象指的是一个单元，否则指的是一个内部或边界面。     
* [0.x.3]*
       将局部值组装成全局向量。     
* [0.x.4]*
       将两个局部值集合到全局向量中。     
* [0.x.5]*
       在#results中的第i个条目的值。     
* [0.x.6]*
       将结果添加到其中的值。     
* [0.x.7]*
     计算一个或几个函数的单元和面的贡献，通常用于误差估计。对于一个给定的单元或面，结果被储存在哪个组件中的信息是由其user_index变量传递的。因此，在使用这个类之前，你需要确保适当地设置这些变量。       
* [2.x.3]     
* [0.x.8]*
       构造函数。初始化成员变量。     
* [0.x.9]*
       初始化函数，指定[2.x.4]向量以及是否应单独收集脸部数据。             [2.x.5]应该包含两个名为 "单元格 "和 "面孔 "的块向量（后者只有在[2.x.6]为真时才有）。在这两个中的每一个中，每个块都应该有相同的大小，并且大到足以容纳它所使用的循环所覆盖的单元格和面孔中设置的所有用户指数。通常，对于估计器来说，这分别是[2.x.7]和[2.x.8]。            使用BlockVector似乎很麻烦，但它允许我们同时组装几个函数，每个区块都有一个。误差估计的典型情况是在每个向量中只是有一个块。     
* [0.x.10]*
       初始化以后用于组装的DoFInfo对象中的本地数据。            如果[2.x.10]，[2.x.9]对象指的是一个单元，否则指的是一个内部或边界面。     
* [0.x.11]*
       将局部值组装成全局向量。     
* [0.x.12]*
       将两个局部值集合到全局向量中。     
* [0.x.13]*
       [2.x.11]中第i项的值       
* [0.x.14]

