[0.x.0]*
  [2.x.0]  Polynomials  [2.x.1] 

* 
* [0.x.1]*
 A namespace in which classes relating to the description of 1d polynomial spaces are declared.

* 
* [0.x.2]*
   Definition of piecewise 1D polynomials for the unit interval. This space   allows the description of interpolating polynomials on parts of the unit   interval, similarly to the definition of finite element basis functions   on subdivided elements. The primary purpose of this class is to   allow constructing the shape functions of the FE_Q_iso_Q1 class that has   a number of interpolation points in each coordinate direction, but instead   of using them for higher-order polynomials just chooses piecewise linear   shape functions
* 
*  -  in effect, it is a  [2.x.2]  element defined on a   subdivision of the reference cell, and replicated on each of these   sub-cells.     This class is not derived from the ScalarPolynomialsBase base class   because it is not actually a polynomial
* 
*  -  it is a piecewise polynomial.   However, it is interface-compatible with the  [2.x.3]    class, and consequently can be used as template argument for   TensorProductPolynomials.    
*  [2.x.4]   
* [0.x.3]*
     Constructor for Lagrange polynomial on an interval that is a subset of     the unit interval. It uses a polynomial description that is scaled to     the size of the subinterval compared to the unit interval, the total     number of intervals (subdivisions), the current index of the interval     as well as if the polynomial spans onto the next interval (e.g., if it     lives on two neighboring intervals).         If the number of intervals is one, the piecewise polynomial behaves     exactly like a usual polynomial.    
* [0.x.4]*
     Return the value of this polynomial at the given point, evaluating the     underlying polynomial. The polynomial evaluates to zero when outside of     the given interval (and possible the next one to the right when it     spans over that range).    
* [0.x.5]*
     Return the values and the derivatives of the Polynomial at point     <tt>x</tt>.  <tt>values[i], i=0,...,values.size()-1</tt> includes the     <tt>i</tt>th derivative. The number of derivatives to be computed is     thus determined by the size of the vector passed.         Note that all the derivatives evaluate to zero at the border between     intervals (assuming exact arithmetic) in the interior of the unit     interval, as there is no unique gradient value in that case for a     piecewise polynomial. This is not always desired (e.g., when evaluating     jumps of gradients on the element boundary), but it is the user's     responsibility to avoid evaluation at these points when it does not     make sense.    
* [0.x.6]*
     Return the values and the derivatives of the Polynomial at point     <tt>x</tt>.  <tt>values[i], i=0,...,n_derivatives</tt> includes the     <tt>i</tt>th derivative.The number of derivatives to be computed is     determined by  [2.x.5]  and  [2.x.6]  has to provide sufficient     space for  [2.x.7]  + 1 values.         Note that all the derivatives evaluate to zero at the border between     intervals (assuming exact arithmetic) in the interior of the unit     interval, as there is no unique gradient value in that case for a     piecewise polynomial. This is not always desired (e.g., when evaluating     jumps of gradients on the element boundary), but it is the user's     responsibility to avoid evaluation at these points when it does not     make sense.    
* [0.x.7]*
     Degree of the polynomial. This is the degree of the underlying base     polynomial.    
* [0.x.8]*
     Write or read the data of this object to or from a stream for the     purpose of serialization using the [BOOST serialization     library](https://www.boost.org/doc/libs/1_74_0/libs/serialization/doc/index.html).    
* [0.x.9]*
     Return an estimate (in bytes) for the memory consumption of this object.    
* [0.x.10]*
     Underlying polynomial object that is scaled to a subinterval and     concatenated accordingly.    
* [0.x.11]*
     A variable storing the number of intervals that the unit interval is     divided into.    
* [0.x.12]*
     A variable storing the index of the current polynomial in the range of     intervals.    
* [0.x.13]*
     Store if the polynomial spans over two adjacent intervals, i.e., the     one given in subinterval and the next one.    
* [0.x.14]*
   Generates a complete Lagrange basis on a subdivision of the unit interval   in smaller intervals for a given degree on the subintervals and number of   intervals.  
* [0.x.15]