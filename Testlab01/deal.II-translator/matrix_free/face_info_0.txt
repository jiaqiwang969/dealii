[0.x.0]*
     Data type for information about the batches build for vectorization of     the face integrals. The setup of the batches for the faces is     independent of the cells, and thus, we must store the relation to the     cell indexing for accessing the degrees of freedom.         Interior faces are stored by the two adjacent cells, which we label as     "interior" and "exterior" side of the face. Normal vectors stored in     MappingInfo are only stored once and are the outer normals to the cells     on the "interior" side, whereas the sign is the opposite for the     "exterior" side.         This data field is stored as a vector for all faces involved in the     computation. In order to avoid gaps in the memory representation, the     four 'char' variables are put next to each other which occupies the     same size as the unsigned integers on most architectures.    
* [0.x.1]*
       Indices of the faces in the current face batch as compared to the       numbers of the cells on the logical "interior" side of the face which       is aligned to the direction of  [2.x.0]       
* [0.x.2]*
       Indices of the faces in the current face batch as compared to the       numbers of the cells on the logical "exterior" side of the face which       is aligned to the opposite direction of        [2.x.1]  Note that the distinction into       interior and exterior faces is purely logical and refers to the       direction of the normal only. In the actual discretization of a       problem, the discretization typically needs to make sure that interior       and exterior sides are treated properly, such as with upwind fluxes.             For boundary faces, the numbers are set to        [2.x.2]       
* [0.x.3]*
       Index of the face between 0 and  [2.x.3]  within       the cells on the "exterior" side of the faces.             For a boundary face, this data field stores the boundary id.      
* [0.x.4]*
       Index of the face between 0 and  [2.x.4]  within       the cells on the "interior" side of the faces.      
* [0.x.5]*
       For adaptively refined meshes, the cell on the exterior side of the       face might be less refined than the interior side. This index       indicates the possible subface index on the exterior side.      
* [0.x.6]*
       In 3D, one of the two cells adjacent to a face might use a different       orientation (also called as face orientation, face flip and face       rotation) than the standard orientation. This variable stores the       values of face orientation, face flip and face       rotation (for one of the interior or exterior side) for the present       batch of faces in the first free bits. The forth bit is one if the       internal cell has non-standard orientation.            
*  [2.x.5]  In contrast to other place in the library, the face-orientation         bit (first bit) is flipped.      
* [0.x.7]*
       Reference-cell type of the given face: 0 for line or quadrilateral,       1 for triangle.      
* [0.x.8]*
       Return the memory consumption of the present data structure.      
* [0.x.9]*
     A data structure that holds the connectivity between the faces and the     cells.    
* [0.x.10]*
       Clear all data fields to be in a state similar to after having       called the default constructor.      
* [0.x.11]*
       Return the memory consumption of the present data structure.      
* [0.x.12]*
       Vectorized storage of interior faces, linking to the two cells in the       vectorized cell storage.      
* [0.x.13]*
       This table translates a triple of the macro cell number, the index of a       face within a cell and the index within the cell batch of vectorization       into the index within the  [2.x.6]  array.      
* [0.x.14]*
       Stores the boundary ids of the faces in vectorized format using the       same indexing as the cell_and_face_to_plain_faces data structure      
* [0.x.15]