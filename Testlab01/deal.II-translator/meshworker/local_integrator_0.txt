[0.x.0]*
   A local integrator object, which can be used to simplify the call of   loop(). Instead of providing the three local integration functions   separately, we bundle them as virtual functions in this class.     Additionally, since we cannot have a virtual null function, we provide   flags, which allow us to indicate, whether we want to integrate on   boundary and interior faces. These flags are true by default, but can be   modified by applications to speed up the loop.     If a function is not overloaded in a derived class, but its usage flag is   true, the function will cause an exception ExcPureFunction.    
*  [2.x.0]   
* [0.x.1]*
     The constructor setting default values, namely all integration flags to     true.    
* [0.x.2]*
     The constructor setting integration flags to specified values.    
* [0.x.3]*
     The empty virtual destructor.    
* [0.x.4]*
     Virtual function for integrating on cells. Throws exception     PureFunctionCalled if not overloaded by a derived class.    
* [0.x.5]*
     Virtual function for integrating on boundary faces. Throws exception     PureFunctionCalled if not overloaded by a derived class.    
* [0.x.6]*
     Virtual function for integrating on interior faces. Throws exception     PureFunctionCalled if not overloaded by a derived class.    
* [0.x.7]*
     The flag indicating whether the cell integrator cell() is to be used in     the loop. Defaults to <tt>true</tt>.    
* [0.x.8]*
     The flag indicating whether the boundary integrator boundary() is to be     used in the loop. Defaults to <tt>true</tt>.    
* [0.x.9]*
     The flag indicating whether the interior face integrator face() is to     be used in the loop. Defaults to <tt>true</tt>.    
* [0.x.10]*
     The names of the input vectors. If this vector is nonempty, it can be     used by application programs to automatically select and verify the     input vectors used for integration.        
*  [2.x.1]  This variable is currently not used by the library, but it is     provided to help develop application programs.    
* [0.x.11]*
     The names of the results produced. If this vector is nonempty, it can     be used by application programs to automatically assign names to output     values and/or verify the names of vectors.        
*  [2.x.2]  This variable is currently not used by the library, but it is     provided to help develop application programs.    
* [0.x.12]*
     This error is thrown if one of the virtual functions cell(),     boundary(), or face() is called without being overloaded in a derived     class. Consider setting #use_cell, #use_boundary, and #use_face to     false, respectively.        
*  [2.x.3]     
* [0.x.13]