// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class MGLevelGlobalTransfer< Vector<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class MGLevelGlobalTransfer< Vector<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template class MGLevelGlobalTransfer< BlockVector<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template class MGLevelGlobalTransfer< BlockVector<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template class MGLevelGlobalTransfer< LinearAlgebra::distributed::Vector<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void MGLevelGlobalTransfer< Vector<double> >::
 fill_and_communicate_copy_indices< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void MGLevelGlobalTransfer< Vector<float> >::
 fill_and_communicate_copy_indices< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void MGLevelGlobalTransfer< BlockVector<double> >::
 fill_and_communicate_copy_indices< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void MGLevelGlobalTransfer< BlockVector<float> >::
 fill_and_communicate_copy_indices< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void MGLevelGlobalTransfer< LinearAlgebra::distributed::Vector<double> >::
 fill_and_communicate_copy_indices< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void MGLevelGlobalTransfer< Vector<double> >::
 fill_and_communicate_copy_indices< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void MGLevelGlobalTransfer< Vector<float> >::
 fill_and_communicate_copy_indices< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void MGLevelGlobalTransfer< BlockVector<double> >::
 fill_and_communicate_copy_indices< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void MGLevelGlobalTransfer< BlockVector<float> >::
 fill_and_communicate_copy_indices< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void MGLevelGlobalTransfer< LinearAlgebra::distributed::Vector<double> >::
 fill_and_communicate_copy_indices< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void MGLevelGlobalTransfer< Vector<double> >::
 fill_and_communicate_copy_indices< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void MGLevelGlobalTransfer< Vector<float> >::
 fill_and_communicate_copy_indices< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void MGLevelGlobalTransfer< BlockVector<double> >::
 fill_and_communicate_copy_indices< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void MGLevelGlobalTransfer< BlockVector<float> >::
 fill_and_communicate_copy_indices< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void MGLevelGlobalTransfer< LinearAlgebra::distributed::Vector<double> >::
 fill_and_communicate_copy_indices< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &mg_dof);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < double >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < double >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < float >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < float >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < double >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < double >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < float >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< Vector < float >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < double >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < double >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < float >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < float >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < double >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < double >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < float >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject< BlockVector < float >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 1 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < double >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < double >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < float >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < float >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < double >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < double >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < float >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< Vector < float >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < double >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < double >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < float >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < float >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(48))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < double >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(49))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < double >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(50))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < float >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(51))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject< BlockVector < float >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 2 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(52))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < double >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(53))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < double >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(54))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < float >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(55))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < float >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(56))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < double >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(57))
template void MGLevelGlobalTransfer< Vector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < double >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 template void MGLevelGlobalTransfer< Vector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(58))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < float >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(59))
template void MGLevelGlobalTransfer< Vector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< Vector < float >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 template void MGLevelGlobalTransfer< Vector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< Vector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(60))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < double >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(61))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < double >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(62))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < float >> &,
 const  Vector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(63))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < float >> &,
 const  Vector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  Vector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(64))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < double >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(65))
template void MGLevelGlobalTransfer< BlockVector < double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < double >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < double >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(66))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < float >> &,
 const  BlockVector < double > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < double > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(67))
template void MGLevelGlobalTransfer< BlockVector < float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject< BlockVector < float >> &,
 const  BlockVector < float > &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 template void MGLevelGlobalTransfer< BlockVector < float >>::copy_from_mg_add(
 const DoFHandler< 3 > &,
  BlockVector < float > &,
 const MGLevelObject< BlockVector < float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(68))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<float>>::
 fill_and_communicate_copy_indices< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &mg_dof);
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<float>>::
 copy_to_mg(const DoFHandler< 1 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector<float>> &,
 const LinearAlgebra::distributed::Vector<float> &,
 const bool) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<double>>::
 copy_to_mg(const DoFHandler< 1 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector<double>> &,
 const LinearAlgebra::distributed::Vector<double> &,
 const bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(69))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<float>>::
 fill_and_communicate_copy_indices< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &mg_dof);
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<float>>::
 copy_to_mg(const DoFHandler< 2 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector<float>> &,
 const LinearAlgebra::distributed::Vector<float> &,
 const bool) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<double>>::
 copy_to_mg(const DoFHandler< 2 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector<double>> &,
 const LinearAlgebra::distributed::Vector<double> &,
 const bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(70))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<float>>::
 fill_and_communicate_copy_indices< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &mg_dof);
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<float>>::
 copy_to_mg(const DoFHandler< 3 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector<float>> &,
 const LinearAlgebra::distributed::Vector<float> &,
 const bool) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector<double>>::
 copy_to_mg(const DoFHandler< 3 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector<double>> &,
 const LinearAlgebra::distributed::Vector<double> &,
 const bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(71))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< double >> &,
 const LinearAlgebra::distributed::Vector< double > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_from_mg(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::
 copy_from_mg_add(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(72))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< double >> &,
 const LinearAlgebra::distributed::Vector< float > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_from_mg(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::
 copy_from_mg_add(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(73))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< float >> &,
 const LinearAlgebra::distributed::Vector< double > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_from_mg(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::
 copy_from_mg_add(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(74))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< float >> &,
 const LinearAlgebra::distributed::Vector< float > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_from_mg(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::
 copy_from_mg_add(
 const DoFHandler< 1 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(75))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< double >> &,
 const LinearAlgebra::distributed::Vector< double > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_from_mg(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::
 copy_from_mg_add(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(76))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< double >> &,
 const LinearAlgebra::distributed::Vector< float > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_from_mg(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::
 copy_from_mg_add(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(77))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< float >> &,
 const LinearAlgebra::distributed::Vector< double > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_from_mg(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::
 copy_from_mg_add(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(78))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< float >> &,
 const LinearAlgebra::distributed::Vector< float > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_from_mg(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::
 copy_from_mg_add(
 const DoFHandler< 2 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(79))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< double >> &,
 const LinearAlgebra::distributed::Vector< double > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_from_mg(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::
 copy_from_mg_add(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(80))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< double >> &,
 const LinearAlgebra::distributed::Vector< float > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::copy_from_mg(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< double >>::
 copy_from_mg_add(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(81))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< float >> &,
 const LinearAlgebra::distributed::Vector< double > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_from_mg(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::
 copy_from_mg_add(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< double > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(82))
template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject<LinearAlgebra::distributed::Vector< float >> &,
 const LinearAlgebra::distributed::Vector< float > &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::copy_from_mg(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 template void
 MGLevelGlobalTransfer<LinearAlgebra::distributed::Vector< float >>::
 copy_from_mg_add(
 const DoFHandler< 3 > &,
 LinearAlgebra::distributed::Vector< float > &,
 const MGLevelObject<LinearAlgebra::distributed::Vector< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(83))
#ifdef DEAL_II_WITH_TRILINOS

 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject<TrilinosWrappers::MPI::Vector> &,
 const TrilinosWrappers::MPI::Vector &) const;
 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_from_mg(
 const DoFHandler< 1 > &,
 TrilinosWrappers::MPI::Vector &,
 const MGLevelObject<TrilinosWrappers::MPI::Vector> &) const;
 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_from_mg_add(
 const DoFHandler< 1 > &,
 TrilinosWrappers::MPI::Vector &,
 const MGLevelObject<TrilinosWrappers::MPI::Vector> &) const;
#endif

#ifdef DEAL_II_WITH_PETSC
 template void MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_to_mg(
 const DoFHandler< 1 > &,
 MGLevelObject<PETScWrappers::MPI::Vector> &,
 const PETScWrappers::MPI::Vector &) const;
 template void
 MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_from_mg(
 const DoFHandler< 1 > &,
 PETScWrappers::MPI::Vector &,
 const MGLevelObject<PETScWrappers::MPI::Vector> &) const;
 template void
 MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_from_mg_add(
 const DoFHandler< 1 > &,
 PETScWrappers::MPI::Vector &,
 const MGLevelObject<PETScWrappers::MPI::Vector> &) const;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(84))
#ifdef DEAL_II_WITH_TRILINOS

 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject<TrilinosWrappers::MPI::Vector> &,
 const TrilinosWrappers::MPI::Vector &) const;
 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_from_mg(
 const DoFHandler< 2 > &,
 TrilinosWrappers::MPI::Vector &,
 const MGLevelObject<TrilinosWrappers::MPI::Vector> &) const;
 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_from_mg_add(
 const DoFHandler< 2 > &,
 TrilinosWrappers::MPI::Vector &,
 const MGLevelObject<TrilinosWrappers::MPI::Vector> &) const;
#endif

#ifdef DEAL_II_WITH_PETSC
 template void MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_to_mg(
 const DoFHandler< 2 > &,
 MGLevelObject<PETScWrappers::MPI::Vector> &,
 const PETScWrappers::MPI::Vector &) const;
 template void
 MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_from_mg(
 const DoFHandler< 2 > &,
 PETScWrappers::MPI::Vector &,
 const MGLevelObject<PETScWrappers::MPI::Vector> &) const;
 template void
 MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_from_mg_add(
 const DoFHandler< 2 > &,
 PETScWrappers::MPI::Vector &,
 const MGLevelObject<PETScWrappers::MPI::Vector> &) const;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(85))
#ifdef DEAL_II_WITH_TRILINOS

 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject<TrilinosWrappers::MPI::Vector> &,
 const TrilinosWrappers::MPI::Vector &) const;
 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_from_mg(
 const DoFHandler< 3 > &,
 TrilinosWrappers::MPI::Vector &,
 const MGLevelObject<TrilinosWrappers::MPI::Vector> &) const;
 template void
 MGLevelGlobalTransfer<TrilinosWrappers::MPI::Vector>::copy_from_mg_add(
 const DoFHandler< 3 > &,
 TrilinosWrappers::MPI::Vector &,
 const MGLevelObject<TrilinosWrappers::MPI::Vector> &) const;
#endif

#ifdef DEAL_II_WITH_PETSC
 template void MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_to_mg(
 const DoFHandler< 3 > &,
 MGLevelObject<PETScWrappers::MPI::Vector> &,
 const PETScWrappers::MPI::Vector &) const;
 template void
 MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_from_mg(
 const DoFHandler< 3 > &,
 PETScWrappers::MPI::Vector &,
 const MGLevelObject<PETScWrappers::MPI::Vector> &) const;
 template void
 MGLevelGlobalTransfer<PETScWrappers::MPI::Vector>::copy_from_mg_add(
 const DoFHandler< 3 > &,
 PETScWrappers::MPI::Vector &,
 const MGLevelObject<PETScWrappers::MPI::Vector> &) const;
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
