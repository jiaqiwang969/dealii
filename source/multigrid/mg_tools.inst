// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_sparsity_pattern< 1 ,
  1 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 1 ,  1 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  1 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 1 ,  1 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_sparsity_pattern< 1 ,
  2 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 1 ,  2 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  2 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 1 ,  2 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_sparsity_pattern< 1 ,
  3 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 1 ,  3 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  3 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 1 ,  3 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_sparsity_pattern< 2 ,
  1 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 2 ,  1 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  1 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 2 ,  1 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_sparsity_pattern< 2 ,
  2 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 2 ,  2 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  2 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 2 ,  2 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_sparsity_pattern< 2 ,
  3 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 2 ,  3 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  3 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 2 ,  3 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_sparsity_pattern< 3 ,
  1 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 3 ,  1 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  1 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 3 ,  1 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_sparsity_pattern< 3 ,
  2 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 3 ,  2 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  2 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 3 ,  2 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_sparsity_pattern< 3 ,
  3 ,
  SparsityPattern ,
 double>(
 const DoFHandler< 3 ,  3 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  3 ,
  SparsityPattern ,
 float>(
 const DoFHandler< 3 ,  3 > &,
  SparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_sparsity_pattern< 1 ,
  1 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  1 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_sparsity_pattern< 1 ,
  2 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  2 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_sparsity_pattern< 1 ,
  3 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  3 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_sparsity_pattern< 2 ,
  1 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  1 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_sparsity_pattern< 2 ,
  2 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  2 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_sparsity_pattern< 2 ,
  3 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  3 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_sparsity_pattern< 3 ,
  1 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  1 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_sparsity_pattern< 3 ,
  2 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  2 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_sparsity_pattern< 3 ,
  3 ,
  DynamicSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  3 ,
  DynamicSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_sparsity_pattern< 1 ,
  1 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  1 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_sparsity_pattern< 1 ,
  2 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  2 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_sparsity_pattern< 1 ,
  3 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  3 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_sparsity_pattern< 2 ,
  1 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  1 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_sparsity_pattern< 2 ,
  2 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  2 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_sparsity_pattern< 2 ,
  3 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  3 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_sparsity_pattern< 3 ,
  1 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  1 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_sparsity_pattern< 3 ,
  2 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  2 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_sparsity_pattern< 3 ,
  3 ,
  BlockSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  3 ,
  BlockSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_sparsity_pattern< 1 ,
  1 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  1 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_sparsity_pattern< 1 ,
  2 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  2 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_sparsity_pattern< 1 ,
  3 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 1 ,  3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 1 ,
  3 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 1 ,  3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_sparsity_pattern< 2 ,
  1 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  1 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_sparsity_pattern< 2 ,
  2 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  2 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_sparsity_pattern< 2 ,
  3 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 2 ,  3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 2 ,
  3 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 2 ,  3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_sparsity_pattern< 3 ,
  1 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  1 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_sparsity_pattern< 3 ,
  2 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  2 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_sparsity_pattern< 3 ,
  3 ,
  BlockDynamicSparsityPattern ,
 double>(
 const DoFHandler< 3 ,  3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<double> &,
 const bool);

 template void
 make_sparsity_pattern< 3 ,
  3 ,
  BlockDynamicSparsityPattern ,
 float>(
 const DoFHandler< 3 ,  3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const AffineConstraints<float> &,
 const bool);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_interface_sparsity_pattern< 1 ,
  1 ,
  SparsityPattern >(
 const DoFHandler< 1 ,  1 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  1 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_interface_sparsity_pattern< 1 ,
  2 ,
  SparsityPattern >(
 const DoFHandler< 1 ,  2 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  2 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_interface_sparsity_pattern< 1 ,
  3 ,
  SparsityPattern >(
 const DoFHandler< 1 ,  3 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  3 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_interface_sparsity_pattern< 2 ,
  1 ,
  SparsityPattern >(
 const DoFHandler< 2 ,  1 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  1 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_interface_sparsity_pattern< 2 ,
  2 ,
  SparsityPattern >(
 const DoFHandler< 2 ,  2 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  2 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_interface_sparsity_pattern< 2 ,
  3 ,
  SparsityPattern >(
 const DoFHandler< 2 ,  3 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  3 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_interface_sparsity_pattern< 3 ,
  1 ,
  SparsityPattern >(
 const DoFHandler< 3 ,  1 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  1 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_interface_sparsity_pattern< 3 ,
  2 ,
  SparsityPattern >(
 const DoFHandler< 3 ,  2 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  2 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_interface_sparsity_pattern< 3 ,
  3 ,
  SparsityPattern >(
 const DoFHandler< 3 ,  3 > &,
 const MGConstrainedDoFs &,
  SparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  3 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  SparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_interface_sparsity_pattern< 1 ,
  1 ,
  DynamicSparsityPattern >(
 const DoFHandler< 1 ,  1 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  1 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_interface_sparsity_pattern< 1 ,
  2 ,
  DynamicSparsityPattern >(
 const DoFHandler< 1 ,  2 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  2 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_interface_sparsity_pattern< 1 ,
  3 ,
  DynamicSparsityPattern >(
 const DoFHandler< 1 ,  3 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  3 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(48))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_interface_sparsity_pattern< 2 ,
  1 ,
  DynamicSparsityPattern >(
 const DoFHandler< 2 ,  1 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  1 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(49))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_interface_sparsity_pattern< 2 ,
  2 ,
  DynamicSparsityPattern >(
 const DoFHandler< 2 ,  2 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  2 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(50))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_interface_sparsity_pattern< 2 ,
  3 ,
  DynamicSparsityPattern >(
 const DoFHandler< 2 ,  3 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  3 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(51))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_interface_sparsity_pattern< 3 ,
  1 ,
  DynamicSparsityPattern >(
 const DoFHandler< 3 ,  1 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  1 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(52))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_interface_sparsity_pattern< 3 ,
  2 ,
  DynamicSparsityPattern >(
 const DoFHandler< 3 ,  2 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  2 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(53))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_interface_sparsity_pattern< 3 ,
  3 ,
  DynamicSparsityPattern >(
 const DoFHandler< 3 ,  3 > &,
 const MGConstrainedDoFs &,
  DynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  3 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  DynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(54))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_interface_sparsity_pattern< 1 ,
  1 ,
  BlockSparsityPattern >(
 const DoFHandler< 1 ,  1 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  1 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(55))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_interface_sparsity_pattern< 1 ,
  2 ,
  BlockSparsityPattern >(
 const DoFHandler< 1 ,  2 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  2 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(56))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_interface_sparsity_pattern< 1 ,
  3 ,
  BlockSparsityPattern >(
 const DoFHandler< 1 ,  3 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  3 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(57))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_interface_sparsity_pattern< 2 ,
  1 ,
  BlockSparsityPattern >(
 const DoFHandler< 2 ,  1 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  1 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(58))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_interface_sparsity_pattern< 2 ,
  2 ,
  BlockSparsityPattern >(
 const DoFHandler< 2 ,  2 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  2 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(59))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_interface_sparsity_pattern< 2 ,
  3 ,
  BlockSparsityPattern >(
 const DoFHandler< 2 ,  3 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  3 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(60))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_interface_sparsity_pattern< 3 ,
  1 ,
  BlockSparsityPattern >(
 const DoFHandler< 3 ,  1 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  1 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(61))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_interface_sparsity_pattern< 3 ,
  2 ,
  BlockSparsityPattern >(
 const DoFHandler< 3 ,  2 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  2 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(62))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_interface_sparsity_pattern< 3 ,
  3 ,
  BlockSparsityPattern >(
 const DoFHandler< 3 ,  3 > &,
 const MGConstrainedDoFs &,
  BlockSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  3 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(63))
namespace MGTools
 {

#if  1  <=  1 
 template void
 make_interface_sparsity_pattern< 1 ,
  1 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 1 ,  1 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  1 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(64))
namespace MGTools
 {

#if  1  <=  2 
 template void
 make_interface_sparsity_pattern< 1 ,
  2 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 1 ,  2 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  2 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(65))
namespace MGTools
 {

#if  1  <=  3 
 template void
 make_interface_sparsity_pattern< 1 ,
  3 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 1 ,  3 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  1  ==  3 
 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  1  > 1

 template void
 make_flux_sparsity_pattern< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 1 >(
 const DoFHandler< 1 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(66))
namespace MGTools
 {

#if  2  <=  1 
 template void
 make_interface_sparsity_pattern< 2 ,
  1 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 2 ,  1 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  1 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(67))
namespace MGTools
 {

#if  2  <=  2 
 template void
 make_interface_sparsity_pattern< 2 ,
  2 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 2 ,  2 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  2 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(68))
namespace MGTools
 {

#if  2  <=  3 
 template void
 make_interface_sparsity_pattern< 2 ,
  3 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 2 ,  3 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  2  ==  3 
 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  2  > 1

 template void
 make_flux_sparsity_pattern< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 2 >(
 const DoFHandler< 2 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(69))
namespace MGTools
 {

#if  3  <=  1 
 template void
 make_interface_sparsity_pattern< 3 ,
  1 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 3 ,  1 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  1 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(70))
namespace MGTools
 {

#if  3  <=  2 
 template void
 make_interface_sparsity_pattern< 3 ,
  2 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 3 ,  2 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  2 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(71))
namespace MGTools
 {

#if  3  <=  3 
 template void
 make_interface_sparsity_pattern< 3 ,
  3 ,
  BlockDynamicSparsityPattern >(
 const DoFHandler< 3 ,  3 > &,
 const MGConstrainedDoFs &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);
#endif

#if  3  ==  3 
 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int);

# if  3  > 1

 template void
 make_flux_sparsity_pattern< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);

 template void
 make_flux_sparsity_pattern_edge< 3 >(
 const DoFHandler< 3 > &,
  BlockDynamicSparsityPattern  &,
 const unsigned int,
 const Table<2, DoFTools::Coupling> &);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(72))
namespace MGTools
 {

#if  1  > 1
 template void
 compute_row_length_vector(const DoFHandler< 1 > &,
 unsigned int,
 std::vector<unsigned int> &,
 const DoFTools::Coupling);
 template void
 compute_row_length_vector(const DoFHandler< 1 > &,
 unsigned int,
 std::vector<unsigned int> &,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);
#endif

 template void
 count_dofs_per_component(
 const DoFHandler< 1 > &,
 std::vector<std::vector<types::global_dof_index>> &,
 bool,
 std::vector<unsigned int>);
 template void
 count_dofs_per_block(const DoFHandler< 1 > &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);

#if  1  > 1
 template void
 make_boundary_list(const DoFHandler< 1 > &,
 const std::map<types::boundary_id,
 const Function< 1 > *> &,
 std::vector<std::set<types::global_dof_index>> &,
 const ComponentMask &);
#endif

 template void
 make_boundary_list(const DoFHandler< 1 > &,
 const std::map<types::boundary_id,
 const Function< 1 > *> &,
 std::vector<IndexSet> &,
 const ComponentMask &);

 template void
 make_boundary_list(const DoFHandler< 1 > &,
 const std::set<types::boundary_id> &,
 std::vector<IndexSet> &,
 const ComponentMask &);


 template void
 extract_inner_interface_dofs(
 const DoFHandler< 1 > &mg_dof_handler,
 std::vector<IndexSet> & interface_dofs);

#if  1  < 3
 template void
 count_dofs_per_block(
 const DoFHandler< 1 ,  1  + 1> &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);
#endif

#if  1  == 3
 template void
 count_dofs_per_block(const DoFHandler<1, 3> &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(73))
namespace MGTools
 {

#if  2  > 1
 template void
 compute_row_length_vector(const DoFHandler< 2 > &,
 unsigned int,
 std::vector<unsigned int> &,
 const DoFTools::Coupling);
 template void
 compute_row_length_vector(const DoFHandler< 2 > &,
 unsigned int,
 std::vector<unsigned int> &,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);
#endif

 template void
 count_dofs_per_component(
 const DoFHandler< 2 > &,
 std::vector<std::vector<types::global_dof_index>> &,
 bool,
 std::vector<unsigned int>);
 template void
 count_dofs_per_block(const DoFHandler< 2 > &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);

#if  2  > 1
 template void
 make_boundary_list(const DoFHandler< 2 > &,
 const std::map<types::boundary_id,
 const Function< 2 > *> &,
 std::vector<std::set<types::global_dof_index>> &,
 const ComponentMask &);
#endif

 template void
 make_boundary_list(const DoFHandler< 2 > &,
 const std::map<types::boundary_id,
 const Function< 2 > *> &,
 std::vector<IndexSet> &,
 const ComponentMask &);

 template void
 make_boundary_list(const DoFHandler< 2 > &,
 const std::set<types::boundary_id> &,
 std::vector<IndexSet> &,
 const ComponentMask &);


 template void
 extract_inner_interface_dofs(
 const DoFHandler< 2 > &mg_dof_handler,
 std::vector<IndexSet> & interface_dofs);

#if  2  < 3
 template void
 count_dofs_per_block(
 const DoFHandler< 2 ,  2  + 1> &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);
#endif

#if  2  == 3
 template void
 count_dofs_per_block(const DoFHandler<1, 3> &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(74))
namespace MGTools
 {

#if  3  > 1
 template void
 compute_row_length_vector(const DoFHandler< 3 > &,
 unsigned int,
 std::vector<unsigned int> &,
 const DoFTools::Coupling);
 template void
 compute_row_length_vector(const DoFHandler< 3 > &,
 unsigned int,
 std::vector<unsigned int> &,
 const Table<2, DoFTools::Coupling> &,
 const Table<2, DoFTools::Coupling> &);
#endif

 template void
 count_dofs_per_component(
 const DoFHandler< 3 > &,
 std::vector<std::vector<types::global_dof_index>> &,
 bool,
 std::vector<unsigned int>);
 template void
 count_dofs_per_block(const DoFHandler< 3 > &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);

#if  3  > 1
 template void
 make_boundary_list(const DoFHandler< 3 > &,
 const std::map<types::boundary_id,
 const Function< 3 > *> &,
 std::vector<std::set<types::global_dof_index>> &,
 const ComponentMask &);
#endif

 template void
 make_boundary_list(const DoFHandler< 3 > &,
 const std::map<types::boundary_id,
 const Function< 3 > *> &,
 std::vector<IndexSet> &,
 const ComponentMask &);

 template void
 make_boundary_list(const DoFHandler< 3 > &,
 const std::set<types::boundary_id> &,
 std::vector<IndexSet> &,
 const ComponentMask &);


 template void
 extract_inner_interface_dofs(
 const DoFHandler< 3 > &mg_dof_handler,
 std::vector<IndexSet> & interface_dofs);

#if  3  < 3
 template void
 count_dofs_per_block(
 const DoFHandler< 3 ,  3  + 1> &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);
#endif

#if  3  == 3
 template void
 count_dofs_per_block(const DoFHandler<1, 3> &,
 std::vector<std::vector<types::global_dof_index>> &,
 std::vector<unsigned int>);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(75))
namespace MGTools
 {
#if  1  <=  1 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 1 ,  1 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 1 ,  1 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(76))
namespace MGTools
 {
#if  1  <=  2 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 1 ,  2 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 1 ,  2 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(77))
namespace MGTools
 {
#if  1  <=  3 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 1 ,  3 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 1 ,  3 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(78))
namespace MGTools
 {
#if  2  <=  1 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 2 ,  1 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 2 ,  1 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(79))
namespace MGTools
 {
#if  2  <=  2 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 2 ,  2 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 2 ,  2 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(80))
namespace MGTools
 {
#if  2  <=  3 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 2 ,  3 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 2 ,  3 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(81))
namespace MGTools
 {
#if  3  <=  1 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 3 ,  1 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 3 ,  1 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(82))
namespace MGTools
 {
#if  3  <=  2 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 3 ,  2 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 3 ,  2 > &tria);
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(83))
namespace MGTools
 {
#if  3  <=  3 
 template unsigned int
 max_level_for_coarse_mesh(
 const Triangulation< 3 ,  3 > &tria);

 template double
 workload_imbalance(
 const Triangulation< 3 ,  3 > &tria);
#endif
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
