// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace internal
 {
 namespace MGTransfer
 {

#if  1  <=  1 
 template void
 fill_copy_indices< 1 ,  1 >(
 const dealii::DoFHandler< 1 ,  1 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace internal
 {
 namespace MGTransfer
 {

#if  1  <=  2 
 template void
 fill_copy_indices< 1 ,  2 >(
 const dealii::DoFHandler< 1 ,  2 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace internal
 {
 namespace MGTransfer
 {

#if  1  <=  3 
 template void
 fill_copy_indices< 1 ,  3 >(
 const dealii::DoFHandler< 1 ,  3 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace internal
 {
 namespace MGTransfer
 {

#if  2  <=  1 
 template void
 fill_copy_indices< 2 ,  1 >(
 const dealii::DoFHandler< 2 ,  1 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace internal
 {
 namespace MGTransfer
 {

#if  2  <=  2 
 template void
 fill_copy_indices< 2 ,  2 >(
 const dealii::DoFHandler< 2 ,  2 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace internal
 {
 namespace MGTransfer
 {

#if  2  <=  3 
 template void
 fill_copy_indices< 2 ,  3 >(
 const dealii::DoFHandler< 2 ,  3 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace internal
 {
 namespace MGTransfer
 {

#if  3  <=  1 
 template void
 fill_copy_indices< 3 ,  1 >(
 const dealii::DoFHandler< 3 ,  1 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace internal
 {
 namespace MGTransfer
 {

#if  3  <=  2 
 template void
 fill_copy_indices< 3 ,  2 >(
 const dealii::DoFHandler< 3 ,  2 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace internal
 {
 namespace MGTransfer
 {

#if  3  <=  3 
 template void
 fill_copy_indices< 3 ,  3 >(
 const dealii::DoFHandler< 3 ,  3 >
 &,
 const MGConstrainedDoFs *,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 std::vector<std::vector<
 std::pair<types::global_dof_index, types::global_dof_index>>> &,
 const bool);
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
namespace internal
 {
 namespace MGTransfer
 {

 template unsigned int
 compute_shift_within_children< 1 >(const unsigned int,
 const unsigned int,
 const unsigned int);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
namespace internal
 {
 namespace MGTransfer
 {

 template unsigned int
 compute_shift_within_children< 2 >(const unsigned int,
 const unsigned int,
 const unsigned int);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
namespace internal
 {
 namespace MGTransfer
 {

 template unsigned int
 compute_shift_within_children< 3 >(const unsigned int,
 const unsigned int,
 const unsigned int);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
namespace internal
 {
 namespace MGTransfer
 {

 template struct ElementInfo< double >;
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
namespace internal
 {
 namespace MGTransfer
 {

 template struct ElementInfo< float >;
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
namespace internal
 {
 namespace MGTransfer
 {

 template void
 setup_transfer< 1 >(
 const dealii::DoFHandler< 1 > &,
 const MGConstrainedDoFs *,
 const std::vector<std::shared_ptr<const Utilities::MPI::Partitioner>>
 &,
 ElementInfo< double > &,
 std::vector<std::vector<unsigned int>> &,
 std::vector<std::vector<std::pair<unsigned int, unsigned int>>> &,
 std::vector<unsigned int> &,
 std::vector<std::vector<std::vector<unsigned short>>> &,
 std::vector<std::vector< double >> &,
 std::vector<Table<2, unsigned int>> &,
 MGLevelObject<std::shared_ptr<const Utilities::MPI::Partitioner>> &);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
namespace internal
 {
 namespace MGTransfer
 {

 template void
 setup_transfer< 1 >(
 const dealii::DoFHandler< 1 > &,
 const MGConstrainedDoFs *,
 const std::vector<std::shared_ptr<const Utilities::MPI::Partitioner>>
 &,
 ElementInfo< float > &,
 std::vector<std::vector<unsigned int>> &,
 std::vector<std::vector<std::pair<unsigned int, unsigned int>>> &,
 std::vector<unsigned int> &,
 std::vector<std::vector<std::vector<unsigned short>>> &,
 std::vector<std::vector< float >> &,
 std::vector<Table<2, unsigned int>> &,
 MGLevelObject<std::shared_ptr<const Utilities::MPI::Partitioner>> &);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
namespace internal
 {
 namespace MGTransfer
 {

 template void
 setup_transfer< 2 >(
 const dealii::DoFHandler< 2 > &,
 const MGConstrainedDoFs *,
 const std::vector<std::shared_ptr<const Utilities::MPI::Partitioner>>
 &,
 ElementInfo< double > &,
 std::vector<std::vector<unsigned int>> &,
 std::vector<std::vector<std::pair<unsigned int, unsigned int>>> &,
 std::vector<unsigned int> &,
 std::vector<std::vector<std::vector<unsigned short>>> &,
 std::vector<std::vector< double >> &,
 std::vector<Table<2, unsigned int>> &,
 MGLevelObject<std::shared_ptr<const Utilities::MPI::Partitioner>> &);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
namespace internal
 {
 namespace MGTransfer
 {

 template void
 setup_transfer< 2 >(
 const dealii::DoFHandler< 2 > &,
 const MGConstrainedDoFs *,
 const std::vector<std::shared_ptr<const Utilities::MPI::Partitioner>>
 &,
 ElementInfo< float > &,
 std::vector<std::vector<unsigned int>> &,
 std::vector<std::vector<std::pair<unsigned int, unsigned int>>> &,
 std::vector<unsigned int> &,
 std::vector<std::vector<std::vector<unsigned short>>> &,
 std::vector<std::vector< float >> &,
 std::vector<Table<2, unsigned int>> &,
 MGLevelObject<std::shared_ptr<const Utilities::MPI::Partitioner>> &);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
namespace internal
 {
 namespace MGTransfer
 {

 template void
 setup_transfer< 3 >(
 const dealii::DoFHandler< 3 > &,
 const MGConstrainedDoFs *,
 const std::vector<std::shared_ptr<const Utilities::MPI::Partitioner>>
 &,
 ElementInfo< double > &,
 std::vector<std::vector<unsigned int>> &,
 std::vector<std::vector<std::pair<unsigned int, unsigned int>>> &,
 std::vector<unsigned int> &,
 std::vector<std::vector<std::vector<unsigned short>>> &,
 std::vector<std::vector< double >> &,
 std::vector<Table<2, unsigned int>> &,
 MGLevelObject<std::shared_ptr<const Utilities::MPI::Partitioner>> &);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
namespace internal
 {
 namespace MGTransfer
 {

 template void
 setup_transfer< 3 >(
 const dealii::DoFHandler< 3 > &,
 const MGConstrainedDoFs *,
 const std::vector<std::shared_ptr<const Utilities::MPI::Partitioner>>
 &,
 ElementInfo< float > &,
 std::vector<std::vector<unsigned int>> &,
 std::vector<std::vector<std::pair<unsigned int, unsigned int>>> &,
 std::vector<unsigned int> &,
 std::vector<std::vector<std::vector<unsigned short>>> &,
 std::vector<std::vector< float >> &,
 std::vector<Table<2, unsigned int>> &,
 MGLevelObject<std::shared_ptr<const Utilities::MPI::Partitioner>> &);
 }
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
