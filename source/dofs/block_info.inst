// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template void BlockInfo::initialize(
 const DoFHandler< 1 ,  1 > &, bool, bool);
 template void BlockInfo::initialize_local(
 const DoFHandler< 1 ,  1 > &);

#if  1  < 3
 template void BlockInfo::initialize(
 const DoFHandler< 1 ,  1  + 1> &, bool, bool);
 template void BlockInfo::initialize_local(
 const DoFHandler< 1 ,  1  + 1> &);
#endif

#if  1  == 3
 template void BlockInfo::initialize(const DoFHandler<1, 3> &, bool, bool);
 template void BlockInfo::initialize_local(const DoFHandler<1, 3> &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template void BlockInfo::initialize(
 const DoFHandler< 2 ,  2 > &, bool, bool);
 template void BlockInfo::initialize_local(
 const DoFHandler< 2 ,  2 > &);

#if  2  < 3
 template void BlockInfo::initialize(
 const DoFHandler< 2 ,  2  + 1> &, bool, bool);
 template void BlockInfo::initialize_local(
 const DoFHandler< 2 ,  2  + 1> &);
#endif

#if  2  == 3
 template void BlockInfo::initialize(const DoFHandler<1, 3> &, bool, bool);
 template void BlockInfo::initialize_local(const DoFHandler<1, 3> &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void BlockInfo::initialize(
 const DoFHandler< 3 ,  3 > &, bool, bool);
 template void BlockInfo::initialize_local(
 const DoFHandler< 3 ,  3 > &);

#if  3  < 3
 template void BlockInfo::initialize(
 const DoFHandler< 3 ,  3  + 1> &, bool, bool);
 template void BlockInfo::initialize_local(
 const DoFHandler< 3 ,  3  + 1> &);
#endif

#if  3  == 3
 template void BlockInfo::initialize(const DoFHandler<1, 3> &, bool, bool);
 template void BlockInfo::initialize_local(const DoFHandler<1, 3> &);
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
