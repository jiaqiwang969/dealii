// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template void internal::MatrixFreeFunctions::ShapeInfo< double >::
 reinit< 1 >(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template void internal::MatrixFreeFunctions::ShapeInfo< double >::
 reinit< 1 >(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template void internal::MatrixFreeFunctions::ShapeInfo< float >::
 reinit< 1 >(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template void internal::MatrixFreeFunctions::ShapeInfo< float >::
 reinit< 1 >(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void internal::MatrixFreeFunctions::ShapeInfo< double >::
 reinit< 2 >(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template void internal::MatrixFreeFunctions::ShapeInfo< double >::
 reinit< 2 >(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void internal::MatrixFreeFunctions::ShapeInfo< float >::
 reinit< 2 >(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template void internal::MatrixFreeFunctions::ShapeInfo< float >::
 reinit< 2 >(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void internal::MatrixFreeFunctions::ShapeInfo< double >::
 reinit< 3 >(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template void internal::MatrixFreeFunctions::ShapeInfo< double >::
 reinit< 3 >(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void internal::MatrixFreeFunctions::ShapeInfo< float >::
 reinit< 3 >(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template void internal::MatrixFreeFunctions::ShapeInfo< float >::
 reinit< 3 >(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
#if  1  <=  1 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 1 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
#if  1  <=  2 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 1 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#if  1  <=  3 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 1 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
#if  2  <=  1 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 2 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
#if  2  <=  2 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 2 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
#if  2  <=  3 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 2 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
#if  3  <=  1 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 3 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
#if  3  <=  2 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 3 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
#if  3  <=  3 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 3 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::reinit< 1 >(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::reinit< 1 >(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::reinit< 1 >(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::reinit< 1 >(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::reinit< 2 >(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::reinit< 2 >(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::reinit< 2 >(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::reinit< 2 >(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::reinit< 3 >(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::reinit< 3 >(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::reinit< 3 >(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template void internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::reinit< 3 >(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<double,1> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<float,1> >;
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
