// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
#if  1  <=  1 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 1 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
#if  1  <=  2 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 1 ,  2 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 1 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
#if  1  <=  3 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 1 ,  3 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 1 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
#if  2  <=  1 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 2 ,  1 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 2 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
#if  2  <=  2 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 2 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
#if  2  <=  3 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 2 ,  3 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 2 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
#if  3  <=  1 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 3 ,  1 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 3 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
#if  3  <=  2 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 3 ,  2 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 3 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#if  3  <=  3 
 template bool internal::FEPointEvaluation::is_fast_path_supported(
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
 template std::vector<Polynomials::Polynomial<double>>
 internal::FEPointEvaluation::get_polynomial_space(
 const FiniteElement< 3 ,  3 > &);
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
