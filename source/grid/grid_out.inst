// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
#if  1  > 1
 template void GridOut::write_dx(const Triangulation< 1 > &,
 std::ostream &) const;
 template void GridOut::write_mathgl(
 const Triangulation< 1 > &, std::ostream &) const;
#endif

 template void GridOut::write_msh(const Triangulation< 1 > &,
 std::ostream &) const;
#ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(const Triangulation< 1 > &,
 const std::string &) const;
#endif

#if  1  != 2
 template void GridOut::write_xfig(
 const Triangulation< 1 > &,
 std::ostream &,
 const Mapping< 1 ,  1 > *) const;
#endif

 template void GridOut::write_gnuplot(
 const Triangulation< 1 > &,
 std::ostream &,
 const Mapping< 1 ,  1 > *) const;
 template void GridOut::write_ucd< 1 >(
 const Triangulation< 1 > &, std::ostream &) const;
 template void GridOut::write_eps< 1 >(
 const Triangulation< 1 > &,
 std::ostream &,
 const Mapping< 1 ,  1 > *) const;
 template void GridOut::write_vtk(const Triangulation< 1 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(const Triangulation< 1 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 1 > &,
 const std::string &,
 const bool,
 const bool) const;

 template void GridOut::write< 1 >(
 const Triangulation< 1 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 1 ,  1 > *) const;
 template void GridOut::write< 1 >(
 const Triangulation< 1 > &,
 std::ostream &,
 const Mapping< 1 ,  1 > *) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
#if  2  > 1
 template void GridOut::write_dx(const Triangulation< 2 > &,
 std::ostream &) const;
 template void GridOut::write_mathgl(
 const Triangulation< 2 > &, std::ostream &) const;
#endif

 template void GridOut::write_msh(const Triangulation< 2 > &,
 std::ostream &) const;
#ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(const Triangulation< 2 > &,
 const std::string &) const;
#endif

#if  2  != 2
 template void GridOut::write_xfig(
 const Triangulation< 2 > &,
 std::ostream &,
 const Mapping< 2 ,  2 > *) const;
#endif

 template void GridOut::write_gnuplot(
 const Triangulation< 2 > &,
 std::ostream &,
 const Mapping< 2 ,  2 > *) const;
 template void GridOut::write_ucd< 2 >(
 const Triangulation< 2 > &, std::ostream &) const;
 template void GridOut::write_eps< 2 >(
 const Triangulation< 2 > &,
 std::ostream &,
 const Mapping< 2 ,  2 > *) const;
 template void GridOut::write_vtk(const Triangulation< 2 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(const Triangulation< 2 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 2 > &,
 const std::string &,
 const bool,
 const bool) const;

 template void GridOut::write< 2 >(
 const Triangulation< 2 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 2 ,  2 > *) const;
 template void GridOut::write< 2 >(
 const Triangulation< 2 > &,
 std::ostream &,
 const Mapping< 2 ,  2 > *) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
#if  3  > 1
 template void GridOut::write_dx(const Triangulation< 3 > &,
 std::ostream &) const;
 template void GridOut::write_mathgl(
 const Triangulation< 3 > &, std::ostream &) const;
#endif

 template void GridOut::write_msh(const Triangulation< 3 > &,
 std::ostream &) const;
#ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(const Triangulation< 3 > &,
 const std::string &) const;
#endif

#if  3  != 2
 template void GridOut::write_xfig(
 const Triangulation< 3 > &,
 std::ostream &,
 const Mapping< 3 ,  3 > *) const;
#endif

 template void GridOut::write_gnuplot(
 const Triangulation< 3 > &,
 std::ostream &,
 const Mapping< 3 ,  3 > *) const;
 template void GridOut::write_ucd< 3 >(
 const Triangulation< 3 > &, std::ostream &) const;
 template void GridOut::write_eps< 3 >(
 const Triangulation< 3 > &,
 std::ostream &,
 const Mapping< 3 ,  3 > *) const;
 template void GridOut::write_vtk(const Triangulation< 3 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(const Triangulation< 3 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 3 > &,
 const std::string &,
 const bool,
 const bool) const;

 template void GridOut::write< 3 >(
 const Triangulation< 3 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 3 ,  3 > *) const;
 template void GridOut::write< 3 >(
 const Triangulation< 3 > &,
 std::ostream &,
 const Mapping< 3 ,  3 > *) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
#if  1  <=  1 
 
 
# if !( 1  == 2 &&  1  == 2)
 template void GridOut::write_svg(
 const Triangulation< 1 ,  1 > &,
 std::ostream &) const;
# endif
#endif


#if  1  <  1 

 template void GridOut::write_msh(
 const Triangulation< 1 ,  1 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 1 ,  1 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 1 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 1 ,  1 > &,
 std::ostream &,
 const Mapping< 1 ,  1 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 1 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 1 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 1 ,  1 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 1 ,  1 >(
 const Triangulation< 1 ,  1 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 1 ,  1 > *) const;
 template void GridOut::write< 1 ,  1 >(
 const Triangulation< 1 ,  1 > &,
 std::ostream &,
 const Mapping< 1 ,  1 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
#if  1  <=  2 
 
 
# if !( 1  == 2 &&  2  == 2)
 template void GridOut::write_svg(
 const Triangulation< 1 ,  2 > &,
 std::ostream &) const;
# endif
#endif


#if  1  <  2 

 template void GridOut::write_msh(
 const Triangulation< 1 ,  2 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 1 ,  2 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 1 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 1 ,  2 > &,
 std::ostream &,
 const Mapping< 1 ,  2 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 1 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 1 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 1 ,  2 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 1 ,  2 >(
 const Triangulation< 1 ,  2 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 1 ,  2 > *) const;
 template void GridOut::write< 1 ,  2 >(
 const Triangulation< 1 ,  2 > &,
 std::ostream &,
 const Mapping< 1 ,  2 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
#if  1  <=  3 
 
 
# if !( 1  == 2 &&  3  == 2)
 template void GridOut::write_svg(
 const Triangulation< 1 ,  3 > &,
 std::ostream &) const;
# endif
#endif


#if  1  <  3 

 template void GridOut::write_msh(
 const Triangulation< 1 ,  3 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 1 ,  3 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 1 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 1 ,  3 > &,
 std::ostream &,
 const Mapping< 1 ,  3 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 1 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 1 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 1 ,  3 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 1 ,  3 >(
 const Triangulation< 1 ,  3 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 1 ,  3 > *) const;
 template void GridOut::write< 1 ,  3 >(
 const Triangulation< 1 ,  3 > &,
 std::ostream &,
 const Mapping< 1 ,  3 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
#if  2  <=  1 
 
 
# if !( 2  == 2 &&  1  == 2)
 template void GridOut::write_svg(
 const Triangulation< 2 ,  1 > &,
 std::ostream &) const;
# endif
#endif


#if  2  <  1 

 template void GridOut::write_msh(
 const Triangulation< 2 ,  1 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 2 ,  1 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 2 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 2 ,  1 > &,
 std::ostream &,
 const Mapping< 2 ,  1 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 2 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 2 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 2 ,  1 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 2 ,  1 >(
 const Triangulation< 2 ,  1 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 2 ,  1 > *) const;
 template void GridOut::write< 2 ,  1 >(
 const Triangulation< 2 ,  1 > &,
 std::ostream &,
 const Mapping< 2 ,  1 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
#if  2  <=  2 
 
 
# if !( 2  == 2 &&  2  == 2)
 template void GridOut::write_svg(
 const Triangulation< 2 ,  2 > &,
 std::ostream &) const;
# endif
#endif


#if  2  <  2 

 template void GridOut::write_msh(
 const Triangulation< 2 ,  2 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 2 ,  2 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 2 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 2 ,  2 > &,
 std::ostream &,
 const Mapping< 2 ,  2 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 2 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 2 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 2 ,  2 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 2 ,  2 >(
 const Triangulation< 2 ,  2 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 2 ,  2 > *) const;
 template void GridOut::write< 2 ,  2 >(
 const Triangulation< 2 ,  2 > &,
 std::ostream &,
 const Mapping< 2 ,  2 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#if  2  <=  3 
 
 
# if !( 2  == 2 &&  3  == 2)
 template void GridOut::write_svg(
 const Triangulation< 2 ,  3 > &,
 std::ostream &) const;
# endif
#endif


#if  2  <  3 

 template void GridOut::write_msh(
 const Triangulation< 2 ,  3 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 2 ,  3 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 2 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 2 ,  3 > &,
 std::ostream &,
 const Mapping< 2 ,  3 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 2 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 2 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 2 ,  3 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 2 ,  3 >(
 const Triangulation< 2 ,  3 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 2 ,  3 > *) const;
 template void GridOut::write< 2 ,  3 >(
 const Triangulation< 2 ,  3 > &,
 std::ostream &,
 const Mapping< 2 ,  3 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
#if  3  <=  1 
 
 
# if !( 3  == 2 &&  1  == 2)
 template void GridOut::write_svg(
 const Triangulation< 3 ,  1 > &,
 std::ostream &) const;
# endif
#endif


#if  3  <  1 

 template void GridOut::write_msh(
 const Triangulation< 3 ,  1 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 3 ,  1 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 3 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 3 ,  1 > &,
 std::ostream &,
 const Mapping< 3 ,  1 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 3 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 3 ,  1 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 3 ,  1 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 3 ,  1 >(
 const Triangulation< 3 ,  1 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 3 ,  1 > *) const;
 template void GridOut::write< 3 ,  1 >(
 const Triangulation< 3 ,  1 > &,
 std::ostream &,
 const Mapping< 3 ,  1 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
#if  3  <=  2 
 
 
# if !( 3  == 2 &&  2  == 2)
 template void GridOut::write_svg(
 const Triangulation< 3 ,  2 > &,
 std::ostream &) const;
# endif
#endif


#if  3  <  2 

 template void GridOut::write_msh(
 const Triangulation< 3 ,  2 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 3 ,  2 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 3 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 3 ,  2 > &,
 std::ostream &,
 const Mapping< 3 ,  2 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 3 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 3 ,  2 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 3 ,  2 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 3 ,  2 >(
 const Triangulation< 3 ,  2 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 3 ,  2 > *) const;
 template void GridOut::write< 3 ,  2 >(
 const Triangulation< 3 ,  2 > &,
 std::ostream &,
 const Mapping< 3 ,  2 > *) const;

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
#if  3  <=  3 
 
 
# if !( 3  == 2 &&  3  == 2)
 template void GridOut::write_svg(
 const Triangulation< 3 ,  3 > &,
 std::ostream &) const;
# endif
#endif


#if  3  <  3 

 template void GridOut::write_msh(
 const Triangulation< 3 ,  3 > &,
 std::ostream &) const;
# ifdef DEAL_II_GMSH_WITH_API
 template void GridOut::write_msh(
 const Triangulation< 3 ,  3 > &,
 const std::string &) const;
# endif
 template void GridOut::write_ucd(
 const Triangulation< 3 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_gnuplot(
 const Triangulation< 3 ,  3 > &,
 std::ostream &,
 const Mapping< 3 ,  3 > *) const;
 template void GridOut::write_vtk(
 const Triangulation< 3 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_vtu(
 const Triangulation< 3 ,  3 > &,
 std::ostream &) const;
 template void GridOut::write_mesh_per_processor_as_vtu(
 const Triangulation< 3 ,  3 > &,
 const std::string &,
 const bool,
 const bool) const;


 template void GridOut::write< 3 ,  3 >(
 const Triangulation< 3 ,  3 > &,
 std::ostream &,
 const OutputFormat,
 const Mapping< 3 ,  3 > *) const;
 template void GridOut::write< 3 ,  3 >(
 const Triangulation< 3 ,  3 > &,
 std::ostream &,
 const Mapping< 3 ,  3 > *) const;

#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
