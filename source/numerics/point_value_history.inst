// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class PointValueHistory< 1 >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class PointValueHistory< 2 >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template class PointValueHistory< 3 >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  LinearAlgebra::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  LinearAlgebra::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  LinearAlgebra::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  LinearAlgebra::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  LinearAlgebra::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  LinearAlgebra::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(48))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(49))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(50))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(51))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(52))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(53))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::Vector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(54))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(55))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(56))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::Vector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(57))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(58))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(59))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<double>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(60))
template void
 PointValueHistory< 1 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(61))
template void
 PointValueHistory< 2 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(62))
template void
 PointValueHistory< 3 >::evaluate_field_at_requested_location(
 const std::string &, const  LinearAlgebra::distributed::BlockVector<float>  &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(63))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  Vector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(64))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  Vector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(65))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  Vector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(66))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  Vector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(67))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  Vector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(68))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  Vector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(69))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  BlockVector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(70))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  BlockVector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(71))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  BlockVector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(72))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  BlockVector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(73))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  BlockVector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(74))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  BlockVector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(75))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(76))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(77))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(78))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(79))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(80))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(81))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(82))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(83))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(84))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(85))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(86))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(87))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(88))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(89))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(90))
template void PointValueHistory< 1 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(91))
template void PointValueHistory< 2 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(92))
template void PointValueHistory< 3 >::evaluate_field(
 const std::vector<std::string> &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(93))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  Vector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(94))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  Vector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(95))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  Vector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(96))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  Vector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(97))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  Vector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(98))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  Vector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(99))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  BlockVector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(100))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  BlockVector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(101))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  BlockVector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(102))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  BlockVector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(103))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  BlockVector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(104))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  BlockVector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(105))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(106))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(107))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(108))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(109))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(110))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(111))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(112))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(113))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(114))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(115))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(116))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(117))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(118))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(119))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(120))
template void PointValueHistory< 1 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor< 1 > &,
 const Quadrature< 1 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(121))
template void PointValueHistory< 2 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor< 2 > &,
 const Quadrature< 2 > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(122))
template void PointValueHistory< 3 >::evaluate_field(
 const std::string &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor< 3 > &,
 const Quadrature< 3 > &);
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
