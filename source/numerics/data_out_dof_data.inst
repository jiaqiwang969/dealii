// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 1 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< Vector<double> >(
 const DoFHandler< 1 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< Vector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  Vector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 1 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< Vector<double> >(
 const DoFHandler< 1 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 1 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< Vector<double> >(
 const DoFHandler< 1 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 2 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< Vector<double> >(
 const DoFHandler< 2 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< Vector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  Vector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 2 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< Vector<double> >(
 const DoFHandler< 2 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 2 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< Vector<double> >(
 const DoFHandler< 2 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 3 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< Vector<double> >(
 const DoFHandler< 3 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< Vector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  Vector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 3 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< Vector<double> >(
 const DoFHandler< 3 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< Vector<double> >(
 const DoFHandler< 3 > *,
 const  Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< Vector<double> >(
 const DoFHandler< 3 > &,
 const  Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 1 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< Vector<float> >(
 const DoFHandler< 1 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< Vector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  Vector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 1 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< Vector<float> >(
 const DoFHandler< 1 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 1 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< Vector<float> >(
 const DoFHandler< 1 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 2 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< Vector<float> >(
 const DoFHandler< 2 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< Vector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  Vector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 2 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< Vector<float> >(
 const DoFHandler< 2 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 2 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< Vector<float> >(
 const DoFHandler< 2 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 3 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< Vector<float> >(
 const DoFHandler< 3 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< Vector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  Vector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 3 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< Vector<float> >(
 const DoFHandler< 3 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< Vector<float> >(
 const DoFHandler< 3 > *,
 const  Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< Vector<float> >(
 const DoFHandler< 3 > &,
 const  Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 1 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< BlockVector<double> >(
 const DoFHandler< 1 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< BlockVector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  BlockVector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 1 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< BlockVector<double> >(
 const DoFHandler< 1 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 1 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< BlockVector<double> >(
 const DoFHandler< 1 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 2 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< BlockVector<double> >(
 const DoFHandler< 2 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< BlockVector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  BlockVector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 2 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< BlockVector<double> >(
 const DoFHandler< 2 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 2 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< BlockVector<double> >(
 const DoFHandler< 2 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 3 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< BlockVector<double> >(
 const DoFHandler< 3 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< BlockVector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  BlockVector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 3 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< BlockVector<double> >(
 const DoFHandler< 3 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< BlockVector<double> >(
 const DoFHandler< 3 > *,
 const  BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< BlockVector<double> >(
 const DoFHandler< 3 > &,
 const  BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 1 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< BlockVector<float> >(
 const DoFHandler< 1 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< BlockVector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  BlockVector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 1 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< BlockVector<float> >(
 const DoFHandler< 1 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 1 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< BlockVector<float> >(
 const DoFHandler< 1 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 2 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< BlockVector<float> >(
 const DoFHandler< 2 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< BlockVector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  BlockVector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 2 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< BlockVector<float> >(
 const DoFHandler< 2 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 2 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< BlockVector<float> >(
 const DoFHandler< 2 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 3 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< BlockVector<float> >(
 const DoFHandler< 3 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< BlockVector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  BlockVector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 3 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< BlockVector<float> >(
 const DoFHandler< 3 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< BlockVector<float> >(
 const DoFHandler< 3 > *,
 const  BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< BlockVector<float> >(
 const DoFHandler< 3 > &,
 const  BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::Vector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::Vector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::Vector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::Vector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::Vector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::Vector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::Vector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::Vector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::Vector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::Vector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::Vector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::Vector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::Vector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::Vector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<double> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<double> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<double> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<double> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<double> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<double> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<float> >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<float> >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<float> > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<float> >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<float> > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<float> >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< Vector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  Vector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< Vector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  Vector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< Vector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  Vector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< Vector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  Vector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< Vector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  Vector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< Vector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  Vector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< BlockVector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  BlockVector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< BlockVector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  BlockVector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< BlockVector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  BlockVector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< BlockVector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  BlockVector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< BlockVector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< BlockVector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  BlockVector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< BlockVector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< BlockVector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  BlockVector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< BlockVector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::Vector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::Vector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::Vector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::Vector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::Vector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::Vector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::Vector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::Vector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::Vector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::Vector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::Vector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::Vector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(48))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(49))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(50))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(51))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(52))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(53))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::Vector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::Vector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::Vector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(54))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<std::complex<double> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(55))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<std::complex<double> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(56))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<double> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<std::complex<double> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<double> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<double> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<double> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(57))
template void DataOut_DoFData< 1 ,  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 1 ,  1 >::add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);


 template void DataOut_DoFData< 1 ,  1 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 1 ,  1 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<std::complex<float> > >(const DoFHandler< 1 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);



 

#if  1  < 3
 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 1 ,  1  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 1 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(58))
template void DataOut_DoFData< 2 ,  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 2 ,  2 >::add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);


 template void DataOut_DoFData< 2 ,  2 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 2 ,  2 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<std::complex<float> > >(const DoFHandler< 2 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);



 

#if  2  < 3
 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 2 ,  2  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 2 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(59))
template void DataOut_DoFData< 3 ,  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void
 DataOut_DoFData< 3 ,  3 >::add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);


 template void DataOut_DoFData< 3 ,  3 >::
 add_mg_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<float> > > &,
 const std::string &);

 template void
 DataOut_DoFData< 3 ,  3 >::add_mg_data_vector<
  LinearAlgebra::distributed::BlockVector<std::complex<float> > >(const DoFHandler< 3 > &,
 const MGLevelObject< LinearAlgebra::distributed::BlockVector<std::complex<float> > > &,
 const std::vector<std::string> &,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &);



 

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);



 

#if  3  < 3
 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector_internal< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > *,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const std::vector<std::string> &,
 const DataVectorType,
 const std::vector<
 DataComponentInterpretation::DataComponentInterpretation> &,
 const bool);

 template void DataOut_DoFData< 3 ,  3  + 1>::
 add_data_vector< LinearAlgebra::distributed::BlockVector<std::complex<float> > >(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<std::complex<float> >  &,
 const DataPostprocessor<DoFHandler< 3 >::space_dimension>
 &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(60))
template class DataOut_DoFData< 1 ,  1 >;

#if  1  < 3
 template class DataOut_DoFData< 1 ,  1  + 1>;
 template class DataOut_DoFData< 1 ,
  1 ,
  1 ,
  1  + 1>;
#endif

#if  1  >= 2
 template class DataOut_DoFData< 1 ,
  1  - 1,
  1 ,
  1 >;
#endif

#if  1  == 3
 template class DataOut_DoFData<1, 1, 1, 3>;
#endif

 namespace internal
 {
 namespace DataOutImplementation
 {
 template struct ParallelDataBase< 1 ,  1 >;
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(61))
template class DataOut_DoFData< 2 ,  2 >;

#if  2  < 3
 template class DataOut_DoFData< 2 ,  2  + 1>;
 template class DataOut_DoFData< 2 ,
  2 ,
  2 ,
  2  + 1>;
#endif

#if  2  >= 2
 template class DataOut_DoFData< 2 ,
  2  - 1,
  2 ,
  2 >;
#endif

#if  2  == 3
 template class DataOut_DoFData<1, 1, 1, 3>;
#endif

 namespace internal
 {
 namespace DataOutImplementation
 {
 template struct ParallelDataBase< 2 ,  2 >;
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(62))
template class DataOut_DoFData< 3 ,  3 >;

#if  3  < 3
 template class DataOut_DoFData< 3 ,  3  + 1>;
 template class DataOut_DoFData< 3 ,
  3 ,
  3 ,
  3  + 1>;
#endif

#if  3  >= 2
 template class DataOut_DoFData< 3 ,
  3  - 1,
  3 ,
  3 >;
#endif

#if  3  == 3
 template class DataOut_DoFData<1, 1, 1, 3>;
#endif

 namespace internal
 {
 namespace DataOutImplementation
 {
 template struct ParallelDataBase< 3 ,  3 >;
 }
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
