// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace VectorTools
 {

#if  1  ==  1 
# if  1  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 1 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 1 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace VectorTools
 {

#if  1  ==  2 
# if  1  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 1 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 1 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace VectorTools
 {

#if  1  ==  3 
# if  1  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 1 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 1 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 1 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 1 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace VectorTools
 {

#if  2  ==  1 
# if  2  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 2 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 2 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace VectorTools
 {

#if  2  ==  2 
# if  2  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 2 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 2 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace VectorTools
 {

#if  2  ==  3 
# if  2  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 2 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 2 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 2 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 2 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace VectorTools
 {

#if  3  ==  1 
# if  3  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 3 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 3 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace VectorTools
 {

#if  3  ==  2 
# if  3  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 3 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 3 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > & mapping);
# endif
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace VectorTools
 {

#if  3  ==  3 
# if  3  != 1
 template void
 compute_nonzero_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 3 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > &mapping);

 template void
 compute_nonzero_tangential_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 const std::map<types::boundary_id, const Function< 3 > *>
 & function_map,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > &mapping);

 template void
 compute_no_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > & mapping);

 template void
 compute_normal_flux_constraints(
 const DoFHandler< 3 > &dof_handler,
 const unsigned int first_vector_component,
 const std::set<types::boundary_id> & boundary_ids,
 AffineConstraints<double> & constraints,
 const Mapping< 3 > & mapping);
# endif
#endif
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
