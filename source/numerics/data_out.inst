// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  1  <=  1 
 template struct ParallelData< 1 ,
  1 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  1  <=  2 
 template struct ParallelData< 1 ,
  2 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  1  <=  3 
 template struct ParallelData< 1 ,
  3 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  2  <=  1 
 template struct ParallelData< 2 ,
  1 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  2  <=  2 
 template struct ParallelData< 2 ,
  2 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  2  <=  3 
 template struct ParallelData< 2 ,
  3 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  3  <=  1 
 template struct ParallelData< 3 ,
  1 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  3  <=  2 
 template struct ParallelData< 3 ,
  2 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace internal
 {
 namespace DataOutImplementation
 {
#if  3  <=  3 
 template struct ParallelData< 3 ,
  3 >;
#endif
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template class DataOut< 1 >;
#if  1  < 3
 template class DataOut< 1 ,  1  + 1>;
#endif

#if  1  == 3
 template class DataOut<1, 3>;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template class DataOut< 2 >;
#if  2  < 3
 template class DataOut< 2 ,  2  + 1>;
#endif

#if  2  == 3
 template class DataOut<1, 3>;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template class DataOut< 3 >;
#if  3  < 3
 template class DataOut< 3 ,  3  + 1>;
#endif

#if  3  == 3
 template class DataOut<1, 3>;
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
