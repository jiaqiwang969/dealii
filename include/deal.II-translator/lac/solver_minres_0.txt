[0.x.0]*
 Minimal residual method for symmetric matrices.
*  For the requirements on matrices and vectors in order to work with this class, see the documentation of the Solver base class.
*  Like all other solver classes, this class has a local structure called  [2.x.0]  AdditionalData which is used to pass additional parameters to the solver, like damping parameters or the number of temporary vectors. We use this additional structure instead of passing these values directly to the constructor because this makes the use of the  [2.x.1]  and other classes much easier and guarantees that these will continue to work even if number or type of the additional parameters for a certain solver changes.
*  However, since the MinRes method does not need additional data, the respective structure is empty and does not offer any functionality. The constructor has a default argument, so you may call it without the additional parameter.
*  The preconditioner has to be positive definite and symmetric
*  The algorithm is taken from the Master thesis of Astrid Battermann with some changes. The full text can be found at http://scholar.lib.vt.edu/theses/public/etd-12164379662151/etd-title.html
* 

*  [1.x.0]
*  The solve() function of this class uses the mechanism described in the Solver base class to determine convergence. This mechanism can also be used to observe the progress of the iteration.

* 
* [0.x.1]*
   Standardized data struct to pipe additional data to the solver. This   solver does not need additional data yet.  
* [0.x.2]*
   Constructor.  
* [0.x.3]*
   Constructor. Use an object of type GrowingVectorMemory as a default to   allocate memory.  
* [0.x.4]*
   Virtual destructor.  
* [0.x.5]*
   Solve the linear system  [2.x.2]  for x.  
* [0.x.6]*
    [2.x.3]  Exceptions    [2.x.4]   
* [0.x.7]*
   Exception  
* [0.x.8]*
   Implementation of the computation of the norm of the residual.  
* [0.x.9]*
   Interface for derived class. This function gets the current iteration   vector, the residual and the update vector in each step. It can be used   for graphical output of the convergence history.  
* [0.x.10]*
   Within the iteration loop, the square of the residual vector is stored in   this variable. The function  [2.x.5]  uses this variable to compute   the convergence value, which in this class is the norm of the residual   vector and thus the square root of the  [2.x.6]  value.  
* [0.x.11]