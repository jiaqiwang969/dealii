[0.x.0]*
 This class implements the first family [1.x.0]-conforming, vector-valued polynomials, proposed by J.-C. Nédélec in 1980 (Numer. Math. 35).
*  The Nédélec polynomials are constructed such that the curl is in the tensor product polynomial space [1.x.1]. Therefore, the polynomial order of each component must be one order higher in the corresponding two directions, yielding the polynomial spaces [1.x.2] and [1.x.3] in 2D and 3D, resp.
* 

* 
*  [2.x.0] 

* 
* [0.x.1]*
   Constructor. Creates all basis functions for Nédélec polynomials of   given degree.      [2.x.1]  k: the degree of the Nédélec space, which is the degree of the   largest tensor product polynomial space [1.x.4] contained.  
* [0.x.2]*
   Compute the value and the first and second derivatives of each Nédélec   polynomial at  [2.x.2]      The size of the vectors must either be zero or equal <tt>n()</tt>.  In   the first case, the function will not compute these values.     If you need values or derivatives of all tensor product polynomials then   use this function, rather than using any of the <tt>compute_value</tt>,   <tt>compute_grad</tt> or <tt>compute_grad_grad</tt> functions, see below,   in a loop over all tensor product polynomials.  
* [0.x.3]*
   Return the name of the space, which is <tt>Nedelec</tt>.  
* [0.x.4]*
   Return the number of polynomials in the space <tt>N(degree)</tt> without   requiring to build an object of PolynomialsNedelec. This is required by   the FiniteElement classes.  
* [0.x.5]*
    [2.x.3]   [2.x.4]   
* [0.x.6]*
   An object representing the polynomial space for a single component. We   can re-use it by rotating the coordinates of the evaluation point.  
* [0.x.7]*
   A static member function that creates the polynomial space we use to   initialize the #polynomial_space member variable.  
* [0.x.8]