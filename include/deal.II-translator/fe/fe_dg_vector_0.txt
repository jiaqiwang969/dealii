[0.x.0]*
 DG elements based on vector valued polynomials.
*  These elements use vector valued polynomial spaces as they have been introduced for H<sup>div</sup> and H<sup>curl</sup> conforming finite elements, but do not use the usual continuity of these elements. Thus, they are suitable for DG and hybrid formulations involving these function spaces.
*  The template argument <tt>PolynomialType</tt> refers to a vector valued polynomial space like PolynomialsRaviartThomas or PolynomialsNedelec. Note that the dimension of the polynomial space and the argument <tt>dim</tt> must coincide.
* 

* 
*  [2.x.0] 

* 
* [0.x.1]*
   Constructor for the vector element of degree  [2.x.1]   
* [0.x.2]*
   Return a string that uniquely identifies a finite element. This class   returns `FE_DGVector_` plus a piece of the name that is taken from what   the polynomial object returns, plus `<dim>(degree)`, with  [2.x.2]  and  [2.x.3]    replaced by appropriate values.  
* [0.x.3]*
   This function returns  [2.x.4]  if the shape function  [2.x.5]  has   non-zero function values somewhere on the face  [2.x.6]      For this element, we always return  [2.x.7]   
* [0.x.4]*
   Only for internal use. Its full name is  [2.x.8]    function and it creates the  [2.x.9]  vector that is needed   within the constructor to be passed to the constructor of  [2.x.10]    FiniteElementData.  
* [0.x.5]*
   Fields of cell-independent data.     For information about the general purpose of this class, see the   documentation of the base class.  
* [0.x.6]*
     Array with shape function values in quadrature points. There is one row     for each shape function, containing values for each quadrature point.     Since the shape functions are vector-valued (with as many components as     there are space dimensions), the value is a tensor.         In this array, we store the values of the shape function in the     quadrature points on the unit cell. The transformation to the real     space cell is then simply done by multiplication with the Jacobian of     the mapping.    
* [0.x.7]*
     Array with shape function gradients in quadrature points. There is one     row for each shape function, containing values for each quadrature     point.         We store the gradients in the quadrature points on the unit cell. We     then only have to apply the transformation (which is a matrix-vector     multiplication) when visiting an actual cell.    
* [0.x.8]*
 A vector-valued DG element based on the polynomials space of FE_Nedelec. This class implements a "broken" finite element space that is discontinuous between cells and on each cell has shape functions that equal those of the Nedelec element.
*  The related class FE_DGRT is used in  [2.x.11] .

* 
*  [2.x.12] 

* 
* [0.x.9]*
   Constructor for the discontinuous N&eacute;d&eacute;lec element of degree    [2.x.13]   
* [0.x.10]*
   Return a string that uniquely identifies a finite element. This class   returns <tt>FE_DGNedelec<dim>(degree)</tt>, with  [2.x.14]  and  [2.x.15]    replaced by appropriate values.  
* [0.x.11]*
 A vector-valued DG element based on the polynomials space of FE_RaviartThomas. This class implements a "broken" finite element space that is discontinuous between cells and on each cell has shape functions that equal those of the Raviart-Thomas element.
*  The class is used in  [2.x.16] .
* 

* 
*  [2.x.17] 

* 
* [0.x.12]*
   Constructor for the Raviart-Thomas element of degree  [2.x.18]   
* [0.x.13]*
   Return a string that uniquely identifies a finite element. This class   returns <tt>FE_DGRaviartThomas<dim>(degree)</tt>, with  [2.x.19]  and  [2.x.20]    degree replaced by appropriate values.  
* [0.x.14]*
 A vector-valued DG element based on the polynomials space of FE_BDM. This class implements a "broken" finite element space that is discontinuous between cells and on each cell has shape functions that equal those of the BDM element.
*  The related class FE_DGRT is used in  [2.x.21] .
* 

* 
*  [2.x.22] 

* 
* [0.x.15]*
   Constructor for the discontinuous BDM element of degree  [2.x.23]   
* [0.x.16]*
   Return a string that uniquely identifies a finite element. This class   returns <tt>FE_DGBDM<dim>(degree)</tt>, with  [2.x.24]  and  [2.x.25]    replaced by appropriate values.  
* [0.x.17]